{
	"id": "8994d3271e0353b67c6584d96353522c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/SimpleSwap.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n \npragma solidity >=0.8.2 <0.9.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\n/// @custom:dev-run-script ./scripts/deploy_with_ethers.ts\n/// @title SimpleSwap - A minimal Uniswap-like DEX for ERC-20 tokens\n/// @author Valentino Salguero\n/// @notice This contract allows users to add/remove liquidity, swap tokens, fetch price and calculate output amounts.\n/// @dev Inspired by Uniswap, but simplified for educational purposes.\ncontract SimpleSwap {\n    using SafeERC20 for IERC20;\n\n    /// @dev Stores the reserves of two tokens in a pair\n    struct Reserve {\n        uint112 reserveA;\n        uint112 reserveB;\n    }\n\n    /// @dev Maps the hash of a token pair to its reserve data\n    mapping(bytes32 => Reserve) public reserves;\n\n    /// @dev Maps the pair hash to the total liquidity of the pool\n    mapping(bytes32 => uint) public totalLiquidity;\n\n    /// @dev Tracks each user's liquidity share in a given pair\n    mapping(bytes32 => mapping(address => uint)) public liquidityBalance;\n\n    /// @notice Adds liquidity to a token pair pool\n    /// @param tokenA Address of token A\n    /// @param tokenB Address of token B\n    /// @param amountADesired Desired amount of token A to add\n    /// @param amountBDesired Desired amount of token B to add\n    /// @param amountAMin Minimum acceptable amount of token A\n    /// @param amountBMin Minimum acceptable amount of token B\n    /// @param to Recipient of the liquidity tokens\n    /// @param deadline Timestamp after which the transaction is invalid\n    /// @return amountA Actual amount of token A added\n    /// @return amountB Actual amount of token B added\n    /// @return liquidity Amount of liquidity tokens minted\n    function addLiquidity(\n        address tokenA,\n        address tokenB,\n        uint amountADesired,\n        uint amountBDesired,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountA, uint amountB, uint liquidity) {\n        require(block.timestamp <= deadline, \"Expired\");\n\n        bytes32 pairHash = _getPairHash(tokenA, tokenB);\n        Reserve storage res = reserves[pairHash]; // Get storage reference here for the original function call\n\n        // Determine how much of each token to add based on existing reserves\n        (amountA, amountB) = _calculateLiquidityAmounts(\n            res.reserveA,\n            res.reserveB,\n            amountADesired,\n            amountBDesired,\n            amountAMin,\n            amountBMin\n        );\n\n        // Perform token transfers\n        _performAddLiquidityTransfers(tokenA, tokenB, amountA, amountB);\n\n        // Mint liquidity and update reserves\n        // Pass 'res' directly to avoid re-fetching storage, improving efficiency\n        liquidity = _mintLiquidityAndUpdateReserves(pairHash, amountA, amountB, to, res);\n    }\n\n    /// @notice Removes liquidity and returns tokens to the user\n    /// @param tokenA Address of token A\n    /// @param tokenB Address of token B\n    /// @param liquidity Amount of liquidity tokens to burn\n    /// @param amountAMin Minimum acceptable amount of token A\n    /// @param amountBMin Minimum acceptable amount of token B\n    /// @param to Address to receive withdrawn tokens\n    /// @param deadline Timestamp after which the transaction is invalid\n    /// @return amountA Amount of token A received\n    /// @return amountB Amount of token B received\n    function removeLiquidity(\n        address tokenA,\n        address tokenB,\n        uint liquidity,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountA, uint amountB) {\n        require(block.timestamp <= deadline, \"Expired\");\n\n        bytes32 pairHash = _getPairHash(tokenA, tokenB);\n        Reserve storage res = reserves[pairHash];\n        uint total = totalLiquidity[pairHash];\n        require(total > 0, \"No liquidity\");\n\n        // Calculate user's share of the pool\n        amountA = res.reserveA * liquidity / total;\n        amountB = res.reserveB * liquidity / total;\n\n        require(amountA >= amountAMin && amountB >= amountBMin, \"Slippage\");\n\n        // Burn liquidity and update storage\n        liquidityBalance[pairHash][msg.sender] -= liquidity;\n        totalLiquidity[pairHash] -= liquidity;\n        res.reserveA -= uint112(amountA);\n        res.reserveB -= uint112(amountB);\n\n        // Send tokens back to user\n        IERC20(tokenA).safeTransfer(to, amountA);\n        IERC20(tokenB).safeTransfer(to, amountB);\n    }\n\n    /// @notice Swaps exact amountIn of tokenIn for tokenOut\n    /// @param amountIn Exact amount of input tokens to swap\n    /// @param amountOutMin Minimum amount of output tokens required\n    /// @param path Array with [tokenIn, tokenOut]\n    /// @param to Address to receive output tokens\n    /// @param deadline Timestamp after which the transaction is invalid\n    /// @return amounts Array containing input and output amounts\n    function swapExactTokensForTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external returns (uint[] memory amounts) {\n        require(block.timestamp <= deadline, \"Expired\");\n        require(path.length == 2, \"Only 2-token path supported\");\n\n        address tokenIn = path[0];\n        address tokenOut = path[1];\n\n        // Calculate the output amount\n        uint amountOut = _calculateSwapOutput(amountIn, tokenIn, tokenOut);\n        require(amountOut >= amountOutMin, \"Insufficient output\");\n\n        // Perform token transfer\n        _performSwapTransfers(tokenIn, tokenOut, amountIn, amountOut, to);\n\n        // Update reserves\n        _updateReservesAfterSwap(tokenIn, tokenOut, amountIn, amountOut);\n\n        // Return input/output info\n        amounts = new uint[](2);\n        amounts[0] = amountIn;\n        amounts[1] = amountOut;\n    }\n\n    /// @notice Returns the price of tokenB in terms of tokenA\n    /// @param tokenA Address of token A\n    /// @param tokenB Address of token B\n    /// @return price Price as tokenB/tokenA scaled by 1e18\n    function getPrice(address tokenA, address tokenB) external view returns (uint price) {\n        bytes32 pairHash = _getPairHash(tokenA, tokenB);\n        Reserve memory res = reserves[pairHash];\n\n        (uint reserveA, uint reserveB) = _getSortedReserves(tokenA, tokenB, res);\n        require(reserveA > 0 && reserveB > 0, \"No reserves\");\n        price = (reserveB * 1e18) / reserveA;\n    }\n\n    /// @notice Calculates output tokens for a given input using Uniswap formula\n    /// @param amountIn Input amount\n    /// @param reserveIn Reserve of input token\n    /// @param reserveOut Reserve of output token\n    /// @return amountOut Amount of output tokens after fee\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) public pure returns (uint amountOut) {\n        require(amountIn > 0 && reserveIn > 0 && reserveOut > 0, \"Invalid reserves\");\n\n        uint amountInWithFee = amountIn * 997; // 0.3% fee\n        uint numerator = amountInWithFee * reserveOut;\n        uint denominator = reserveIn * 1000 + amountInWithFee;\n        amountOut = numerator / denominator;\n    }\n\n    // --- New Internal Helper Functions for addLiquidity ---\n\n    /// @dev Calculates the optimal amounts of tokens to add for liquidity.\n    function _calculateLiquidityAmounts(\n        uint112 currentReserveA,\n        uint112 currentReserveB,\n        uint amountADesired,\n        uint amountBDesired,\n        uint amountAMin,\n        uint amountBMin\n    ) internal pure returns (uint calculatedAmountA, uint calculatedAmountB) {\n        if (currentReserveA == 0 && currentReserveB == 0) {\n            // No liquidity yet; use desired amounts\n            (calculatedAmountA, calculatedAmountB) = (amountADesired, amountBDesired);\n        } else {\n            // Maintain ratio between reserves\n            uint amountBOptimal = amountADesired * currentReserveB / currentReserveA;\n            if (amountBOptimal <= amountBDesired) {\n                require(amountBOptimal >= amountBMin, \"Insufficient B\");\n                (calculatedAmountA, calculatedAmountB) = (amountADesired, amountBOptimal);\n            } else {\n                uint amountAOptimal = amountBDesired * currentReserveA / currentReserveB;\n                require(amountAOptimal >= amountAMin, \"Insufficient A\");\n                (calculatedAmountA, calculatedAmountB) = (amountAOptimal, amountBDesired);\n            }\n        }\n    }\n\n    /// @dev Handles the token transfers for adding liquidity.\n    function _performAddLiquidityTransfers(\n        address tokenA,\n        address tokenB,\n        uint amountA,\n        uint amountB\n    ) internal {\n        IERC20(tokenA).safeTransferFrom(msg.sender, address(this), amountA);\n        IERC20(tokenB).safeTransferFrom(msg.sender, address(this), amountB);\n    }\n\n    /// @dev Mints liquidity tokens and updates pool reserves.\n    function _mintLiquidityAndUpdateReserves(\n        bytes32 pairHash,\n        uint amountA,\n        uint amountB,\n        address to,\n        Reserve storage res // Pass the storage reference directly\n    ) internal returns (uint liquidity) {\n        liquidity = amountA + amountB;\n        totalLiquidity[pairHash] += liquidity;\n        liquidityBalance[pairHash][to] += liquidity;\n\n        res.reserveA += uint112(amountA);\n        res.reserveB += uint112(amountB);\n    }\n\n    // --- Existing Internal Helper Functions for Swapping & Utilities ---\n\n    /// @dev Internal helper to calculate swap output\n    function _calculateSwapOutput(uint amountIn, address tokenIn, address tokenOut) internal view returns (uint) {\n        bytes32 pairHash = _getPairHash(tokenIn, tokenOut);\n        Reserve memory res = reserves[pairHash];\n        (uint reserveIn, uint reserveOut) = _getSortedReserves(tokenIn, tokenOut, res);\n        return getAmountOut(amountIn, reserveIn, reserveOut);\n    }\n\n    /// @dev Internal helper to perform token transfers for a swap\n    function _performSwapTransfers(address tokenIn, address tokenOut, uint amountIn, uint amountOut, address to) internal {\n        IERC20(tokenIn).safeTransferFrom(msg.sender, address(this), amountIn);\n        IERC20(tokenOut).safeTransfer(to, amountOut);\n    }\n\n    /// @dev Internal helper to update reserves after a swap\n    function _updateReservesAfterSwap(address tokenIn, address tokenOut, uint amountIn, uint amountOut) internal {\n        bytes32 pairHash = _getPairHash(tokenIn, tokenOut);\n        Reserve storage res = reserves[pairHash];\n        if (tokenIn < tokenOut) {\n            res.reserveA += uint112(amountIn);\n            res.reserveB -= uint112(amountOut);\n        } else {\n            res.reserveB += uint112(amountIn);\n            res.reserveA -= uint112(amountOut);\n        }\n    }\n\n    /// @dev Generates a unique hash for a token pair (ordered)\n    function _getPairHash(address tokenA, address tokenB) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(tokenA < tokenB ? tokenA : tokenB, tokenA < tokenB ? tokenB : tokenA));\n    }\n\n    /// @dev Sorts and returns reserves based on token order\n    function _getSortedReserves(address tokenA, address tokenB, Reserve memory res) internal pure returns (uint, uint) {\n        return tokenA < tokenB ? (res.reserveA, res.reserveB) : (res.reserveB, res.reserveA);\n    }\n}"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220902e6c721cb58e8775412412193813e7b4a379566d16d597d369d59eff2768ca64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220902e6c721cb58e8775412412193813e7b4a379566d16d597d369d59eff2768ca64736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP1 0x2E PUSH13 0x721CB58E8775412412193813E7 0xB4 LOG3 PUSH26 0x566D16D597D369D59EFF2768CA64736F6C634300081E00330000 ",
							"sourceMap": "698:9376:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220902e6c721cb58e8775412412193813e7b4a379566d16d597d369d59eff2768ca64736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP1 0x2E PUSH13 0x721CB58E8775412412193813E7 0xB4 LOG3 PUSH26 0x566D16D597D369D59EFF2768CA64736F6C634300081E00330000 ",
							"sourceMap": "698:9376:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite",
								"trySafeTransfer(contract IERC20,address,uint256)": "infinite",
								"trySafeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220902e6c721cb58e8775412412193813e7b4a379566d16d597d369d59eff2768ca64736f6c634300081e0033",
									".code": [
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/SimpleSwap.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SimpleSwap.sol": {
				"SimpleSwap": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "getPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "liquidityBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"name": "reserves",
							"outputs": [
								{
									"internalType": "uint112",
									"name": "reserveA",
									"type": "uint112"
								},
								{
									"internalType": "uint112",
									"name": "reserveB",
									"type": "uint112"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"name": "totalLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Valentino Salguero",
						"custom:dev-run-script": "./scripts/deploy_with_ethers.ts",
						"details": "Inspired by Uniswap, but simplified for educational purposes.",
						"errors": {
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": {
								"params": {
									"amountADesired": "Desired amount of token A to add",
									"amountAMin": "Minimum acceptable amount of token A",
									"amountBDesired": "Desired amount of token B to add",
									"amountBMin": "Minimum acceptable amount of token B",
									"deadline": "Timestamp after which the transaction is invalid",
									"to": "Recipient of the liquidity tokens",
									"tokenA": "Address of token A",
									"tokenB": "Address of token B"
								},
								"returns": {
									"amountA": "Actual amount of token A added",
									"amountB": "Actual amount of token B added",
									"liquidity": "Amount of liquidity tokens minted"
								}
							},
							"getAmountOut(uint256,uint256,uint256)": {
								"params": {
									"amountIn": "Input amount",
									"reserveIn": "Reserve of input token",
									"reserveOut": "Reserve of output token"
								},
								"returns": {
									"amountOut": "Amount of output tokens after fee"
								}
							},
							"getPrice(address,address)": {
								"params": {
									"tokenA": "Address of token A",
									"tokenB": "Address of token B"
								},
								"returns": {
									"price": "Price as tokenB/tokenA scaled by 1e18"
								}
							},
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": {
								"params": {
									"amountAMin": "Minimum acceptable amount of token A",
									"amountBMin": "Minimum acceptable amount of token B",
									"deadline": "Timestamp after which the transaction is invalid",
									"liquidity": "Amount of liquidity tokens to burn",
									"to": "Address to receive withdrawn tokens",
									"tokenA": "Address of token A",
									"tokenB": "Address of token B"
								},
								"returns": {
									"amountA": "Amount of token A received",
									"amountB": "Amount of token B received"
								}
							},
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": {
								"params": {
									"amountIn": "Exact amount of input tokens to swap",
									"amountOutMin": "Minimum amount of output tokens required",
									"deadline": "Timestamp after which the transaction is invalid",
									"path": "Array with [tokenIn, tokenOut]",
									"to": "Address to receive output tokens"
								},
								"returns": {
									"amounts": "Array containing input and output amounts"
								}
							}
						},
						"stateVariables": {
							"liquidityBalance": {
								"details": "Tracks each user's liquidity share in a given pair"
							},
							"reserves": {
								"details": "Maps the hash of a token pair to its reserve data"
							},
							"totalLiquidity": {
								"details": "Maps the pair hash to the total liquidity of the pool"
							}
						},
						"title": "SimpleSwap - A minimal Uniswap-like DEX for ERC-20 tokens",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SimpleSwap.sol\":544:11469  contract SimpleSwap {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SimpleSwap.sol\":544:11469  contract SimpleSwap {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xac41865a\n      gt\n      tag_11\n      jumpi\n      dup1\n      0xac41865a\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xbaa2abde\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xbb521a30\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xe8e33700\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_11:\n      dup1\n      0xbbf1e4\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x054d50d4\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x38ed1739\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x54b7a8f7\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/SimpleSwap.sol\":803:846  mapping(bytes32 => Reserve) public reserves */\n    tag_3:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_16\n      swap3\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SimpleSwap.sol\":6879:7302  function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) public pure returns (uint amountOut) {... */\n    tag_4:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SimpleSwap.sol\":5060:5997  function swapExactTokensForTokens(... */\n    tag_5:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SimpleSwap.sol\":920:966  mapping(bytes32 => uint) public totalLiquidity */\n    tag_6:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_31:\n      tag_32\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SimpleSwap.sol\":6208:6597  function getPrice(address tokenA, address tokenB) external view returns (uint price) {... */\n    tag_7:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SimpleSwap.sol\":3513:4622  function removeLiquidity(... */\n    tag_8:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_43\n      swap3\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SimpleSwap.sol\":1037:1105  mapping(bytes32 => mapping(address => uint)) public liquidityBalance */\n    tag_9:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SimpleSwap.sol\":1793:2945  function addLiquidity(... */\n    tag_10:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_54\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SimpleSwap.sol\":803:846  mapping(bytes32 => Reserve) public reserves */\n    tag_15:\n      mstore(0x20, 0x00)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x00\n      add\n      0x0e\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"contracts/SimpleSwap.sol\":6879:7302  function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) public pure returns (uint amountOut) {... */\n    tag_21:\n        /* \"contracts/SimpleSwap.sol\":6970:6984  uint amountOut */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":7015:7016  0 */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":7004:7012  amountIn */\n      dup5\n        /* \"contracts/SimpleSwap.sol\":7004:7016  amountIn > 0 */\n      gt\n        /* \"contracts/SimpleSwap.sol\":7004:7033  amountIn > 0 && reserveIn > 0 */\n      dup1\n      iszero\n      tag_57\n      jumpi\n      pop\n        /* \"contracts/SimpleSwap.sol\":7032:7033  0 */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":7020:7029  reserveIn */\n      dup4\n        /* \"contracts/SimpleSwap.sol\":7020:7033  reserveIn > 0 */\n      gt\n        /* \"contracts/SimpleSwap.sol\":7004:7033  amountIn > 0 && reserveIn > 0 */\n    tag_57:\n        /* \"contracts/SimpleSwap.sol\":7004:7051  amountIn > 0 && reserveIn > 0 && reserveOut > 0 */\n      dup1\n      iszero\n      tag_58\n      jumpi\n      pop\n        /* \"contracts/SimpleSwap.sol\":7050:7051  0 */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":7037:7047  reserveOut */\n      dup3\n        /* \"contracts/SimpleSwap.sol\":7037:7051  reserveOut > 0 */\n      gt\n        /* \"contracts/SimpleSwap.sol\":7004:7051  amountIn > 0 && reserveIn > 0 && reserveOut > 0 */\n    tag_58:\n        /* \"contracts/SimpleSwap.sol\":6996:7072  require(amountIn > 0 && reserveIn > 0 && reserveOut > 0, \"Invalid reserves\") */\n      tag_59\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_60\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_59:\n        /* \"contracts/SimpleSwap.sol\":7083:7103  uint amountInWithFee */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":7117:7120  997 */\n      0x03e5\n        /* \"contracts/SimpleSwap.sol\":7106:7114  amountIn */\n      dup6\n        /* \"contracts/SimpleSwap.sol\":7106:7120  amountIn * 997 */\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n        /* \"contracts/SimpleSwap.sol\":7083:7120  uint amountInWithFee = amountIn * 997 */\n      swap1\n      pop\n        /* \"contracts/SimpleSwap.sol\":7142:7156  uint numerator */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":7177:7187  reserveOut */\n      dup4\n        /* \"contracts/SimpleSwap.sol\":7159:7174  amountInWithFee */\n      dup3\n        /* \"contracts/SimpleSwap.sol\":7159:7187  amountInWithFee * reserveOut */\n      tag_64\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_64:\n        /* \"contracts/SimpleSwap.sol\":7142:7187  uint numerator = amountInWithFee * reserveOut */\n      swap1\n      pop\n        /* \"contracts/SimpleSwap.sol\":7197:7213  uint denominator */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":7235:7250  amountInWithFee */\n      dup3\n        /* \"contracts/SimpleSwap.sol\":7228:7232  1000 */\n      0x03e8\n        /* \"contracts/SimpleSwap.sol\":7216:7225  reserveIn */\n      dup8\n        /* \"contracts/SimpleSwap.sol\":7216:7232  reserveIn * 1000 */\n      tag_65\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_65:\n        /* \"contracts/SimpleSwap.sol\":7216:7250  reserveIn * 1000 + amountInWithFee */\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n        /* \"contracts/SimpleSwap.sol\":7197:7250  uint denominator = reserveIn * 1000 + amountInWithFee */\n      swap1\n      pop\n        /* \"contracts/SimpleSwap.sol\":7284:7295  denominator */\n      dup1\n        /* \"contracts/SimpleSwap.sol\":7272:7281  numerator */\n      dup3\n        /* \"contracts/SimpleSwap.sol\":7272:7295  numerator / denominator */\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n        /* \"contracts/SimpleSwap.sol\":7260:7295  amountOut = numerator / denominator */\n      swap4\n      pop\n        /* \"contracts/SimpleSwap.sol\":6986:7302  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/SimpleSwap.sol\":6879:7302  function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) public pure returns (uint amountOut) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SimpleSwap.sol\":5060:5997  function swapExactTokensForTokens(... */\n    tag_27:\n        /* \"contracts/SimpleSwap.sol\":5244:5265  uint[] memory amounts */\n      0x60\n        /* \"contracts/SimpleSwap.sol\":5304:5312  deadline */\n      dup2\n        /* \"contracts/SimpleSwap.sol\":5285:5300  block.timestamp */\n      timestamp\n        /* \"contracts/SimpleSwap.sol\":5285:5312  block.timestamp <= deadline */\n      gt\n      iszero\n        /* \"contracts/SimpleSwap.sol\":5277:5324  require(block.timestamp <= deadline, \"Expired\") */\n      tag_71\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_72\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_71:\n        /* \"contracts/SimpleSwap.sol\":5357:5358  2 */\n      0x02\n        /* \"contracts/SimpleSwap.sol\":5342:5346  path */\n      dup6\n      dup6\n        /* \"contracts/SimpleSwap.sol\":5342:5353  path.length */\n      swap1\n      pop\n        /* \"contracts/SimpleSwap.sol\":5342:5358  path.length == 2 */\n      eq\n        /* \"contracts/SimpleSwap.sol\":5334:5390  require(path.length == 2, \"Only 2-token path supported\") */\n      tag_74\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_75\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_74:\n        /* \"contracts/SimpleSwap.sol\":5401:5416  address tokenIn */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":5419:5423  path */\n      dup6\n      dup6\n        /* \"contracts/SimpleSwap.sol\":5424:5425  0 */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":5419:5426  path[0] */\n      dup2\n      dup2\n      lt\n      tag_77\n      jumpi\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n    tag_77:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n        /* \"contracts/SimpleSwap.sol\":5401:5426  address tokenIn = path[0] */\n      swap1\n      pop\n        /* \"contracts/SimpleSwap.sol\":5436:5452  address tokenOut */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":5455:5459  path */\n      dup7\n      dup7\n        /* \"contracts/SimpleSwap.sol\":5460:5461  1 */\n      0x01\n        /* \"contracts/SimpleSwap.sol\":5455:5462  path[1] */\n      dup2\n      dup2\n      lt\n      tag_82\n      jumpi\n      tag_83\n      tag_79\n      jump\t// in\n    tag_83:\n    tag_82:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_84:\n        /* \"contracts/SimpleSwap.sol\":5436:5462  address tokenOut = path[1] */\n      swap1\n      pop\n        /* \"contracts/SimpleSwap.sol\":5512:5526  uint amountOut */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":5529:5578  _calculateSwapOutput(amountIn, tokenIn, tokenOut) */\n      tag_85\n        /* \"contracts/SimpleSwap.sol\":5550:5558  amountIn */\n      dup11\n        /* \"contracts/SimpleSwap.sol\":5560:5567  tokenIn */\n      dup5\n        /* \"contracts/SimpleSwap.sol\":5569:5577  tokenOut */\n      dup5\n        /* \"contracts/SimpleSwap.sol\":5529:5549  _calculateSwapOutput */\n      tag_86\n        /* \"contracts/SimpleSwap.sol\":5529:5578  _calculateSwapOutput(amountIn, tokenIn, tokenOut) */\n      jump\t// in\n    tag_85:\n        /* \"contracts/SimpleSwap.sol\":5512:5578  uint amountOut = _calculateSwapOutput(amountIn, tokenIn, tokenOut) */\n      swap1\n      pop\n        /* \"contracts/SimpleSwap.sol\":5609:5621  amountOutMin */\n      dup9\n        /* \"contracts/SimpleSwap.sol\":5596:5605  amountOut */\n      dup2\n        /* \"contracts/SimpleSwap.sol\":5596:5621  amountOut >= amountOutMin */\n      lt\n      iszero\n        /* \"contracts/SimpleSwap.sol\":5588:5645  require(amountOut >= amountOutMin, \"Insufficient output\") */\n      tag_87\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_88\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_87:\n        /* \"contracts/SimpleSwap.sol\":5690:5755  _performSwapTransfers(tokenIn, tokenOut, amountIn, amountOut, to) */\n      tag_90\n        /* \"contracts/SimpleSwap.sol\":5712:5719  tokenIn */\n      dup4\n        /* \"contracts/SimpleSwap.sol\":5721:5729  tokenOut */\n      dup4\n        /* \"contracts/SimpleSwap.sol\":5731:5739  amountIn */\n      dup13\n        /* \"contracts/SimpleSwap.sol\":5741:5750  amountOut */\n      dup5\n        /* \"contracts/SimpleSwap.sol\":5752:5754  to */\n      dup11\n        /* \"contracts/SimpleSwap.sol\":5690:5711  _performSwapTransfers */\n      tag_91\n        /* \"contracts/SimpleSwap.sol\":5690:5755  _performSwapTransfers(tokenIn, tokenOut, amountIn, amountOut, to) */\n      jump\t// in\n    tag_90:\n        /* \"contracts/SimpleSwap.sol\":5793:5857  _updateReservesAfterSwap(tokenIn, tokenOut, amountIn, amountOut) */\n      tag_92\n        /* \"contracts/SimpleSwap.sol\":5818:5825  tokenIn */\n      dup4\n        /* \"contracts/SimpleSwap.sol\":5827:5835  tokenOut */\n      dup4\n        /* \"contracts/SimpleSwap.sol\":5837:5845  amountIn */\n      dup13\n        /* \"contracts/SimpleSwap.sol\":5847:5856  amountOut */\n      dup5\n        /* \"contracts/SimpleSwap.sol\":5793:5817  _updateReservesAfterSwap */\n      tag_93\n        /* \"contracts/SimpleSwap.sol\":5793:5857  _updateReservesAfterSwap(tokenIn, tokenOut, amountIn, amountOut) */\n      jump\t// in\n    tag_92:\n        /* \"contracts/SimpleSwap.sol\":5925:5926  2 */\n      0x02\n        /* \"contracts/SimpleSwap.sol\":5914:5927  new uint[](2) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_94\n      jumpi\n      tag_95\n      tag_96\n      jump\t// in\n    tag_95:\n    tag_94:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_97\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_97:\n      pop\n        /* \"contracts/SimpleSwap.sol\":5904:5927  amounts = new uint[](2) */\n      swap4\n      pop\n        /* \"contracts/SimpleSwap.sol\":5950:5958  amountIn */\n      dup10\n        /* \"contracts/SimpleSwap.sol\":5937:5944  amounts */\n      dup5\n        /* \"contracts/SimpleSwap.sol\":5945:5946  0 */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":5937:5947  amounts[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_98\n      jumpi\n      tag_99\n      tag_79\n      jump\t// in\n    tag_99:\n    tag_98:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/SimpleSwap.sol\":5937:5958  amounts[0] = amountIn */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/SimpleSwap.sol\":5981:5990  amountOut */\n      dup1\n        /* \"contracts/SimpleSwap.sol\":5968:5975  amounts */\n      dup5\n        /* \"contracts/SimpleSwap.sol\":5976:5977  1 */\n      0x01\n        /* \"contracts/SimpleSwap.sol\":5968:5978  amounts[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_100\n      jumpi\n      tag_101\n      tag_79\n      jump\t// in\n    tag_101:\n    tag_100:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/SimpleSwap.sol\":5968:5990  amounts[1] = amountOut */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/SimpleSwap.sol\":5267:5997  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/SimpleSwap.sol\":5060:5997  function swapExactTokensForTokens(... */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SimpleSwap.sol\":920:966  mapping(bytes32 => uint) public totalLiquidity */\n    tag_32:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/SimpleSwap.sol\":6208:6597  function getPrice(address tokenA, address tokenB) external view returns (uint price) {... */\n    tag_37:\n        /* \"contracts/SimpleSwap.sol\":6281:6291  uint price */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":6303:6319  bytes32 pairHash */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":6322:6350  _getPairHash(tokenA, tokenB) */\n      tag_103\n        /* \"contracts/SimpleSwap.sol\":6335:6341  tokenA */\n      dup5\n        /* \"contracts/SimpleSwap.sol\":6343:6349  tokenB */\n      dup5\n        /* \"contracts/SimpleSwap.sol\":6322:6334  _getPairHash */\n      tag_104\n        /* \"contracts/SimpleSwap.sol\":6322:6350  _getPairHash(tokenA, tokenB) */\n      jump\t// in\n    tag_103:\n        /* \"contracts/SimpleSwap.sol\":6303:6350  bytes32 pairHash = _getPairHash(tokenA, tokenB) */\n      swap1\n      pop\n        /* \"contracts/SimpleSwap.sol\":6360:6378  Reserve memory res */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":6381:6389  reserves */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":6381:6399  reserves[pairHash] */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":6390:6398  pairHash */\n      dup4\n        /* \"contracts/SimpleSwap.sol\":6381:6399  reserves[pairHash] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/SimpleSwap.sol\":6360:6399  Reserve memory res = reserves[pairHash] */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x0e\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/SimpleSwap.sol\":6411:6424  uint reserveA */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":6426:6439  uint reserveB */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":6443:6482  _getSortedReserves(tokenA, tokenB, res) */\n      tag_105\n        /* \"contracts/SimpleSwap.sol\":6462:6468  tokenA */\n      dup8\n        /* \"contracts/SimpleSwap.sol\":6470:6476  tokenB */\n      dup8\n        /* \"contracts/SimpleSwap.sol\":6478:6481  res */\n      dup6\n        /* \"contracts/SimpleSwap.sol\":6443:6461  _getSortedReserves */\n      tag_106\n        /* \"contracts/SimpleSwap.sol\":6443:6482  _getSortedReserves(tokenA, tokenB, res) */\n      jump\t// in\n    tag_105:\n        /* \"contracts/SimpleSwap.sol\":6410:6482  (uint reserveA, uint reserveB) = _getSortedReserves(tokenA, tokenB, res) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/SimpleSwap.sol\":6511:6512  0 */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":6500:6508  reserveA */\n      dup3\n        /* \"contracts/SimpleSwap.sol\":6500:6512  reserveA > 0 */\n      gt\n        /* \"contracts/SimpleSwap.sol\":6500:6528  reserveA > 0 && reserveB > 0 */\n      dup1\n      iszero\n      tag_107\n      jumpi\n      pop\n        /* \"contracts/SimpleSwap.sol\":6527:6528  0 */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":6516:6524  reserveB */\n      dup2\n        /* \"contracts/SimpleSwap.sol\":6516:6528  reserveB > 0 */\n      gt\n        /* \"contracts/SimpleSwap.sol\":6500:6528  reserveA > 0 && reserveB > 0 */\n    tag_107:\n        /* \"contracts/SimpleSwap.sol\":6492:6544  require(reserveA > 0 && reserveB > 0, \"No reserves\") */\n      tag_108\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_109\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_108:\n        /* \"contracts/SimpleSwap.sol\":6582:6590  reserveA */\n      dup2\n        /* \"contracts/SimpleSwap.sol\":6574:6578  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/SimpleSwap.sol\":6563:6571  reserveB */\n      dup3\n        /* \"contracts/SimpleSwap.sol\":6563:6578  reserveB * 1e18 */\n      tag_111\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_111:\n        /* \"contracts/SimpleSwap.sol\":6562:6590  (reserveB * 1e18) / reserveA */\n      tag_112\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_112:\n        /* \"contracts/SimpleSwap.sol\":6554:6590  price = (reserveB * 1e18) / reserveA */\n      swap5\n      pop\n        /* \"contracts/SimpleSwap.sol\":6293:6597  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/SimpleSwap.sol\":6208:6597  function getPrice(address tokenA, address tokenB) external view returns (uint price) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SimpleSwap.sol\":3513:4622  function removeLiquidity(... */\n    tag_42:\n        /* \"contracts/SimpleSwap.sol\":3727:3739  uint amountA */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":3741:3753  uint amountB */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":3792:3800  deadline */\n      dup3\n        /* \"contracts/SimpleSwap.sol\":3773:3788  block.timestamp */\n      timestamp\n        /* \"contracts/SimpleSwap.sol\":3773:3800  block.timestamp <= deadline */\n      gt\n      iszero\n        /* \"contracts/SimpleSwap.sol\":3765:3812  require(block.timestamp <= deadline, \"Expired\") */\n      tag_114\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_115\n      swap1\n      tag_73\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_114:\n        /* \"contracts/SimpleSwap.sol\":3823:3839  bytes32 pairHash */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":3842:3870  _getPairHash(tokenA, tokenB) */\n      tag_116\n        /* \"contracts/SimpleSwap.sol\":3855:3861  tokenA */\n      dup11\n        /* \"contracts/SimpleSwap.sol\":3863:3869  tokenB */\n      dup11\n        /* \"contracts/SimpleSwap.sol\":3842:3854  _getPairHash */\n      tag_104\n        /* \"contracts/SimpleSwap.sol\":3842:3870  _getPairHash(tokenA, tokenB) */\n      jump\t// in\n    tag_116:\n        /* \"contracts/SimpleSwap.sol\":3823:3870  bytes32 pairHash = _getPairHash(tokenA, tokenB) */\n      swap1\n      pop\n        /* \"contracts/SimpleSwap.sol\":3880:3899  Reserve storage res */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":3902:3910  reserves */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":3902:3920  reserves[pairHash] */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":3911:3919  pairHash */\n      dup4\n        /* \"contracts/SimpleSwap.sol\":3902:3920  reserves[pairHash] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/SimpleSwap.sol\":3880:3920  Reserve storage res = reserves[pairHash] */\n      swap1\n      pop\n        /* \"contracts/SimpleSwap.sol\":3930:3940  uint total */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":3943:3957  totalLiquidity */\n      0x01\n        /* \"contracts/SimpleSwap.sol\":3943:3967  totalLiquidity[pairHash] */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":3958:3966  pairHash */\n      dup5\n        /* \"contracts/SimpleSwap.sol\":3943:3967  totalLiquidity[pairHash] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/SimpleSwap.sol\":3930:3967  uint total = totalLiquidity[pairHash] */\n      swap1\n      pop\n        /* \"contracts/SimpleSwap.sol\":3993:3994  0 */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":3985:3990  total */\n      dup2\n        /* \"contracts/SimpleSwap.sol\":3985:3994  total > 0 */\n      gt\n        /* \"contracts/SimpleSwap.sol\":3977:4011  require(total > 0, \"No liquidity\") */\n      tag_117\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_118\n      swap1\n      tag_119\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_117:\n        /* \"contracts/SimpleSwap.sol\":4105:4110  total */\n      dup1\n        /* \"contracts/SimpleSwap.sol\":4093:4102  liquidity */\n      dup11\n        /* \"contracts/SimpleSwap.sol\":4078:4081  res */\n      dup4\n        /* \"contracts/SimpleSwap.sol\":4078:4090  res.reserveA */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SimpleSwap.sol\":4078:4102  res.reserveA * liquidity */\n      0xffffffffffffffffffffffffffff\n      and\n      tag_120\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_120:\n        /* \"contracts/SimpleSwap.sol\":4078:4110  res.reserveA * liquidity / total */\n      tag_121\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_121:\n        /* \"contracts/SimpleSwap.sol\":4068:4110  amountA = res.reserveA * liquidity / total */\n      swap5\n      pop\n        /* \"contracts/SimpleSwap.sol\":4157:4162  total */\n      dup1\n        /* \"contracts/SimpleSwap.sol\":4145:4154  liquidity */\n      dup11\n        /* \"contracts/SimpleSwap.sol\":4130:4133  res */\n      dup4\n        /* \"contracts/SimpleSwap.sol\":4130:4142  res.reserveB */\n      0x00\n      add\n      0x0e\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SimpleSwap.sol\":4130:4154  res.reserveB * liquidity */\n      0xffffffffffffffffffffffffffff\n      and\n      tag_122\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_122:\n        /* \"contracts/SimpleSwap.sol\":4130:4162  res.reserveB * liquidity / total */\n      tag_123\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_123:\n        /* \"contracts/SimpleSwap.sol\":4120:4162  amountB = res.reserveB * liquidity / total */\n      swap4\n      pop\n        /* \"contracts/SimpleSwap.sol\":4192:4202  amountAMin */\n      dup9\n        /* \"contracts/SimpleSwap.sol\":4181:4188  amountA */\n      dup6\n        /* \"contracts/SimpleSwap.sol\":4181:4202  amountA >= amountAMin */\n      lt\n      iszero\n        /* \"contracts/SimpleSwap.sol\":4181:4227  amountA >= amountAMin && amountB >= amountBMin */\n      dup1\n      iszero\n      tag_124\n      jumpi\n      pop\n        /* \"contracts/SimpleSwap.sol\":4217:4227  amountBMin */\n      dup8\n        /* \"contracts/SimpleSwap.sol\":4206:4213  amountB */\n      dup5\n        /* \"contracts/SimpleSwap.sol\":4206:4227  amountB >= amountBMin */\n      lt\n      iszero\n        /* \"contracts/SimpleSwap.sol\":4181:4227  amountA >= amountAMin && amountB >= amountBMin */\n    tag_124:\n        /* \"contracts/SimpleSwap.sol\":4173:4240  require(amountA >= amountAMin && amountB >= amountBMin, \"Slippage\") */\n      tag_125\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_126\n      swap1\n      tag_127\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_125:\n        /* \"contracts/SimpleSwap.sol\":4338:4347  liquidity */\n      dup10\n        /* \"contracts/SimpleSwap.sol\":4296:4312  liquidityBalance */\n      0x02\n        /* \"contracts/SimpleSwap.sol\":4296:4322  liquidityBalance[pairHash] */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":4313:4321  pairHash */\n      dup6\n        /* \"contracts/SimpleSwap.sol\":4296:4322  liquidityBalance[pairHash] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/SimpleSwap.sol\":4296:4334  liquidityBalance[pairHash][msg.sender] */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":4323:4333  msg.sender */\n      caller\n        /* \"contracts/SimpleSwap.sol\":4296:4334  liquidityBalance[pairHash][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/SimpleSwap.sol\":4296:4347  liquidityBalance[pairHash][msg.sender] -= liquidity */\n      dup3\n      dup3\n      sload\n      tag_128\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_128:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/SimpleSwap.sol\":4385:4394  liquidity */\n      dup10\n        /* \"contracts/SimpleSwap.sol\":4357:4371  totalLiquidity */\n      0x01\n        /* \"contracts/SimpleSwap.sol\":4357:4381  totalLiquidity[pairHash] */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":4372:4380  pairHash */\n      dup6\n        /* \"contracts/SimpleSwap.sol\":4357:4381  totalLiquidity[pairHash] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/SimpleSwap.sol\":4357:4394  totalLiquidity[pairHash] -= liquidity */\n      dup3\n      dup3\n      sload\n      tag_130\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_130:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/SimpleSwap.sol\":4428:4435  amountA */\n      dup5\n        /* \"contracts/SimpleSwap.sol\":4404:4407  res */\n      dup3\n        /* \"contracts/SimpleSwap.sol\":4404:4416  res.reserveA */\n      0x00\n      add\n      0x00\n        /* \"contracts/SimpleSwap.sol\":4404:4436  res.reserveA -= uint112(amountA) */\n      dup3\n      dup3\n      dup3\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n      tag_131\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_131:\n      swap3\n      pop\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/SimpleSwap.sol\":4470:4477  amountB */\n      dup4\n        /* \"contracts/SimpleSwap.sol\":4446:4449  res */\n      dup3\n        /* \"contracts/SimpleSwap.sol\":4446:4458  res.reserveB */\n      0x00\n      add\n      0x0e\n        /* \"contracts/SimpleSwap.sol\":4446:4478  res.reserveB -= uint112(amountB) */\n      dup3\n      dup3\n      dup3\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n      tag_133\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_133:\n      swap3\n      pop\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/SimpleSwap.sol\":4525:4565  IERC20(tokenA).safeTransfer(to, amountA) */\n      tag_134\n        /* \"contracts/SimpleSwap.sol\":4553:4555  to */\n      dup8\n        /* \"contracts/SimpleSwap.sol\":4557:4564  amountA */\n      dup7\n        /* \"contracts/SimpleSwap.sol\":4532:4538  tokenA */\n      dup15\n        /* \"contracts/SimpleSwap.sol\":4525:4552  IERC20(tokenA).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_135\n      swap1\n        /* \"contracts/SimpleSwap.sol\":4525:4565  IERC20(tokenA).safeTransfer(to, amountA) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_134:\n        /* \"contracts/SimpleSwap.sol\":4575:4615  IERC20(tokenB).safeTransfer(to, amountB) */\n      tag_136\n        /* \"contracts/SimpleSwap.sol\":4603:4605  to */\n      dup8\n        /* \"contracts/SimpleSwap.sol\":4607:4614  amountB */\n      dup6\n        /* \"contracts/SimpleSwap.sol\":4582:4588  tokenB */\n      dup14\n        /* \"contracts/SimpleSwap.sol\":4575:4602  IERC20(tokenB).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_135\n      swap1\n        /* \"contracts/SimpleSwap.sol\":4575:4615  IERC20(tokenB).safeTransfer(to, amountB) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_136:\n        /* \"contracts/SimpleSwap.sol\":3755:4622  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/SimpleSwap.sol\":3513:4622  function removeLiquidity(... */\n      swap8\n      pop\n      swap8\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SimpleSwap.sol\":1037:1105  mapping(bytes32 => mapping(address => uint)) public liquidityBalance */\n    tag_48:\n      mstore(0x20, 0x02)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/SimpleSwap.sol\":1793:2945  function addLiquidity(... */\n    tag_53:\n        /* \"contracts/SimpleSwap.sol\":2038:2050  uint amountA */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":2052:2064  uint amountB */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":2066:2080  uint liquidity */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":2119:2127  deadline */\n      dup4\n        /* \"contracts/SimpleSwap.sol\":2100:2115  block.timestamp */\n      timestamp\n        /* \"contracts/SimpleSwap.sol\":2100:2127  block.timestamp <= deadline */\n      gt\n      iszero\n        /* \"contracts/SimpleSwap.sol\":2092:2139  require(block.timestamp <= deadline, \"Expired\") */\n      tag_138\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap1\n      tag_73\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_138:\n        /* \"contracts/SimpleSwap.sol\":2150:2166  bytes32 pairHash */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":2169:2197  _getPairHash(tokenA, tokenB) */\n      tag_140\n        /* \"contracts/SimpleSwap.sol\":2182:2188  tokenA */\n      dup13\n        /* \"contracts/SimpleSwap.sol\":2190:2196  tokenB */\n      dup13\n        /* \"contracts/SimpleSwap.sol\":2169:2181  _getPairHash */\n      tag_104\n        /* \"contracts/SimpleSwap.sol\":2169:2197  _getPairHash(tokenA, tokenB) */\n      jump\t// in\n    tag_140:\n        /* \"contracts/SimpleSwap.sol\":2150:2197  bytes32 pairHash = _getPairHash(tokenA, tokenB) */\n      swap1\n      pop\n        /* \"contracts/SimpleSwap.sol\":2207:2226  Reserve storage res */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":2229:2237  reserves */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":2229:2247  reserves[pairHash] */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":2238:2246  pairHash */\n      dup4\n        /* \"contracts/SimpleSwap.sol\":2229:2247  reserves[pairHash] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/SimpleSwap.sol\":2207:2247  Reserve storage res = reserves[pairHash] */\n      swap1\n      pop\n        /* \"contracts/SimpleSwap.sol\":2418:2610  _calculateLiquidityAmounts(... */\n      tag_141\n        /* \"contracts/SimpleSwap.sol\":2458:2461  res */\n      dup2\n        /* \"contracts/SimpleSwap.sol\":2458:2470  res.reserveA */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SimpleSwap.sol\":2484:2487  res */\n      dup3\n        /* \"contracts/SimpleSwap.sol\":2484:2496  res.reserveB */\n      0x00\n      add\n      0x0e\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SimpleSwap.sol\":2510:2524  amountADesired */\n      dup14\n        /* \"contracts/SimpleSwap.sol\":2538:2552  amountBDesired */\n      dup14\n        /* \"contracts/SimpleSwap.sol\":2566:2576  amountAMin */\n      dup14\n        /* \"contracts/SimpleSwap.sol\":2590:2600  amountBMin */\n      dup14\n        /* \"contracts/SimpleSwap.sol\":2418:2444  _calculateLiquidityAmounts */\n      tag_142\n        /* \"contracts/SimpleSwap.sol\":2418:2610  _calculateLiquidityAmounts(... */\n      jump\t// in\n    tag_141:\n        /* \"contracts/SimpleSwap.sol\":2397:2610  (amountA, amountB) = _calculateLiquidityAmounts(... */\n      dup1\n      swap6\n      pop\n      dup2\n      swap7\n      pop\n      pop\n      pop\n        /* \"contracts/SimpleSwap.sol\":2656:2719  _performAddLiquidityTransfers(tokenA, tokenB, amountA, amountB) */\n      tag_143\n        /* \"contracts/SimpleSwap.sol\":2686:2692  tokenA */\n      dup14\n        /* \"contracts/SimpleSwap.sol\":2694:2700  tokenB */\n      dup14\n        /* \"contracts/SimpleSwap.sol\":2702:2709  amountA */\n      dup8\n        /* \"contracts/SimpleSwap.sol\":2711:2718  amountB */\n      dup8\n        /* \"contracts/SimpleSwap.sol\":2656:2685  _performAddLiquidityTransfers */\n      tag_144\n        /* \"contracts/SimpleSwap.sol\":2656:2719  _performAddLiquidityTransfers(tokenA, tokenB, amountA, amountB) */\n      jump\t// in\n    tag_143:\n        /* \"contracts/SimpleSwap.sol\":2870:2938  _mintLiquidityAndUpdateReserves(pairHash, amountA, amountB, to, res) */\n      tag_145\n        /* \"contracts/SimpleSwap.sol\":2902:2910  pairHash */\n      dup3\n        /* \"contracts/SimpleSwap.sol\":2912:2919  amountA */\n      dup7\n        /* \"contracts/SimpleSwap.sol\":2921:2928  amountB */\n      dup7\n        /* \"contracts/SimpleSwap.sol\":2930:2932  to */\n      dup11\n        /* \"contracts/SimpleSwap.sol\":2934:2937  res */\n      dup6\n        /* \"contracts/SimpleSwap.sol\":2870:2901  _mintLiquidityAndUpdateReserves */\n      tag_146\n        /* \"contracts/SimpleSwap.sol\":2870:2938  _mintLiquidityAndUpdateReserves(pairHash, amountA, amountB, to, res) */\n      jump\t// in\n    tag_145:\n        /* \"contracts/SimpleSwap.sol\":2858:2938  liquidity = _mintLiquidityAndUpdateReserves(pairHash, amountA, amountB, to, res) */\n      swap3\n      pop\n        /* \"contracts/SimpleSwap.sol\":2082:2945  {... */\n      pop\n      pop\n        /* \"contracts/SimpleSwap.sol\":1793:2945  function addLiquidity(... */\n      swap9\n      pop\n      swap9\n      pop\n      swap9\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SimpleSwap.sol\":9657:10032  function _calculateSwapOutput(uint amountIn, address tokenIn, address tokenOut) internal view returns (uint) {... */\n    tag_86:\n        /* \"contracts/SimpleSwap.sol\":9760:9764  uint */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":9776:9792  bytes32 pairHash */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":9795:9826  _getPairHash(tokenIn, tokenOut) */\n      tag_148\n        /* \"contracts/SimpleSwap.sol\":9808:9815  tokenIn */\n      dup5\n        /* \"contracts/SimpleSwap.sol\":9817:9825  tokenOut */\n      dup5\n        /* \"contracts/SimpleSwap.sol\":9795:9807  _getPairHash */\n      tag_104\n        /* \"contracts/SimpleSwap.sol\":9795:9826  _getPairHash(tokenIn, tokenOut) */\n      jump\t// in\n    tag_148:\n        /* \"contracts/SimpleSwap.sol\":9776:9826  bytes32 pairHash = _getPairHash(tokenIn, tokenOut) */\n      swap1\n      pop\n        /* \"contracts/SimpleSwap.sol\":9836:9854  Reserve memory res */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":9857:9865  reserves */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":9857:9875  reserves[pairHash] */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":9866:9874  pairHash */\n      dup4\n        /* \"contracts/SimpleSwap.sol\":9857:9875  reserves[pairHash] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/SimpleSwap.sol\":9836:9875  Reserve memory res = reserves[pairHash] */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x0e\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/SimpleSwap.sol\":9886:9900  uint reserveIn */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":9902:9917  uint reserveOut */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":9921:9963  _getSortedReserves(tokenIn, tokenOut, res) */\n      tag_149\n        /* \"contracts/SimpleSwap.sol\":9940:9947  tokenIn */\n      dup8\n        /* \"contracts/SimpleSwap.sol\":9949:9957  tokenOut */\n      dup8\n        /* \"contracts/SimpleSwap.sol\":9959:9962  res */\n      dup6\n        /* \"contracts/SimpleSwap.sol\":9921:9939  _getSortedReserves */\n      tag_106\n        /* \"contracts/SimpleSwap.sol\":9921:9963  _getSortedReserves(tokenIn, tokenOut, res) */\n      jump\t// in\n    tag_149:\n        /* \"contracts/SimpleSwap.sol\":9885:9963  (uint reserveIn, uint reserveOut) = _getSortedReserves(tokenIn, tokenOut, res) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/SimpleSwap.sol\":9980:10025  getAmountOut(amountIn, reserveIn, reserveOut) */\n      tag_150\n        /* \"contracts/SimpleSwap.sol\":9993:10001  amountIn */\n      dup9\n        /* \"contracts/SimpleSwap.sol\":10003:10012  reserveIn */\n      dup4\n        /* \"contracts/SimpleSwap.sol\":10014:10024  reserveOut */\n      dup4\n        /* \"contracts/SimpleSwap.sol\":9980:9992  getAmountOut */\n      tag_21\n        /* \"contracts/SimpleSwap.sol\":9980:10025  getAmountOut(amountIn, reserveIn, reserveOut) */\n      jump\t// in\n    tag_150:\n        /* \"contracts/SimpleSwap.sol\":9973:10025  return getAmountOut(amountIn, reserveIn, reserveOut) */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/SimpleSwap.sol\":9657:10032  function _calculateSwapOutput(uint amountIn, address tokenIn, address tokenOut) internal view returns (uint) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SimpleSwap.sol\":10105:10363  function _performSwapTransfers(address tokenIn, address tokenOut, uint amountIn, uint amountOut, address to) internal {... */\n    tag_91:\n        /* \"contracts/SimpleSwap.sol\":10233:10302  IERC20(tokenIn).safeTransferFrom(msg.sender, address(this), amountIn) */\n      tag_152\n        /* \"contracts/SimpleSwap.sol\":10266:10276  msg.sender */\n      caller\n        /* \"contracts/SimpleSwap.sol\":10286:10290  this */\n      address\n        /* \"contracts/SimpleSwap.sol\":10293:10301  amountIn */\n      dup6\n        /* \"contracts/SimpleSwap.sol\":10240:10247  tokenIn */\n      dup9\n        /* \"contracts/SimpleSwap.sol\":10233:10265  IERC20(tokenIn).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_153\n      swap1\n        /* \"contracts/SimpleSwap.sol\":10233:10302  IERC20(tokenIn).safeTransferFrom(msg.sender, address(this), amountIn) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_152:\n        /* \"contracts/SimpleSwap.sol\":10312:10356  IERC20(tokenOut).safeTransfer(to, amountOut) */\n      tag_154\n        /* \"contracts/SimpleSwap.sol\":10342:10344  to */\n      dup2\n        /* \"contracts/SimpleSwap.sol\":10346:10355  amountOut */\n      dup4\n        /* \"contracts/SimpleSwap.sol\":10319:10327  tokenOut */\n      dup7\n        /* \"contracts/SimpleSwap.sol\":10312:10341  IERC20(tokenOut).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_135\n      swap1\n        /* \"contracts/SimpleSwap.sol\":10312:10356  IERC20(tokenOut).safeTransfer(to, amountOut) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_154:\n        /* \"contracts/SimpleSwap.sol\":10105:10363  function _performSwapTransfers(address tokenIn, address tokenOut, uint amountIn, uint amountOut, address to) internal {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SimpleSwap.sol\":10430:10907  function _updateReservesAfterSwap(address tokenIn, address tokenOut, uint amountIn, uint amountOut) internal {... */\n    tag_93:\n        /* \"contracts/SimpleSwap.sol\":10549:10565  bytes32 pairHash */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":10568:10599  _getPairHash(tokenIn, tokenOut) */\n      tag_156\n        /* \"contracts/SimpleSwap.sol\":10581:10588  tokenIn */\n      dup6\n        /* \"contracts/SimpleSwap.sol\":10590:10598  tokenOut */\n      dup6\n        /* \"contracts/SimpleSwap.sol\":10568:10580  _getPairHash */\n      tag_104\n        /* \"contracts/SimpleSwap.sol\":10568:10599  _getPairHash(tokenIn, tokenOut) */\n      jump\t// in\n    tag_156:\n        /* \"contracts/SimpleSwap.sol\":10549:10599  bytes32 pairHash = _getPairHash(tokenIn, tokenOut) */\n      swap1\n      pop\n        /* \"contracts/SimpleSwap.sol\":10609:10628  Reserve storage res */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":10631:10639  reserves */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":10631:10649  reserves[pairHash] */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":10640:10648  pairHash */\n      dup4\n        /* \"contracts/SimpleSwap.sol\":10631:10649  reserves[pairHash] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/SimpleSwap.sol\":10609:10649  Reserve storage res = reserves[pairHash] */\n      swap1\n      pop\n        /* \"contracts/SimpleSwap.sol\":10673:10681  tokenOut */\n      dup5\n        /* \"contracts/SimpleSwap.sol\":10663:10681  tokenIn < tokenOut */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SimpleSwap.sol\":10663:10670  tokenIn */\n      dup7\n        /* \"contracts/SimpleSwap.sol\":10663:10681  tokenIn < tokenOut */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      lt\n        /* \"contracts/SimpleSwap.sol\":10659:10901  if (tokenIn < tokenOut) {... */\n      iszero\n      tag_157\n      jumpi\n        /* \"contracts/SimpleSwap.sol\":10721:10729  amountIn */\n      dup4\n        /* \"contracts/SimpleSwap.sol\":10697:10700  res */\n      dup2\n        /* \"contracts/SimpleSwap.sol\":10697:10709  res.reserveA */\n      0x00\n      add\n      0x00\n        /* \"contracts/SimpleSwap.sol\":10697:10730  res.reserveA += uint112(amountIn) */\n      dup3\n      dup3\n      dup3\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n      tag_158\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_158:\n      swap3\n      pop\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/SimpleSwap.sol\":10768:10777  amountOut */\n      dup3\n        /* \"contracts/SimpleSwap.sol\":10744:10747  res */\n      dup2\n        /* \"contracts/SimpleSwap.sol\":10744:10756  res.reserveB */\n      0x00\n      add\n      0x0e\n        /* \"contracts/SimpleSwap.sol\":10744:10778  res.reserveB -= uint112(amountOut) */\n      dup3\n      dup3\n      dup3\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n      tag_160\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_160:\n      swap3\n      pop\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/SimpleSwap.sol\":10659:10901  if (tokenIn < tokenOut) {... */\n      jump(tag_161)\n    tag_157:\n        /* \"contracts/SimpleSwap.sol\":10833:10841  amountIn */\n      dup4\n        /* \"contracts/SimpleSwap.sol\":10809:10812  res */\n      dup2\n        /* \"contracts/SimpleSwap.sol\":10809:10821  res.reserveB */\n      0x00\n      add\n      0x0e\n        /* \"contracts/SimpleSwap.sol\":10809:10842  res.reserveB += uint112(amountIn) */\n      dup3\n      dup3\n      dup3\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n      tag_162\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_162:\n      swap3\n      pop\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/SimpleSwap.sol\":10880:10889  amountOut */\n      dup3\n        /* \"contracts/SimpleSwap.sol\":10856:10859  res */\n      dup2\n        /* \"contracts/SimpleSwap.sol\":10856:10868  res.reserveA */\n      0x00\n      add\n      0x00\n        /* \"contracts/SimpleSwap.sol\":10856:10890  res.reserveA -= uint112(amountOut) */\n      dup3\n      dup3\n      dup3\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n      tag_163\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_163:\n      swap3\n      pop\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/SimpleSwap.sol\":10659:10901  if (tokenIn < tokenOut) {... */\n    tag_161:\n        /* \"contracts/SimpleSwap.sol\":10539:10907  {... */\n      pop\n      pop\n        /* \"contracts/SimpleSwap.sol\":10430:10907  function _updateReservesAfterSwap(address tokenIn, address tokenOut, uint amountIn, uint amountOut) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SimpleSwap.sol\":10977:11184  function _getPairHash(address tokenA, address tokenB) internal pure returns (bytes32) {... */\n    tag_104:\n        /* \"contracts/SimpleSwap.sol\":11054:11061  bytes32 */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":11116:11122  tokenB */\n      dup2\n        /* \"contracts/SimpleSwap.sol\":11107:11122  tokenA < tokenB */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SimpleSwap.sol\":11107:11113  tokenA */\n      dup4\n        /* \"contracts/SimpleSwap.sol\":11107:11122  tokenA < tokenB */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      lt\n        /* \"contracts/SimpleSwap.sol\":11107:11140  tokenA < tokenB ? tokenA : tokenB */\n      tag_165\n      jumpi\n        /* \"contracts/SimpleSwap.sol\":11134:11140  tokenB */\n      dup2\n        /* \"contracts/SimpleSwap.sol\":11107:11140  tokenA < tokenB ? tokenA : tokenB */\n      jump(tag_166)\n    tag_165:\n        /* \"contracts/SimpleSwap.sol\":11125:11131  tokenA */\n      dup3\n        /* \"contracts/SimpleSwap.sol\":11107:11140  tokenA < tokenB ? tokenA : tokenB */\n    tag_166:\n        /* \"contracts/SimpleSwap.sol\":11151:11157  tokenB */\n      dup3\n        /* \"contracts/SimpleSwap.sol\":11142:11157  tokenA < tokenB */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SimpleSwap.sol\":11142:11148  tokenA */\n      dup5\n        /* \"contracts/SimpleSwap.sol\":11142:11157  tokenA < tokenB */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      lt\n        /* \"contracts/SimpleSwap.sol\":11142:11175  tokenA < tokenB ? tokenB : tokenA */\n      tag_167\n      jumpi\n        /* \"contracts/SimpleSwap.sol\":11169:11175  tokenA */\n      dup4\n        /* \"contracts/SimpleSwap.sol\":11142:11175  tokenA < tokenB ? tokenB : tokenA */\n      jump(tag_168)\n    tag_167:\n        /* \"contracts/SimpleSwap.sol\":11160:11166  tokenB */\n      dup3\n        /* \"contracts/SimpleSwap.sol\":11142:11175  tokenA < tokenB ? tokenB : tokenA */\n    tag_168:\n        /* \"contracts/SimpleSwap.sol\":11090:11176  abi.encodePacked(tokenA < tokenB ? tokenA : tokenB, tokenA < tokenB ? tokenB : tokenA) */\n      add(0x20, mload(0x40))\n      tag_169\n      swap3\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_169:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/SimpleSwap.sol\":11080:11177  keccak256(abi.encodePacked(tokenA < tokenB ? tokenA : tokenB, tokenA < tokenB ? tokenB : tokenA)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/SimpleSwap.sol\":11073:11177  return keccak256(abi.encodePacked(tokenA < tokenB ? tokenA : tokenB, tokenA < tokenB ? tokenB : tokenA)) */\n      swap1\n      pop\n        /* \"contracts/SimpleSwap.sol\":10977:11184  function _getPairHash(address tokenA, address tokenB) internal pure returns (bytes32) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SimpleSwap.sol\":11251:11467  function _getSortedReserves(address tokenA, address tokenB, Reserve memory res) internal pure returns (uint, uint) {... */\n    tag_106:\n        /* \"contracts/SimpleSwap.sol\":11354:11358  uint */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":11360:11364  uint */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":11392:11398  tokenB */\n      dup4\n        /* \"contracts/SimpleSwap.sol\":11383:11398  tokenA < tokenB */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SimpleSwap.sol\":11383:11389  tokenA */\n      dup6\n        /* \"contracts/SimpleSwap.sol\":11383:11398  tokenA < tokenB */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      lt\n        /* \"contracts/SimpleSwap.sol\":11383:11460  tokenA < tokenB ? (res.reserveA, res.reserveB) : (res.reserveB, res.reserveA) */\n      tag_172\n      jumpi\n        /* \"contracts/SimpleSwap.sol\":11433:11436  res */\n      dup3\n        /* \"contracts/SimpleSwap.sol\":11433:11445  res.reserveB */\n      0x20\n      add\n      mload\n        /* \"contracts/SimpleSwap.sol\":11447:11450  res */\n      dup4\n        /* \"contracts/SimpleSwap.sol\":11447:11459  res.reserveA */\n      0x00\n      add\n      mload\n        /* \"contracts/SimpleSwap.sol\":11383:11460  tokenA < tokenB ? (res.reserveA, res.reserveB) : (res.reserveB, res.reserveA) */\n      jump(tag_173)\n    tag_172:\n        /* \"contracts/SimpleSwap.sol\":11402:11405  res */\n      dup3\n        /* \"contracts/SimpleSwap.sol\":11402:11414  res.reserveA */\n      0x00\n      add\n      mload\n        /* \"contracts/SimpleSwap.sol\":11416:11419  res */\n      dup4\n        /* \"contracts/SimpleSwap.sol\":11416:11428  res.reserveB */\n      0x20\n      add\n      mload\n        /* \"contracts/SimpleSwap.sol\":11383:11460  tokenA < tokenB ? (res.reserveA, res.reserveB) : (res.reserveB, res.reserveA) */\n    tag_173:\n        /* \"contracts/SimpleSwap.sol\":11376:11460  return tokenA < tokenB ? (res.reserveA, res.reserveB) : (res.reserveB, res.reserveA) */\n      dup2\n      0xffffffffffffffffffffffffffff\n      and\n      swap2\n      pop\n      dup1\n      0xffffffffffffffffffffffffffff\n      and\n      swap1\n      pop\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/SimpleSwap.sol\":11251:11467  function _getSortedReserves(address tokenA, address tokenB, Reserve memory res) internal pure returns (uint, uint) {... */\n      swap4\n      pop\n      swap4\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_135:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_175\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1321:1326  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1348  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1357  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1360:1362  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1364:1369  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_176\n      swap3\n      swap2\n      swap1\n      tag_177\n      jump\t// in\n    tag_176:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1320  _callOptionalReturn */\n      tag_178\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_175:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SimpleSwap.sol\":7447:8606  function _calculateLiquidityAmounts(... */\n    tag_142:\n        /* \"contracts/SimpleSwap.sol\":7686:7708  uint calculatedAmountA */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":7710:7732  uint calculatedAmountB */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":7767:7768  0 */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":7748:7763  currentReserveA */\n      dup9\n        /* \"contracts/SimpleSwap.sol\":7748:7768  currentReserveA == 0 */\n      0xffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/SimpleSwap.sol\":7748:7792  currentReserveA == 0 && currentReserveB == 0 */\n      dup1\n      iszero\n      tag_180\n      jumpi\n      pop\n        /* \"contracts/SimpleSwap.sol\":7791:7792  0 */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":7772:7787  currentReserveB */\n      dup8\n        /* \"contracts/SimpleSwap.sol\":7772:7792  currentReserveB == 0 */\n      0xffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/SimpleSwap.sol\":7748:7792  currentReserveA == 0 && currentReserveB == 0 */\n    tag_180:\n        /* \"contracts/SimpleSwap.sol\":7744:8600  if (currentReserveA == 0 && currentReserveB == 0) {... */\n      iszero\n      tag_181\n      jumpi\n        /* \"contracts/SimpleSwap.sol\":7903:7917  amountADesired */\n      dup6\n        /* \"contracts/SimpleSwap.sol\":7919:7933  amountBDesired */\n      dup6\n        /* \"contracts/SimpleSwap.sol\":7861:7934  (calculatedAmountA, calculatedAmountB) = (amountADesired, amountBDesired) */\n      dup1\n      swap3\n      pop\n      dup2\n      swap4\n      pop\n      pop\n      pop\n        /* \"contracts/SimpleSwap.sol\":7744:8600  if (currentReserveA == 0 && currentReserveB == 0) {... */\n      jump(tag_182)\n    tag_181:\n        /* \"contracts/SimpleSwap.sol\":8012:8031  uint amountBOptimal */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":8069:8084  currentReserveA */\n      dup9\n        /* \"contracts/SimpleSwap.sol\":8034:8084  amountADesired * currentReserveB / currentReserveA */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SimpleSwap.sol\":8051:8066  currentReserveB */\n      dup9\n        /* \"contracts/SimpleSwap.sol\":8034:8066  amountADesired * currentReserveB */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SimpleSwap.sol\":8034:8048  amountADesired */\n      dup9\n        /* \"contracts/SimpleSwap.sol\":8034:8066  amountADesired * currentReserveB */\n      tag_183\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_183:\n        /* \"contracts/SimpleSwap.sol\":8034:8084  amountADesired * currentReserveB / currentReserveA */\n      tag_184\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_184:\n        /* \"contracts/SimpleSwap.sol\":8012:8084  uint amountBOptimal = amountADesired * currentReserveB / currentReserveA */\n      swap1\n      pop\n        /* \"contracts/SimpleSwap.sol\":8120:8134  amountBDesired */\n      dup6\n        /* \"contracts/SimpleSwap.sol\":8102:8116  amountBOptimal */\n      dup2\n        /* \"contracts/SimpleSwap.sol\":8102:8134  amountBOptimal <= amountBDesired */\n      gt\n        /* \"contracts/SimpleSwap.sol\":8098:8590  if (amountBOptimal <= amountBDesired) {... */\n      tag_185\n      jumpi\n        /* \"contracts/SimpleSwap.sol\":8180:8190  amountBMin */\n      dup4\n        /* \"contracts/SimpleSwap.sol\":8162:8176  amountBOptimal */\n      dup2\n        /* \"contracts/SimpleSwap.sol\":8162:8190  amountBOptimal >= amountBMin */\n      lt\n      iszero\n        /* \"contracts/SimpleSwap.sol\":8154:8209  require(amountBOptimal >= amountBMin, \"Insufficient B\") */\n      tag_186\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_187\n      swap1\n      tag_188\n      jump\t// in\n    tag_187:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_186:\n        /* \"contracts/SimpleSwap.sol\":8269:8283  amountADesired */\n      dup7\n        /* \"contracts/SimpleSwap.sol\":8285:8299  amountBOptimal */\n      dup2\n        /* \"contracts/SimpleSwap.sol\":8227:8300  (calculatedAmountA, calculatedAmountB) = (amountADesired, amountBOptimal) */\n      dup1\n      swap4\n      pop\n      dup2\n      swap5\n      pop\n      pop\n      pop\n        /* \"contracts/SimpleSwap.sol\":8098:8590  if (amountBOptimal <= amountBDesired) {... */\n      jump(tag_189)\n    tag_185:\n        /* \"contracts/SimpleSwap.sol\":8339:8358  uint amountAOptimal */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":8396:8411  currentReserveB */\n      dup9\n        /* \"contracts/SimpleSwap.sol\":8361:8411  amountBDesired * currentReserveA / currentReserveB */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SimpleSwap.sol\":8378:8393  currentReserveA */\n      dup11\n        /* \"contracts/SimpleSwap.sol\":8361:8393  amountBDesired * currentReserveA */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SimpleSwap.sol\":8361:8375  amountBDesired */\n      dup9\n        /* \"contracts/SimpleSwap.sol\":8361:8393  amountBDesired * currentReserveA */\n      tag_190\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_190:\n        /* \"contracts/SimpleSwap.sol\":8361:8411  amountBDesired * currentReserveA / currentReserveB */\n      tag_191\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_191:\n        /* \"contracts/SimpleSwap.sol\":8339:8411  uint amountAOptimal = amountBDesired * currentReserveA / currentReserveB */\n      swap1\n      pop\n        /* \"contracts/SimpleSwap.sol\":8455:8465  amountAMin */\n      dup6\n        /* \"contracts/SimpleSwap.sol\":8437:8451  amountAOptimal */\n      dup2\n        /* \"contracts/SimpleSwap.sol\":8437:8465  amountAOptimal >= amountAMin */\n      lt\n      iszero\n        /* \"contracts/SimpleSwap.sol\":8429:8484  require(amountAOptimal >= amountAMin, \"Insufficient A\") */\n      tag_192\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_194\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_192:\n        /* \"contracts/SimpleSwap.sol\":8544:8558  amountAOptimal */\n      dup1\n        /* \"contracts/SimpleSwap.sol\":8560:8574  amountBDesired */\n      dup8\n        /* \"contracts/SimpleSwap.sol\":8502:8575  (calculatedAmountA, calculatedAmountB) = (amountAOptimal, amountBDesired) */\n      dup1\n      swap5\n      pop\n      dup2\n      swap6\n      pop\n      pop\n      pop\n        /* \"contracts/SimpleSwap.sol\":8321:8590  {... */\n      pop\n        /* \"contracts/SimpleSwap.sol\":8098:8590  if (amountBOptimal <= amountBDesired) {... */\n    tag_189:\n        /* \"contracts/SimpleSwap.sol\":7951:8600  {... */\n      pop\n        /* \"contracts/SimpleSwap.sol\":7744:8600  if (currentReserveA == 0 && currentReserveB == 0) {... */\n    tag_182:\n        /* \"contracts/SimpleSwap.sol\":7447:8606  function _calculateLiquidityAmounts(... */\n      swap7\n      pop\n      swap7\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SimpleSwap.sol\":8675:8982  function _performAddLiquidityTransfers(... */\n    tag_144:\n        /* \"contracts/SimpleSwap.sol\":8831:8898  IERC20(tokenA).safeTransferFrom(msg.sender, address(this), amountA) */\n      tag_196\n        /* \"contracts/SimpleSwap.sol\":8863:8873  msg.sender */\n      caller\n        /* \"contracts/SimpleSwap.sol\":8883:8887  this */\n      address\n        /* \"contracts/SimpleSwap.sol\":8890:8897  amountA */\n      dup5\n        /* \"contracts/SimpleSwap.sol\":8838:8844  tokenA */\n      dup8\n        /* \"contracts/SimpleSwap.sol\":8831:8862  IERC20(tokenA).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_153\n      swap1\n        /* \"contracts/SimpleSwap.sol\":8831:8898  IERC20(tokenA).safeTransferFrom(msg.sender, address(this), amountA) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_196:\n        /* \"contracts/SimpleSwap.sol\":8908:8975  IERC20(tokenB).safeTransferFrom(msg.sender, address(this), amountB) */\n      tag_197\n        /* \"contracts/SimpleSwap.sol\":8940:8950  msg.sender */\n      caller\n        /* \"contracts/SimpleSwap.sol\":8960:8964  this */\n      address\n        /* \"contracts/SimpleSwap.sol\":8967:8974  amountB */\n      dup4\n        /* \"contracts/SimpleSwap.sol\":8915:8921  tokenB */\n      dup7\n        /* \"contracts/SimpleSwap.sol\":8908:8939  IERC20(tokenB).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_153\n      swap1\n        /* \"contracts/SimpleSwap.sol\":8908:8975  IERC20(tokenB).safeTransferFrom(msg.sender, address(this), amountB) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_197:\n        /* \"contracts/SimpleSwap.sol\":8675:8982  function _performAddLiquidityTransfers(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SimpleSwap.sol\":9051:9521  function _mintLiquidityAndUpdateReserves(... */\n    tag_146:\n        /* \"contracts/SimpleSwap.sol\":9274:9288  uint liquidity */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":9322:9329  amountB */\n      dup4\n        /* \"contracts/SimpleSwap.sol\":9312:9319  amountA */\n      dup6\n        /* \"contracts/SimpleSwap.sol\":9312:9329  amountA + amountB */\n      tag_199\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_199:\n        /* \"contracts/SimpleSwap.sol\":9300:9329  liquidity = amountA + amountB */\n      swap1\n      pop\n        /* \"contracts/SimpleSwap.sol\":9367:9376  liquidity */\n      dup1\n        /* \"contracts/SimpleSwap.sol\":9339:9353  totalLiquidity */\n      0x01\n        /* \"contracts/SimpleSwap.sol\":9339:9363  totalLiquidity[pairHash] */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":9354:9362  pairHash */\n      dup9\n        /* \"contracts/SimpleSwap.sol\":9339:9363  totalLiquidity[pairHash] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/SimpleSwap.sol\":9339:9376  totalLiquidity[pairHash] += liquidity */\n      dup3\n      dup3\n      sload\n      tag_200\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_200:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/SimpleSwap.sol\":9420:9429  liquidity */\n      dup1\n        /* \"contracts/SimpleSwap.sol\":9386:9402  liquidityBalance */\n      0x02\n        /* \"contracts/SimpleSwap.sol\":9386:9412  liquidityBalance[pairHash] */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":9403:9411  pairHash */\n      dup9\n        /* \"contracts/SimpleSwap.sol\":9386:9412  liquidityBalance[pairHash] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/SimpleSwap.sol\":9386:9416  liquidityBalance[pairHash][to] */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":9413:9415  to */\n      dup6\n        /* \"contracts/SimpleSwap.sol\":9386:9416  liquidityBalance[pairHash][to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/SimpleSwap.sol\":9386:9429  liquidityBalance[pairHash][to] += liquidity */\n      dup3\n      dup3\n      sload\n      tag_201\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_201:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/SimpleSwap.sol\":9464:9471  amountA */\n      dup5\n        /* \"contracts/SimpleSwap.sol\":9440:9443  res */\n      dup3\n        /* \"contracts/SimpleSwap.sol\":9440:9452  res.reserveA */\n      0x00\n      add\n      0x00\n        /* \"contracts/SimpleSwap.sol\":9440:9472  res.reserveA += uint112(amountA) */\n      dup3\n      dup3\n      dup3\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n      tag_202\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_202:\n      swap3\n      pop\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/SimpleSwap.sol\":9506:9513  amountB */\n      dup4\n        /* \"contracts/SimpleSwap.sol\":9482:9485  res */\n      dup3\n        /* \"contracts/SimpleSwap.sol\":9482:9494  res.reserveB */\n      0x00\n      add\n      0x0e\n        /* \"contracts/SimpleSwap.sol\":9482:9514  res.reserveB += uint112(amountB) */\n      dup3\n      dup3\n      dup3\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n      tag_203\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_203:\n      swap3\n      pop\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/SimpleSwap.sol\":9051:9521  function _mintLiquidityAndUpdateReserves(... */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_153:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_205\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1738:1743  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1765  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1778  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1781:1785  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1787:1789  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1791:1796  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_206\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_207\n      jump\t// in\n    tag_206:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1737  _callOptionalReturn */\n      tag_178\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_205:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_178:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8450:8468  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8478:8497  uint256 returnValue */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8616:8620  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8613:8614  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8606:8610  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8600:8611  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8593:8597  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8587:8591  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8583:8598  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8580:8581  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8573:8578  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8566:8571  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8561:8621  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8673:8680  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n      tag_209\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8717:8721  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8711:8722  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8762:8778  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8759:8760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8754:8757  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8739:8779  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8808:8824  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8803:8806  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8796:8825  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n    tag_209:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8866:8882  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8852:8882  returnSize := returndatasize() */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8916:8917  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8910:8918  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8895:8918  returnValue := mload(0) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8532:8928  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8956:8957  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8952  returnSize */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8957  returnSize == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_210\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9009:9010  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9005  returnValue */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9010  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_211)\n    tag_210:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8990:8991  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8968:8973  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8986  address(token).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8991  address(token).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_211:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_212\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9066:9071  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_213\n      swap2\n      swap1\n      tag_214\n      jump\t// in\n    tag_213:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_212:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8440:9090  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_216:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_217:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      0x00\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_218:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_219:\n        /* \"#utility.yul\":490:514   */\n      tag_274\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_218\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_275\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      0x00\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_275:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_220:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_277\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_219\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_14:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_279\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_280\n      tag_216\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":766:885   */\n    tag_279:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_281\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_220\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1139   */\n    tag_221:\n        /* \"#utility.yul\":1062:1069   */\n      0x00\n        /* \"#utility.yul\":1102:1132   */\n      0xffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1095:1100   */\n      dup3\n        /* \"#utility.yul\":1091:1133   */\n      and\n        /* \"#utility.yul\":1080:1133   */\n      swap1\n      pop\n        /* \"#utility.yul\":1025:1139   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1145:1263   */\n    tag_222:\n        /* \"#utility.yul\":1232:1256   */\n      tag_284\n        /* \"#utility.yul\":1250:1255   */\n      dup2\n        /* \"#utility.yul\":1232:1256   */\n      tag_221\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":1227:1230   */\n      dup3\n        /* \"#utility.yul\":1220:1257   */\n      mstore\n        /* \"#utility.yul\":1145:1263   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1269:1601   */\n    tag_17:\n        /* \"#utility.yul\":1390:1394   */\n      0x00\n        /* \"#utility.yul\":1428:1430   */\n      0x40\n        /* \"#utility.yul\":1417:1426   */\n      dup3\n        /* \"#utility.yul\":1413:1431   */\n      add\n        /* \"#utility.yul\":1405:1431   */\n      swap1\n      pop\n        /* \"#utility.yul\":1441:1512   */\n      tag_286\n        /* \"#utility.yul\":1509:1510   */\n      0x00\n        /* \"#utility.yul\":1498:1507   */\n      dup4\n        /* \"#utility.yul\":1494:1511   */\n      add\n        /* \"#utility.yul\":1485:1491   */\n      dup6\n        /* \"#utility.yul\":1441:1512   */\n      tag_222\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":1522:1594   */\n      tag_287\n        /* \"#utility.yul\":1590:1592   */\n      0x20\n        /* \"#utility.yul\":1579:1588   */\n      dup4\n        /* \"#utility.yul\":1575:1593   */\n      add\n        /* \"#utility.yul\":1566:1572   */\n      dup5\n        /* \"#utility.yul\":1522:1594   */\n      tag_222\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":1269:1601   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1607:1684   */\n    tag_223:\n        /* \"#utility.yul\":1644:1651   */\n      0x00\n        /* \"#utility.yul\":1673:1678   */\n      dup2\n        /* \"#utility.yul\":1662:1678   */\n      swap1\n      pop\n        /* \"#utility.yul\":1607:1684   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1690:1812   */\n    tag_224:\n        /* \"#utility.yul\":1763:1787   */\n      tag_290\n        /* \"#utility.yul\":1781:1786   */\n      dup2\n        /* \"#utility.yul\":1763:1787   */\n      tag_223\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":1756:1761   */\n      dup2\n        /* \"#utility.yul\":1753:1788   */\n      eq\n        /* \"#utility.yul\":1743:1806   */\n      tag_291\n      jumpi\n        /* \"#utility.yul\":1802:1803   */\n      0x00\n        /* \"#utility.yul\":1799:1800   */\n      0x00\n        /* \"#utility.yul\":1792:1804   */\n      revert\n        /* \"#utility.yul\":1743:1806   */\n    tag_291:\n        /* \"#utility.yul\":1690:1812   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1818:1957   */\n    tag_225:\n        /* \"#utility.yul\":1864:1869   */\n      0x00\n        /* \"#utility.yul\":1902:1908   */\n      dup2\n        /* \"#utility.yul\":1889:1909   */\n      calldataload\n        /* \"#utility.yul\":1880:1909   */\n      swap1\n      pop\n        /* \"#utility.yul\":1918:1951   */\n      tag_293\n        /* \"#utility.yul\":1945:1950   */\n      dup2\n        /* \"#utility.yul\":1918:1951   */\n      tag_224\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":1818:1957   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1963:2582   */\n    tag_20:\n        /* \"#utility.yul\":2040:2046   */\n      0x00\n        /* \"#utility.yul\":2048:2054   */\n      0x00\n        /* \"#utility.yul\":2056:2062   */\n      0x00\n        /* \"#utility.yul\":2105:2107   */\n      0x60\n        /* \"#utility.yul\":2093:2102   */\n      dup5\n        /* \"#utility.yul\":2084:2091   */\n      dup7\n        /* \"#utility.yul\":2080:2103   */\n      sub\n        /* \"#utility.yul\":2076:2108   */\n      slt\n        /* \"#utility.yul\":2073:2192   */\n      iszero\n      tag_295\n      jumpi\n        /* \"#utility.yul\":2111:2190   */\n      tag_296\n      tag_216\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":2073:2192   */\n    tag_295:\n        /* \"#utility.yul\":2231:2232   */\n      0x00\n        /* \"#utility.yul\":2256:2309   */\n      tag_297\n        /* \"#utility.yul\":2301:2308   */\n      dup7\n        /* \"#utility.yul\":2292:2298   */\n      dup3\n        /* \"#utility.yul\":2281:2290   */\n      dup8\n        /* \"#utility.yul\":2277:2299   */\n      add\n        /* \"#utility.yul\":2256:2309   */\n      tag_225\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":2246:2309   */\n      swap4\n      pop\n        /* \"#utility.yul\":2202:2319   */\n      pop\n        /* \"#utility.yul\":2358:2360   */\n      0x20\n        /* \"#utility.yul\":2384:2437   */\n      tag_298\n        /* \"#utility.yul\":2429:2436   */\n      dup7\n        /* \"#utility.yul\":2420:2426   */\n      dup3\n        /* \"#utility.yul\":2409:2418   */\n      dup8\n        /* \"#utility.yul\":2405:2427   */\n      add\n        /* \"#utility.yul\":2384:2437   */\n      tag_225\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":2374:2437   */\n      swap3\n      pop\n        /* \"#utility.yul\":2329:2447   */\n      pop\n        /* \"#utility.yul\":2486:2488   */\n      0x40\n        /* \"#utility.yul\":2512:2565   */\n      tag_299\n        /* \"#utility.yul\":2557:2564   */\n      dup7\n        /* \"#utility.yul\":2548:2554   */\n      dup3\n        /* \"#utility.yul\":2537:2546   */\n      dup8\n        /* \"#utility.yul\":2533:2555   */\n      add\n        /* \"#utility.yul\":2512:2565   */\n      tag_225\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":2502:2565   */\n      swap2\n      pop\n        /* \"#utility.yul\":2457:2575   */\n      pop\n        /* \"#utility.yul\":1963:2582   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2588:2706   */\n    tag_226:\n        /* \"#utility.yul\":2675:2699   */\n      tag_301\n        /* \"#utility.yul\":2693:2698   */\n      dup2\n        /* \"#utility.yul\":2675:2699   */\n      tag_223\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":2670:2673   */\n      dup3\n        /* \"#utility.yul\":2663:2700   */\n      mstore\n        /* \"#utility.yul\":2588:2706   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2712:2934   */\n    tag_23:\n        /* \"#utility.yul\":2805:2809   */\n      0x00\n        /* \"#utility.yul\":2843:2845   */\n      0x20\n        /* \"#utility.yul\":2832:2841   */\n      dup3\n        /* \"#utility.yul\":2828:2846   */\n      add\n        /* \"#utility.yul\":2820:2846   */\n      swap1\n      pop\n        /* \"#utility.yul\":2856:2927   */\n      tag_303\n        /* \"#utility.yul\":2924:2925   */\n      0x00\n        /* \"#utility.yul\":2913:2922   */\n      dup4\n        /* \"#utility.yul\":2909:2926   */\n      add\n        /* \"#utility.yul\":2900:2906   */\n      dup5\n        /* \"#utility.yul\":2856:2927   */\n      tag_226\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":2712:2934   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2940:3057   */\n    tag_227:\n        /* \"#utility.yul\":3049:3050   */\n      0x00\n        /* \"#utility.yul\":3046:3047   */\n      0x00\n        /* \"#utility.yul\":3039:3051   */\n      revert\n        /* \"#utility.yul\":3063:3180   */\n    tag_228:\n        /* \"#utility.yul\":3172:3173   */\n      0x00\n        /* \"#utility.yul\":3169:3170   */\n      0x00\n        /* \"#utility.yul\":3162:3174   */\n      revert\n        /* \"#utility.yul\":3186:3303   */\n    tag_229:\n        /* \"#utility.yul\":3295:3296   */\n      0x00\n        /* \"#utility.yul\":3292:3293   */\n      0x00\n        /* \"#utility.yul\":3285:3297   */\n      revert\n        /* \"#utility.yul\":3326:3894   */\n    tag_230:\n        /* \"#utility.yul\":3399:3407   */\n      0x00\n        /* \"#utility.yul\":3409:3415   */\n      0x00\n        /* \"#utility.yul\":3459:3462   */\n      dup4\n        /* \"#utility.yul\":3452:3456   */\n      0x1f\n        /* \"#utility.yul\":3444:3450   */\n      dup5\n        /* \"#utility.yul\":3440:3457   */\n      add\n        /* \"#utility.yul\":3436:3463   */\n      slt\n        /* \"#utility.yul\":3426:3548   */\n      tag_308\n      jumpi\n        /* \"#utility.yul\":3467:3546   */\n      tag_309\n      tag_227\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":3426:3548   */\n    tag_308:\n        /* \"#utility.yul\":3580:3586   */\n      dup3\n        /* \"#utility.yul\":3567:3587   */\n      calldataload\n        /* \"#utility.yul\":3557:3587   */\n      swap1\n      pop\n        /* \"#utility.yul\":3610:3628   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3602:3608   */\n      dup2\n        /* \"#utility.yul\":3599:3629   */\n      gt\n        /* \"#utility.yul\":3596:3713   */\n      iszero\n      tag_310\n      jumpi\n        /* \"#utility.yul\":3632:3711   */\n      tag_311\n      tag_228\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":3596:3713   */\n    tag_310:\n        /* \"#utility.yul\":3746:3750   */\n      0x20\n        /* \"#utility.yul\":3738:3744   */\n      dup4\n        /* \"#utility.yul\":3734:3751   */\n      add\n        /* \"#utility.yul\":3722:3751   */\n      swap2\n      pop\n        /* \"#utility.yul\":3800:3803   */\n      dup4\n        /* \"#utility.yul\":3792:3796   */\n      0x20\n        /* \"#utility.yul\":3784:3790   */\n      dup3\n        /* \"#utility.yul\":3780:3797   */\n      mul\n        /* \"#utility.yul\":3770:3778   */\n      dup4\n        /* \"#utility.yul\":3766:3798   */\n      add\n        /* \"#utility.yul\":3763:3804   */\n      gt\n        /* \"#utility.yul\":3760:3888   */\n      iszero\n      tag_312\n      jumpi\n        /* \"#utility.yul\":3807:3886   */\n      tag_313\n      tag_229\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":3760:3888   */\n    tag_312:\n        /* \"#utility.yul\":3326:3894   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3900:4026   */\n    tag_231:\n        /* \"#utility.yul\":3937:3944   */\n      0x00\n        /* \"#utility.yul\":3977:4019   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3970:3975   */\n      dup3\n        /* \"#utility.yul\":3966:4020   */\n      and\n        /* \"#utility.yul\":3955:4020   */\n      swap1\n      pop\n        /* \"#utility.yul\":3900:4026   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4032:4128   */\n    tag_232:\n        /* \"#utility.yul\":4069:4076   */\n      0x00\n        /* \"#utility.yul\":4098:4122   */\n      tag_316\n        /* \"#utility.yul\":4116:4121   */\n      dup3\n        /* \"#utility.yul\":4098:4122   */\n      tag_231\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":4087:4122   */\n      swap1\n      pop\n        /* \"#utility.yul\":4032:4128   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4134:4256   */\n    tag_233:\n        /* \"#utility.yul\":4207:4231   */\n      tag_318\n        /* \"#utility.yul\":4225:4230   */\n      dup2\n        /* \"#utility.yul\":4207:4231   */\n      tag_232\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":4200:4205   */\n      dup2\n        /* \"#utility.yul\":4197:4232   */\n      eq\n        /* \"#utility.yul\":4187:4250   */\n      tag_319\n      jumpi\n        /* \"#utility.yul\":4246:4247   */\n      0x00\n        /* \"#utility.yul\":4243:4244   */\n      0x00\n        /* \"#utility.yul\":4236:4248   */\n      revert\n        /* \"#utility.yul\":4187:4250   */\n    tag_319:\n        /* \"#utility.yul\":4134:4256   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4262:4401   */\n    tag_234:\n        /* \"#utility.yul\":4308:4313   */\n      0x00\n        /* \"#utility.yul\":4346:4352   */\n      dup2\n        /* \"#utility.yul\":4333:4353   */\n      calldataload\n        /* \"#utility.yul\":4324:4353   */\n      swap1\n      pop\n        /* \"#utility.yul\":4362:4395   */\n      tag_321\n        /* \"#utility.yul\":4389:4394   */\n      dup2\n        /* \"#utility.yul\":4362:4395   */\n      tag_233\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":4262:4401   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4407:5548   */\n    tag_26:\n        /* \"#utility.yul\":4529:4535   */\n      0x00\n        /* \"#utility.yul\":4537:4543   */\n      0x00\n        /* \"#utility.yul\":4545:4551   */\n      0x00\n        /* \"#utility.yul\":4553:4559   */\n      0x00\n        /* \"#utility.yul\":4561:4567   */\n      0x00\n        /* \"#utility.yul\":4569:4575   */\n      0x00\n        /* \"#utility.yul\":4618:4621   */\n      0xa0\n        /* \"#utility.yul\":4606:4615   */\n      dup8\n        /* \"#utility.yul\":4597:4604   */\n      dup10\n        /* \"#utility.yul\":4593:4616   */\n      sub\n        /* \"#utility.yul\":4589:4622   */\n      slt\n        /* \"#utility.yul\":4586:4706   */\n      iszero\n      tag_323\n      jumpi\n        /* \"#utility.yul\":4625:4704   */\n      tag_324\n      tag_216\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":4586:4706   */\n    tag_323:\n        /* \"#utility.yul\":4745:4746   */\n      0x00\n        /* \"#utility.yul\":4770:4823   */\n      tag_325\n        /* \"#utility.yul\":4815:4822   */\n      dup10\n        /* \"#utility.yul\":4806:4812   */\n      dup3\n        /* \"#utility.yul\":4795:4804   */\n      dup11\n        /* \"#utility.yul\":4791:4813   */\n      add\n        /* \"#utility.yul\":4770:4823   */\n      tag_225\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":4760:4823   */\n      swap7\n      pop\n        /* \"#utility.yul\":4716:4833   */\n      pop\n        /* \"#utility.yul\":4872:4874   */\n      0x20\n        /* \"#utility.yul\":4898:4951   */\n      tag_326\n        /* \"#utility.yul\":4943:4950   */\n      dup10\n        /* \"#utility.yul\":4934:4940   */\n      dup3\n        /* \"#utility.yul\":4923:4932   */\n      dup11\n        /* \"#utility.yul\":4919:4941   */\n      add\n        /* \"#utility.yul\":4898:4951   */\n      tag_225\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":4888:4951   */\n      swap6\n      pop\n        /* \"#utility.yul\":4843:4961   */\n      pop\n        /* \"#utility.yul\":5028:5030   */\n      0x40\n        /* \"#utility.yul\":5017:5026   */\n      dup8\n        /* \"#utility.yul\":5013:5031   */\n      add\n        /* \"#utility.yul\":5000:5032   */\n      calldataload\n        /* \"#utility.yul\":5059:5077   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5051:5057   */\n      dup2\n        /* \"#utility.yul\":5048:5078   */\n      gt\n        /* \"#utility.yul\":5045:5162   */\n      iszero\n      tag_327\n      jumpi\n        /* \"#utility.yul\":5081:5160   */\n      tag_328\n      tag_217\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":5045:5162   */\n    tag_327:\n        /* \"#utility.yul\":5194:5274   */\n      tag_329\n        /* \"#utility.yul\":5266:5273   */\n      dup10\n        /* \"#utility.yul\":5257:5263   */\n      dup3\n        /* \"#utility.yul\":5246:5255   */\n      dup11\n        /* \"#utility.yul\":5242:5264   */\n      add\n        /* \"#utility.yul\":5194:5274   */\n      tag_230\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":5176:5274   */\n      swap5\n      pop\n      swap5\n      pop\n        /* \"#utility.yul\":4971:5284   */\n      pop\n        /* \"#utility.yul\":5323:5325   */\n      0x60\n        /* \"#utility.yul\":5349:5402   */\n      tag_330\n        /* \"#utility.yul\":5394:5401   */\n      dup10\n        /* \"#utility.yul\":5385:5391   */\n      dup3\n        /* \"#utility.yul\":5374:5383   */\n      dup11\n        /* \"#utility.yul\":5370:5392   */\n      add\n        /* \"#utility.yul\":5349:5402   */\n      tag_234\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":5339:5402   */\n      swap3\n      pop\n        /* \"#utility.yul\":5294:5412   */\n      pop\n        /* \"#utility.yul\":5451:5454   */\n      0x80\n        /* \"#utility.yul\":5478:5531   */\n      tag_331\n        /* \"#utility.yul\":5523:5530   */\n      dup10\n        /* \"#utility.yul\":5514:5520   */\n      dup3\n        /* \"#utility.yul\":5503:5512   */\n      dup11\n        /* \"#utility.yul\":5499:5521   */\n      add\n        /* \"#utility.yul\":5478:5531   */\n      tag_225\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":5468:5531   */\n      swap2\n      pop\n        /* \"#utility.yul\":5422:5541   */\n      pop\n        /* \"#utility.yul\":4407:5548   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      jump\t// out\n        /* \"#utility.yul\":5554:5668   */\n    tag_235:\n        /* \"#utility.yul\":5621:5627   */\n      0x00\n        /* \"#utility.yul\":5655:5660   */\n      dup2\n        /* \"#utility.yul\":5649:5661   */\n      mload\n        /* \"#utility.yul\":5639:5661   */\n      swap1\n      pop\n        /* \"#utility.yul\":5554:5668   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5674:5858   */\n    tag_236:\n        /* \"#utility.yul\":5773:5784   */\n      0x00\n        /* \"#utility.yul\":5807:5813   */\n      dup3\n        /* \"#utility.yul\":5802:5805   */\n      dup3\n        /* \"#utility.yul\":5795:5814   */\n      mstore\n        /* \"#utility.yul\":5847:5851   */\n      0x20\n        /* \"#utility.yul\":5842:5845   */\n      dup3\n        /* \"#utility.yul\":5838:5852   */\n      add\n        /* \"#utility.yul\":5823:5852   */\n      swap1\n      pop\n        /* \"#utility.yul\":5674:5858   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5864:5996   */\n    tag_237:\n        /* \"#utility.yul\":5931:5935   */\n      0x00\n        /* \"#utility.yul\":5954:5957   */\n      dup2\n        /* \"#utility.yul\":5946:5957   */\n      swap1\n      pop\n        /* \"#utility.yul\":5984:5988   */\n      0x20\n        /* \"#utility.yul\":5979:5982   */\n      dup3\n        /* \"#utility.yul\":5975:5989   */\n      add\n        /* \"#utility.yul\":5967:5989   */\n      swap1\n      pop\n        /* \"#utility.yul\":5864:5996   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6002:6110   */\n    tag_238:\n        /* \"#utility.yul\":6079:6103   */\n      tag_336\n        /* \"#utility.yul\":6097:6102   */\n      dup2\n        /* \"#utility.yul\":6079:6103   */\n      tag_223\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":6074:6077   */\n      dup3\n        /* \"#utility.yul\":6067:6104   */\n      mstore\n        /* \"#utility.yul\":6002:6110   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6116:6295   */\n    tag_239:\n        /* \"#utility.yul\":6185:6195   */\n      0x00\n        /* \"#utility.yul\":6206:6252   */\n      tag_338\n        /* \"#utility.yul\":6248:6251   */\n      dup4\n        /* \"#utility.yul\":6240:6246   */\n      dup4\n        /* \"#utility.yul\":6206:6252   */\n      tag_238\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":6284:6288   */\n      0x20\n        /* \"#utility.yul\":6279:6282   */\n      dup4\n        /* \"#utility.yul\":6275:6289   */\n      add\n        /* \"#utility.yul\":6261:6289   */\n      swap1\n      pop\n        /* \"#utility.yul\":6116:6295   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6301:6414   */\n    tag_240:\n        /* \"#utility.yul\":6371:6375   */\n      0x00\n        /* \"#utility.yul\":6403:6407   */\n      0x20\n        /* \"#utility.yul\":6398:6401   */\n      dup3\n        /* \"#utility.yul\":6394:6408   */\n      add\n        /* \"#utility.yul\":6386:6408   */\n      swap1\n      pop\n        /* \"#utility.yul\":6301:6414   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6450:7182   */\n    tag_241:\n        /* \"#utility.yul\":6569:6572   */\n      0x00\n        /* \"#utility.yul\":6598:6652   */\n      tag_341\n        /* \"#utility.yul\":6646:6651   */\n      dup3\n        /* \"#utility.yul\":6598:6652   */\n      tag_235\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":6668:6754   */\n      tag_342\n        /* \"#utility.yul\":6747:6753   */\n      dup2\n        /* \"#utility.yul\":6742:6745   */\n      dup6\n        /* \"#utility.yul\":6668:6754   */\n      tag_236\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":6661:6754   */\n      swap4\n      pop\n        /* \"#utility.yul\":6778:6834   */\n      tag_343\n        /* \"#utility.yul\":6828:6833   */\n      dup4\n        /* \"#utility.yul\":6778:6834   */\n      tag_237\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":6857:6864   */\n      dup1\n        /* \"#utility.yul\":6888:6889   */\n      0x00\n        /* \"#utility.yul\":6873:7157   */\n    tag_344:\n        /* \"#utility.yul\":6898:6904   */\n      dup4\n        /* \"#utility.yul\":6895:6896   */\n      dup2\n        /* \"#utility.yul\":6892:6905   */\n      lt\n        /* \"#utility.yul\":6873:7157   */\n      iszero\n      tag_346\n      jumpi\n        /* \"#utility.yul\":6974:6980   */\n      dup2\n        /* \"#utility.yul\":6968:6981   */\n      mload\n        /* \"#utility.yul\":7001:7064   */\n      tag_347\n        /* \"#utility.yul\":7060:7063   */\n      dup9\n        /* \"#utility.yul\":7045:7058   */\n      dup3\n        /* \"#utility.yul\":7001:7064   */\n      tag_239\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":6994:7064   */\n      swap8\n      pop\n        /* \"#utility.yul\":7087:7147   */\n      tag_348\n        /* \"#utility.yul\":7140:7146   */\n      dup4\n        /* \"#utility.yul\":7087:7147   */\n      tag_240\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":7077:7147   */\n      swap3\n      pop\n        /* \"#utility.yul\":6933:7157   */\n      pop\n        /* \"#utility.yul\":6920:6921   */\n      0x01\n        /* \"#utility.yul\":6917:6918   */\n      dup2\n        /* \"#utility.yul\":6913:6922   */\n      add\n        /* \"#utility.yul\":6908:6922   */\n      swap1\n      pop\n        /* \"#utility.yul\":6873:7157   */\n      jump(tag_344)\n    tag_346:\n        /* \"#utility.yul\":6877:6891   */\n      pop\n        /* \"#utility.yul\":7173:7176   */\n      dup6\n        /* \"#utility.yul\":7166:7176   */\n      swap4\n      pop\n        /* \"#utility.yul\":6574:7182   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":6450:7182   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7188:7561   */\n    tag_29:\n        /* \"#utility.yul\":7331:7335   */\n      0x00\n        /* \"#utility.yul\":7369:7371   */\n      0x20\n        /* \"#utility.yul\":7358:7367   */\n      dup3\n        /* \"#utility.yul\":7354:7372   */\n      add\n        /* \"#utility.yul\":7346:7372   */\n      swap1\n      pop\n        /* \"#utility.yul\":7418:7427   */\n      dup2\n        /* \"#utility.yul\":7412:7416   */\n      dup2\n        /* \"#utility.yul\":7408:7428   */\n      sub\n        /* \"#utility.yul\":7404:7405   */\n      0x00\n        /* \"#utility.yul\":7393:7402   */\n      dup4\n        /* \"#utility.yul\":7389:7406   */\n      add\n        /* \"#utility.yul\":7382:7429   */\n      mstore\n        /* \"#utility.yul\":7446:7554   */\n      tag_350\n        /* \"#utility.yul\":7549:7553   */\n      dup2\n        /* \"#utility.yul\":7540:7546   */\n      dup5\n        /* \"#utility.yul\":7446:7554   */\n      tag_241\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":7438:7554   */\n      swap1\n      pop\n        /* \"#utility.yul\":7188:7561   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7567:8041   */\n    tag_36:\n        /* \"#utility.yul\":7635:7641   */\n      0x00\n        /* \"#utility.yul\":7643:7649   */\n      0x00\n        /* \"#utility.yul\":7692:7694   */\n      0x40\n        /* \"#utility.yul\":7680:7689   */\n      dup4\n        /* \"#utility.yul\":7671:7678   */\n      dup6\n        /* \"#utility.yul\":7667:7690   */\n      sub\n        /* \"#utility.yul\":7663:7695   */\n      slt\n        /* \"#utility.yul\":7660:7779   */\n      iszero\n      tag_352\n      jumpi\n        /* \"#utility.yul\":7698:7777   */\n      tag_353\n      tag_216\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":7660:7779   */\n    tag_352:\n        /* \"#utility.yul\":7818:7819   */\n      0x00\n        /* \"#utility.yul\":7843:7896   */\n      tag_354\n        /* \"#utility.yul\":7888:7895   */\n      dup6\n        /* \"#utility.yul\":7879:7885   */\n      dup3\n        /* \"#utility.yul\":7868:7877   */\n      dup7\n        /* \"#utility.yul\":7864:7886   */\n      add\n        /* \"#utility.yul\":7843:7896   */\n      tag_234\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":7833:7896   */\n      swap3\n      pop\n        /* \"#utility.yul\":7789:7906   */\n      pop\n        /* \"#utility.yul\":7945:7947   */\n      0x20\n        /* \"#utility.yul\":7971:8024   */\n      tag_355\n        /* \"#utility.yul\":8016:8023   */\n      dup6\n        /* \"#utility.yul\":8007:8013   */\n      dup3\n        /* \"#utility.yul\":7996:8005   */\n      dup7\n        /* \"#utility.yul\":7992:8014   */\n      add\n        /* \"#utility.yul\":7971:8024   */\n      tag_234\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":7961:8024   */\n      swap2\n      pop\n        /* \"#utility.yul\":7916:8034   */\n      pop\n        /* \"#utility.yul\":7567:8041   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8047:9250   */\n    tag_41:\n        /* \"#utility.yul\":8160:8166   */\n      0x00\n        /* \"#utility.yul\":8168:8174   */\n      0x00\n        /* \"#utility.yul\":8176:8182   */\n      0x00\n        /* \"#utility.yul\":8184:8190   */\n      0x00\n        /* \"#utility.yul\":8192:8198   */\n      0x00\n        /* \"#utility.yul\":8200:8206   */\n      0x00\n        /* \"#utility.yul\":8208:8214   */\n      0x00\n        /* \"#utility.yul\":8257:8260   */\n      0xe0\n        /* \"#utility.yul\":8245:8254   */\n      dup9\n        /* \"#utility.yul\":8236:8243   */\n      dup11\n        /* \"#utility.yul\":8232:8255   */\n      sub\n        /* \"#utility.yul\":8228:8261   */\n      slt\n        /* \"#utility.yul\":8225:8345   */\n      iszero\n      tag_357\n      jumpi\n        /* \"#utility.yul\":8264:8343   */\n      tag_358\n      tag_216\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":8225:8345   */\n    tag_357:\n        /* \"#utility.yul\":8384:8385   */\n      0x00\n        /* \"#utility.yul\":8409:8462   */\n      tag_359\n        /* \"#utility.yul\":8454:8461   */\n      dup11\n        /* \"#utility.yul\":8445:8451   */\n      dup3\n        /* \"#utility.yul\":8434:8443   */\n      dup12\n        /* \"#utility.yul\":8430:8452   */\n      add\n        /* \"#utility.yul\":8409:8462   */\n      tag_234\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":8399:8462   */\n      swap8\n      pop\n        /* \"#utility.yul\":8355:8472   */\n      pop\n        /* \"#utility.yul\":8511:8513   */\n      0x20\n        /* \"#utility.yul\":8537:8590   */\n      tag_360\n        /* \"#utility.yul\":8582:8589   */\n      dup11\n        /* \"#utility.yul\":8573:8579   */\n      dup3\n        /* \"#utility.yul\":8562:8571   */\n      dup12\n        /* \"#utility.yul\":8558:8580   */\n      add\n        /* \"#utility.yul\":8537:8590   */\n      tag_234\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":8527:8590   */\n      swap7\n      pop\n        /* \"#utility.yul\":8482:8600   */\n      pop\n        /* \"#utility.yul\":8639:8641   */\n      0x40\n        /* \"#utility.yul\":8665:8718   */\n      tag_361\n        /* \"#utility.yul\":8710:8717   */\n      dup11\n        /* \"#utility.yul\":8701:8707   */\n      dup3\n        /* \"#utility.yul\":8690:8699   */\n      dup12\n        /* \"#utility.yul\":8686:8708   */\n      add\n        /* \"#utility.yul\":8665:8718   */\n      tag_225\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":8655:8718   */\n      swap6\n      pop\n        /* \"#utility.yul\":8610:8728   */\n      pop\n        /* \"#utility.yul\":8767:8769   */\n      0x60\n        /* \"#utility.yul\":8793:8846   */\n      tag_362\n        /* \"#utility.yul\":8838:8845   */\n      dup11\n        /* \"#utility.yul\":8829:8835   */\n      dup3\n        /* \"#utility.yul\":8818:8827   */\n      dup12\n        /* \"#utility.yul\":8814:8836   */\n      add\n        /* \"#utility.yul\":8793:8846   */\n      tag_225\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":8783:8846   */\n      swap5\n      pop\n        /* \"#utility.yul\":8738:8856   */\n      pop\n        /* \"#utility.yul\":8895:8898   */\n      0x80\n        /* \"#utility.yul\":8922:8975   */\n      tag_363\n        /* \"#utility.yul\":8967:8974   */\n      dup11\n        /* \"#utility.yul\":8958:8964   */\n      dup3\n        /* \"#utility.yul\":8947:8956   */\n      dup12\n        /* \"#utility.yul\":8943:8965   */\n      add\n        /* \"#utility.yul\":8922:8975   */\n      tag_225\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":8912:8975   */\n      swap4\n      pop\n        /* \"#utility.yul\":8866:8985   */\n      pop\n        /* \"#utility.yul\":9024:9027   */\n      0xa0\n        /* \"#utility.yul\":9051:9104   */\n      tag_364\n        /* \"#utility.yul\":9096:9103   */\n      dup11\n        /* \"#utility.yul\":9087:9093   */\n      dup3\n        /* \"#utility.yul\":9076:9085   */\n      dup12\n        /* \"#utility.yul\":9072:9094   */\n      add\n        /* \"#utility.yul\":9051:9104   */\n      tag_234\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":9041:9104   */\n      swap3\n      pop\n        /* \"#utility.yul\":8995:9114   */\n      pop\n        /* \"#utility.yul\":9153:9156   */\n      0xc0\n        /* \"#utility.yul\":9180:9233   */\n      tag_365\n        /* \"#utility.yul\":9225:9232   */\n      dup11\n        /* \"#utility.yul\":9216:9222   */\n      dup3\n        /* \"#utility.yul\":9205:9214   */\n      dup12\n        /* \"#utility.yul\":9201:9223   */\n      add\n        /* \"#utility.yul\":9180:9233   */\n      tag_225\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":9170:9233   */\n      swap2\n      pop\n        /* \"#utility.yul\":9124:9243   */\n      pop\n        /* \"#utility.yul\":8047:9250   */\n      swap3\n      swap6\n      swap9\n      swap2\n      swap5\n      swap8\n      pop\n      swap3\n      swap6\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9256:9588   */\n    tag_44:\n        /* \"#utility.yul\":9377:9381   */\n      0x00\n        /* \"#utility.yul\":9415:9417   */\n      0x40\n        /* \"#utility.yul\":9404:9413   */\n      dup3\n        /* \"#utility.yul\":9400:9418   */\n      add\n        /* \"#utility.yul\":9392:9418   */\n      swap1\n      pop\n        /* \"#utility.yul\":9428:9499   */\n      tag_367\n        /* \"#utility.yul\":9496:9497   */\n      0x00\n        /* \"#utility.yul\":9485:9494   */\n      dup4\n        /* \"#utility.yul\":9481:9498   */\n      add\n        /* \"#utility.yul\":9472:9478   */\n      dup6\n        /* \"#utility.yul\":9428:9499   */\n      tag_226\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":9509:9581   */\n      tag_368\n        /* \"#utility.yul\":9577:9579   */\n      0x20\n        /* \"#utility.yul\":9566:9575   */\n      dup4\n        /* \"#utility.yul\":9562:9580   */\n      add\n        /* \"#utility.yul\":9553:9559   */\n      dup5\n        /* \"#utility.yul\":9509:9581   */\n      tag_226\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":9256:9588   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9594:10068   */\n    tag_47:\n        /* \"#utility.yul\":9662:9668   */\n      0x00\n        /* \"#utility.yul\":9670:9676   */\n      0x00\n        /* \"#utility.yul\":9719:9721   */\n      0x40\n        /* \"#utility.yul\":9707:9716   */\n      dup4\n        /* \"#utility.yul\":9698:9705   */\n      dup6\n        /* \"#utility.yul\":9694:9717   */\n      sub\n        /* \"#utility.yul\":9690:9722   */\n      slt\n        /* \"#utility.yul\":9687:9806   */\n      iszero\n      tag_370\n      jumpi\n        /* \"#utility.yul\":9725:9804   */\n      tag_371\n      tag_216\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":9687:9806   */\n    tag_370:\n        /* \"#utility.yul\":9845:9846   */\n      0x00\n        /* \"#utility.yul\":9870:9923   */\n      tag_372\n        /* \"#utility.yul\":9915:9922   */\n      dup6\n        /* \"#utility.yul\":9906:9912   */\n      dup3\n        /* \"#utility.yul\":9895:9904   */\n      dup7\n        /* \"#utility.yul\":9891:9913   */\n      add\n        /* \"#utility.yul\":9870:9923   */\n      tag_220\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":9860:9923   */\n      swap3\n      pop\n        /* \"#utility.yul\":9816:9933   */\n      pop\n        /* \"#utility.yul\":9972:9974   */\n      0x20\n        /* \"#utility.yul\":9998:10051   */\n      tag_373\n        /* \"#utility.yul\":10043:10050   */\n      dup6\n        /* \"#utility.yul\":10034:10040   */\n      dup3\n        /* \"#utility.yul\":10023:10032   */\n      dup7\n        /* \"#utility.yul\":10019:10041   */\n      add\n        /* \"#utility.yul\":9998:10051   */\n      tag_234\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":9988:10051   */\n      swap2\n      pop\n        /* \"#utility.yul\":9943:10061   */\n      pop\n        /* \"#utility.yul\":9594:10068   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10074:11423   */\n    tag_52:\n        /* \"#utility.yul\":10196:10202   */\n      0x00\n        /* \"#utility.yul\":10204:10210   */\n      0x00\n        /* \"#utility.yul\":10212:10218   */\n      0x00\n        /* \"#utility.yul\":10220:10226   */\n      0x00\n        /* \"#utility.yul\":10228:10234   */\n      0x00\n        /* \"#utility.yul\":10236:10242   */\n      0x00\n        /* \"#utility.yul\":10244:10250   */\n      0x00\n        /* \"#utility.yul\":10252:10258   */\n      0x00\n        /* \"#utility.yul\":10301:10304   */\n      0x0100\n        /* \"#utility.yul\":10289:10298   */\n      dup10\n        /* \"#utility.yul\":10280:10287   */\n      dup12\n        /* \"#utility.yul\":10276:10299   */\n      sub\n        /* \"#utility.yul\":10272:10305   */\n      slt\n        /* \"#utility.yul\":10269:10389   */\n      iszero\n      tag_375\n      jumpi\n        /* \"#utility.yul\":10308:10387   */\n      tag_376\n      tag_216\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":10269:10389   */\n    tag_375:\n        /* \"#utility.yul\":10428:10429   */\n      0x00\n        /* \"#utility.yul\":10453:10506   */\n      tag_377\n        /* \"#utility.yul\":10498:10505   */\n      dup12\n        /* \"#utility.yul\":10489:10495   */\n      dup3\n        /* \"#utility.yul\":10478:10487   */\n      dup13\n        /* \"#utility.yul\":10474:10496   */\n      add\n        /* \"#utility.yul\":10453:10506   */\n      tag_234\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":10443:10506   */\n      swap9\n      pop\n        /* \"#utility.yul\":10399:10516   */\n      pop\n        /* \"#utility.yul\":10555:10557   */\n      0x20\n        /* \"#utility.yul\":10581:10634   */\n      tag_378\n        /* \"#utility.yul\":10626:10633   */\n      dup12\n        /* \"#utility.yul\":10617:10623   */\n      dup3\n        /* \"#utility.yul\":10606:10615   */\n      dup13\n        /* \"#utility.yul\":10602:10624   */\n      add\n        /* \"#utility.yul\":10581:10634   */\n      tag_234\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":10571:10634   */\n      swap8\n      pop\n        /* \"#utility.yul\":10526:10644   */\n      pop\n        /* \"#utility.yul\":10683:10685   */\n      0x40\n        /* \"#utility.yul\":10709:10762   */\n      tag_379\n        /* \"#utility.yul\":10754:10761   */\n      dup12\n        /* \"#utility.yul\":10745:10751   */\n      dup3\n        /* \"#utility.yul\":10734:10743   */\n      dup13\n        /* \"#utility.yul\":10730:10752   */\n      add\n        /* \"#utility.yul\":10709:10762   */\n      tag_225\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":10699:10762   */\n      swap7\n      pop\n        /* \"#utility.yul\":10654:10772   */\n      pop\n        /* \"#utility.yul\":10811:10813   */\n      0x60\n        /* \"#utility.yul\":10837:10890   */\n      tag_380\n        /* \"#utility.yul\":10882:10889   */\n      dup12\n        /* \"#utility.yul\":10873:10879   */\n      dup3\n        /* \"#utility.yul\":10862:10871   */\n      dup13\n        /* \"#utility.yul\":10858:10880   */\n      add\n        /* \"#utility.yul\":10837:10890   */\n      tag_225\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":10827:10890   */\n      swap6\n      pop\n        /* \"#utility.yul\":10782:10900   */\n      pop\n        /* \"#utility.yul\":10939:10942   */\n      0x80\n        /* \"#utility.yul\":10966:11019   */\n      tag_381\n        /* \"#utility.yul\":11011:11018   */\n      dup12\n        /* \"#utility.yul\":11002:11008   */\n      dup3\n        /* \"#utility.yul\":10991:11000   */\n      dup13\n        /* \"#utility.yul\":10987:11009   */\n      add\n        /* \"#utility.yul\":10966:11019   */\n      tag_225\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":10956:11019   */\n      swap5\n      pop\n        /* \"#utility.yul\":10910:11029   */\n      pop\n        /* \"#utility.yul\":11068:11071   */\n      0xa0\n        /* \"#utility.yul\":11095:11148   */\n      tag_382\n        /* \"#utility.yul\":11140:11147   */\n      dup12\n        /* \"#utility.yul\":11131:11137   */\n      dup3\n        /* \"#utility.yul\":11120:11129   */\n      dup13\n        /* \"#utility.yul\":11116:11138   */\n      add\n        /* \"#utility.yul\":11095:11148   */\n      tag_225\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":11085:11148   */\n      swap4\n      pop\n        /* \"#utility.yul\":11039:11158   */\n      pop\n        /* \"#utility.yul\":11197:11200   */\n      0xc0\n        /* \"#utility.yul\":11224:11277   */\n      tag_383\n        /* \"#utility.yul\":11269:11276   */\n      dup12\n        /* \"#utility.yul\":11260:11266   */\n      dup3\n        /* \"#utility.yul\":11249:11258   */\n      dup13\n        /* \"#utility.yul\":11245:11267   */\n      add\n        /* \"#utility.yul\":11224:11277   */\n      tag_234\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":11214:11277   */\n      swap3\n      pop\n        /* \"#utility.yul\":11168:11287   */\n      pop\n        /* \"#utility.yul\":11326:11329   */\n      0xe0\n        /* \"#utility.yul\":11353:11406   */\n      tag_384\n        /* \"#utility.yul\":11398:11405   */\n      dup12\n        /* \"#utility.yul\":11389:11395   */\n      dup3\n        /* \"#utility.yul\":11378:11387   */\n      dup13\n        /* \"#utility.yul\":11374:11396   */\n      add\n        /* \"#utility.yul\":11353:11406   */\n      tag_225\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":11343:11406   */\n      swap2\n      pop\n        /* \"#utility.yul\":11297:11416   */\n      pop\n        /* \"#utility.yul\":10074:11423   */\n      swap3\n      swap6\n      swap9\n      pop\n      swap3\n      swap6\n      swap9\n      swap1\n      swap4\n      swap7\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11429:11871   */\n    tag_55:\n        /* \"#utility.yul\":11578:11582   */\n      0x00\n        /* \"#utility.yul\":11616:11618   */\n      0x60\n        /* \"#utility.yul\":11605:11614   */\n      dup3\n        /* \"#utility.yul\":11601:11619   */\n      add\n        /* \"#utility.yul\":11593:11619   */\n      swap1\n      pop\n        /* \"#utility.yul\":11629:11700   */\n      tag_386\n        /* \"#utility.yul\":11697:11698   */\n      0x00\n        /* \"#utility.yul\":11686:11695   */\n      dup4\n        /* \"#utility.yul\":11682:11699   */\n      add\n        /* \"#utility.yul\":11673:11679   */\n      dup7\n        /* \"#utility.yul\":11629:11700   */\n      tag_226\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":11710:11782   */\n      tag_387\n        /* \"#utility.yul\":11778:11780   */\n      0x20\n        /* \"#utility.yul\":11767:11776   */\n      dup4\n        /* \"#utility.yul\":11763:11781   */\n      add\n        /* \"#utility.yul\":11754:11760   */\n      dup6\n        /* \"#utility.yul\":11710:11782   */\n      tag_226\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":11792:11864   */\n      tag_388\n        /* \"#utility.yul\":11860:11862   */\n      0x40\n        /* \"#utility.yul\":11849:11858   */\n      dup4\n        /* \"#utility.yul\":11845:11863   */\n      add\n        /* \"#utility.yul\":11836:11842   */\n      dup5\n        /* \"#utility.yul\":11792:11864   */\n      tag_226\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":11429:11871   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11877:12046   */\n    tag_242:\n        /* \"#utility.yul\":11961:11972   */\n      0x00\n        /* \"#utility.yul\":11995:12001   */\n      dup3\n        /* \"#utility.yul\":11990:11993   */\n      dup3\n        /* \"#utility.yul\":11983:12002   */\n      mstore\n        /* \"#utility.yul\":12035:12039   */\n      0x20\n        /* \"#utility.yul\":12030:12033   */\n      dup3\n        /* \"#utility.yul\":12026:12040   */\n      add\n        /* \"#utility.yul\":12011:12040   */\n      swap1\n      pop\n        /* \"#utility.yul\":11877:12046   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12052:12218   */\n    tag_243:\n        /* \"#utility.yul\":12192:12210   */\n      0x496e76616c696420726573657276657300000000000000000000000000000000\n        /* \"#utility.yul\":12188:12189   */\n      0x00\n        /* \"#utility.yul\":12180:12186   */\n      dup3\n        /* \"#utility.yul\":12176:12190   */\n      add\n        /* \"#utility.yul\":12169:12211   */\n      mstore\n        /* \"#utility.yul\":12052:12218   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12224:12590   */\n    tag_244:\n        /* \"#utility.yul\":12366:12369   */\n      0x00\n        /* \"#utility.yul\":12387:12454   */\n      tag_392\n        /* \"#utility.yul\":12451:12453   */\n      0x10\n        /* \"#utility.yul\":12446:12449   */\n      dup4\n        /* \"#utility.yul\":12387:12454   */\n      tag_242\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":12380:12454   */\n      swap2\n      pop\n        /* \"#utility.yul\":12463:12556   */\n      tag_393\n        /* \"#utility.yul\":12552:12555   */\n      dup3\n        /* \"#utility.yul\":12463:12556   */\n      tag_243\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":12581:12583   */\n      0x20\n        /* \"#utility.yul\":12576:12579   */\n      dup3\n        /* \"#utility.yul\":12572:12584   */\n      add\n        /* \"#utility.yul\":12565:12584   */\n      swap1\n      pop\n        /* \"#utility.yul\":12224:12590   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12596:13015   */\n    tag_61:\n        /* \"#utility.yul\":12762:12766   */\n      0x00\n        /* \"#utility.yul\":12800:12802   */\n      0x20\n        /* \"#utility.yul\":12789:12798   */\n      dup3\n        /* \"#utility.yul\":12785:12803   */\n      add\n        /* \"#utility.yul\":12777:12803   */\n      swap1\n      pop\n        /* \"#utility.yul\":12849:12858   */\n      dup2\n        /* \"#utility.yul\":12843:12847   */\n      dup2\n        /* \"#utility.yul\":12839:12859   */\n      sub\n        /* \"#utility.yul\":12835:12836   */\n      0x00\n        /* \"#utility.yul\":12824:12833   */\n      dup4\n        /* \"#utility.yul\":12820:12837   */\n      add\n        /* \"#utility.yul\":12813:12860   */\n      mstore\n        /* \"#utility.yul\":12877:13008   */\n      tag_395\n        /* \"#utility.yul\":13003:13007   */\n      dup2\n        /* \"#utility.yul\":12877:13008   */\n      tag_244\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":12869:13008   */\n      swap1\n      pop\n        /* \"#utility.yul\":12596:13015   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13021:13201   */\n    tag_245:\n        /* \"#utility.yul\":13069:13146   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13066:13067   */\n      0x00\n        /* \"#utility.yul\":13059:13147   */\n      mstore\n        /* \"#utility.yul\":13166:13170   */\n      0x11\n        /* \"#utility.yul\":13163:13164   */\n      0x04\n        /* \"#utility.yul\":13156:13171   */\n      mstore\n        /* \"#utility.yul\":13190:13194   */\n      0x24\n        /* \"#utility.yul\":13187:13188   */\n      0x00\n        /* \"#utility.yul\":13180:13195   */\n      revert\n        /* \"#utility.yul\":13207:13617   */\n    tag_63:\n        /* \"#utility.yul\":13247:13254   */\n      0x00\n        /* \"#utility.yul\":13270:13290   */\n      tag_398\n        /* \"#utility.yul\":13288:13289   */\n      dup3\n        /* \"#utility.yul\":13270:13290   */\n      tag_223\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":13265:13290   */\n      swap2\n      pop\n        /* \"#utility.yul\":13304:13324   */\n      tag_399\n        /* \"#utility.yul\":13322:13323   */\n      dup4\n        /* \"#utility.yul\":13304:13324   */\n      tag_223\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":13299:13324   */\n      swap3\n      pop\n        /* \"#utility.yul\":13359:13360   */\n      dup3\n        /* \"#utility.yul\":13356:13357   */\n      dup3\n        /* \"#utility.yul\":13352:13361   */\n      mul\n        /* \"#utility.yul\":13381:13411   */\n      tag_400\n        /* \"#utility.yul\":13399:13410   */\n      dup2\n        /* \"#utility.yul\":13381:13411   */\n      tag_223\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":13370:13411   */\n      swap2\n      pop\n        /* \"#utility.yul\":13560:13561   */\n      dup3\n        /* \"#utility.yul\":13551:13558   */\n      dup3\n        /* \"#utility.yul\":13547:13562   */\n      div\n        /* \"#utility.yul\":13544:13545   */\n      dup5\n        /* \"#utility.yul\":13541:13563   */\n      eq\n        /* \"#utility.yul\":13521:13522   */\n      dup4\n        /* \"#utility.yul\":13514:13523   */\n      iszero\n        /* \"#utility.yul\":13494:13577   */\n      or\n        /* \"#utility.yul\":13471:13610   */\n      tag_401\n      jumpi\n        /* \"#utility.yul\":13590:13608   */\n      tag_402\n      tag_245\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":13471:13610   */\n    tag_401:\n        /* \"#utility.yul\":13255:13617   */\n      pop\n        /* \"#utility.yul\":13207:13617   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13623:13814   */\n    tag_67:\n        /* \"#utility.yul\":13663:13666   */\n      0x00\n        /* \"#utility.yul\":13682:13702   */\n      tag_404\n        /* \"#utility.yul\":13700:13701   */\n      dup3\n        /* \"#utility.yul\":13682:13702   */\n      tag_223\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":13677:13702   */\n      swap2\n      pop\n        /* \"#utility.yul\":13716:13736   */\n      tag_405\n        /* \"#utility.yul\":13734:13735   */\n      dup4\n        /* \"#utility.yul\":13716:13736   */\n      tag_223\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":13711:13736   */\n      swap3\n      pop\n        /* \"#utility.yul\":13759:13760   */\n      dup3\n        /* \"#utility.yul\":13756:13757   */\n      dup3\n        /* \"#utility.yul\":13752:13761   */\n      add\n        /* \"#utility.yul\":13745:13761   */\n      swap1\n      pop\n        /* \"#utility.yul\":13780:13783   */\n      dup1\n        /* \"#utility.yul\":13777:13778   */\n      dup3\n        /* \"#utility.yul\":13774:13784   */\n      gt\n        /* \"#utility.yul\":13771:13807   */\n      iszero\n      tag_406\n      jumpi\n        /* \"#utility.yul\":13787:13805   */\n      tag_407\n      tag_245\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":13771:13807   */\n    tag_406:\n        /* \"#utility.yul\":13623:13814   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13820:14000   */\n    tag_246:\n        /* \"#utility.yul\":13868:13945   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13865:13866   */\n      0x00\n        /* \"#utility.yul\":13858:13946   */\n      mstore\n        /* \"#utility.yul\":13965:13969   */\n      0x12\n        /* \"#utility.yul\":13962:13963   */\n      0x04\n        /* \"#utility.yul\":13955:13970   */\n      mstore\n        /* \"#utility.yul\":13989:13993   */\n      0x24\n        /* \"#utility.yul\":13986:13987   */\n      0x00\n        /* \"#utility.yul\":13979:13994   */\n      revert\n        /* \"#utility.yul\":14006:14191   */\n    tag_69:\n        /* \"#utility.yul\":14046:14047   */\n      0x00\n        /* \"#utility.yul\":14063:14083   */\n      tag_410\n        /* \"#utility.yul\":14081:14082   */\n      dup3\n        /* \"#utility.yul\":14063:14083   */\n      tag_223\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":14058:14083   */\n      swap2\n      pop\n        /* \"#utility.yul\":14097:14117   */\n      tag_411\n        /* \"#utility.yul\":14115:14116   */\n      dup4\n        /* \"#utility.yul\":14097:14117   */\n      tag_223\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":14092:14117   */\n      swap3\n      pop\n        /* \"#utility.yul\":14136:14137   */\n      dup3\n        /* \"#utility.yul\":14126:14161   */\n      tag_412\n      jumpi\n        /* \"#utility.yul\":14141:14159   */\n      tag_413\n      tag_246\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":14126:14161   */\n    tag_412:\n        /* \"#utility.yul\":14183:14184   */\n      dup3\n        /* \"#utility.yul\":14180:14181   */\n      dup3\n        /* \"#utility.yul\":14176:14185   */\n      div\n        /* \"#utility.yul\":14171:14185   */\n      swap1\n      pop\n        /* \"#utility.yul\":14006:14191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14197:14354   */\n    tag_247:\n        /* \"#utility.yul\":14337:14346   */\n      0x4578706972656400000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14333:14334   */\n      0x00\n        /* \"#utility.yul\":14325:14331   */\n      dup3\n        /* \"#utility.yul\":14321:14335   */\n      add\n        /* \"#utility.yul\":14314:14347   */\n      mstore\n        /* \"#utility.yul\":14197:14354   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14360:14725   */\n    tag_248:\n        /* \"#utility.yul\":14502:14505   */\n      0x00\n        /* \"#utility.yul\":14523:14589   */\n      tag_416\n        /* \"#utility.yul\":14587:14588   */\n      0x07\n        /* \"#utility.yul\":14582:14585   */\n      dup4\n        /* \"#utility.yul\":14523:14589   */\n      tag_242\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":14516:14589   */\n      swap2\n      pop\n        /* \"#utility.yul\":14598:14691   */\n      tag_417\n        /* \"#utility.yul\":14687:14690   */\n      dup3\n        /* \"#utility.yul\":14598:14691   */\n      tag_247\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":14716:14718   */\n      0x20\n        /* \"#utility.yul\":14711:14714   */\n      dup3\n        /* \"#utility.yul\":14707:14719   */\n      add\n        /* \"#utility.yul\":14700:14719   */\n      swap1\n      pop\n        /* \"#utility.yul\":14360:14725   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14731:15150   */\n    tag_73:\n        /* \"#utility.yul\":14897:14901   */\n      0x00\n        /* \"#utility.yul\":14935:14937   */\n      0x20\n        /* \"#utility.yul\":14924:14933   */\n      dup3\n        /* \"#utility.yul\":14920:14938   */\n      add\n        /* \"#utility.yul\":14912:14938   */\n      swap1\n      pop\n        /* \"#utility.yul\":14984:14993   */\n      dup2\n        /* \"#utility.yul\":14978:14982   */\n      dup2\n        /* \"#utility.yul\":14974:14994   */\n      sub\n        /* \"#utility.yul\":14970:14971   */\n      0x00\n        /* \"#utility.yul\":14959:14968   */\n      dup4\n        /* \"#utility.yul\":14955:14972   */\n      add\n        /* \"#utility.yul\":14948:14995   */\n      mstore\n        /* \"#utility.yul\":15012:15143   */\n      tag_419\n        /* \"#utility.yul\":15138:15142   */\n      dup2\n        /* \"#utility.yul\":15012:15143   */\n      tag_248\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":15004:15143   */\n      swap1\n      pop\n        /* \"#utility.yul\":14731:15150   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15156:15333   */\n    tag_249:\n        /* \"#utility.yul\":15296:15325   */\n      0x4f6e6c7920322d746f6b656e207061746820737570706f727465640000000000\n        /* \"#utility.yul\":15292:15293   */\n      0x00\n        /* \"#utility.yul\":15284:15290   */\n      dup3\n        /* \"#utility.yul\":15280:15294   */\n      add\n        /* \"#utility.yul\":15273:15326   */\n      mstore\n        /* \"#utility.yul\":15156:15333   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15339:15705   */\n    tag_250:\n        /* \"#utility.yul\":15481:15484   */\n      0x00\n        /* \"#utility.yul\":15502:15569   */\n      tag_422\n        /* \"#utility.yul\":15566:15568   */\n      0x1b\n        /* \"#utility.yul\":15561:15564   */\n      dup4\n        /* \"#utility.yul\":15502:15569   */\n      tag_242\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":15495:15569   */\n      swap2\n      pop\n        /* \"#utility.yul\":15578:15671   */\n      tag_423\n        /* \"#utility.yul\":15667:15670   */\n      dup3\n        /* \"#utility.yul\":15578:15671   */\n      tag_249\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":15696:15698   */\n      0x20\n        /* \"#utility.yul\":15691:15694   */\n      dup3\n        /* \"#utility.yul\":15687:15699   */\n      add\n        /* \"#utility.yul\":15680:15699   */\n      swap1\n      pop\n        /* \"#utility.yul\":15339:15705   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15711:16130   */\n    tag_76:\n        /* \"#utility.yul\":15877:15881   */\n      0x00\n        /* \"#utility.yul\":15915:15917   */\n      0x20\n        /* \"#utility.yul\":15904:15913   */\n      dup3\n        /* \"#utility.yul\":15900:15918   */\n      add\n        /* \"#utility.yul\":15892:15918   */\n      swap1\n      pop\n        /* \"#utility.yul\":15964:15973   */\n      dup2\n        /* \"#utility.yul\":15958:15962   */\n      dup2\n        /* \"#utility.yul\":15954:15974   */\n      sub\n        /* \"#utility.yul\":15950:15951   */\n      0x00\n        /* \"#utility.yul\":15939:15948   */\n      dup4\n        /* \"#utility.yul\":15935:15952   */\n      add\n        /* \"#utility.yul\":15928:15975   */\n      mstore\n        /* \"#utility.yul\":15992:16123   */\n      tag_425\n        /* \"#utility.yul\":16118:16122   */\n      dup2\n        /* \"#utility.yul\":15992:16123   */\n      tag_250\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":15984:16123   */\n      swap1\n      pop\n        /* \"#utility.yul\":15711:16130   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16136:16316   */\n    tag_79:\n        /* \"#utility.yul\":16184:16261   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16181:16182   */\n      0x00\n        /* \"#utility.yul\":16174:16262   */\n      mstore\n        /* \"#utility.yul\":16281:16285   */\n      0x32\n        /* \"#utility.yul\":16278:16279   */\n      0x04\n        /* \"#utility.yul\":16271:16286   */\n      mstore\n        /* \"#utility.yul\":16305:16309   */\n      0x24\n        /* \"#utility.yul\":16302:16303   */\n      0x00\n        /* \"#utility.yul\":16295:16310   */\n      revert\n        /* \"#utility.yul\":16322:16651   */\n    tag_81:\n        /* \"#utility.yul\":16381:16387   */\n      0x00\n        /* \"#utility.yul\":16430:16432   */\n      0x20\n        /* \"#utility.yul\":16418:16427   */\n      dup3\n        /* \"#utility.yul\":16409:16416   */\n      dup5\n        /* \"#utility.yul\":16405:16428   */\n      sub\n        /* \"#utility.yul\":16401:16433   */\n      slt\n        /* \"#utility.yul\":16398:16517   */\n      iszero\n      tag_428\n      jumpi\n        /* \"#utility.yul\":16436:16515   */\n      tag_429\n      tag_216\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":16398:16517   */\n    tag_428:\n        /* \"#utility.yul\":16556:16557   */\n      0x00\n        /* \"#utility.yul\":16581:16634   */\n      tag_430\n        /* \"#utility.yul\":16626:16633   */\n      dup5\n        /* \"#utility.yul\":16617:16623   */\n      dup3\n        /* \"#utility.yul\":16606:16615   */\n      dup6\n        /* \"#utility.yul\":16602:16624   */\n      add\n        /* \"#utility.yul\":16581:16634   */\n      tag_234\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":16571:16634   */\n      swap2\n      pop\n        /* \"#utility.yul\":16527:16644   */\n      pop\n        /* \"#utility.yul\":16322:16651   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16657:16826   */\n    tag_251:\n        /* \"#utility.yul\":16797:16818   */\n      0x496e73756666696369656e74206f757470757400000000000000000000000000\n        /* \"#utility.yul\":16793:16794   */\n      0x00\n        /* \"#utility.yul\":16785:16791   */\n      dup3\n        /* \"#utility.yul\":16781:16795   */\n      add\n        /* \"#utility.yul\":16774:16819   */\n      mstore\n        /* \"#utility.yul\":16657:16826   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16832:17198   */\n    tag_252:\n        /* \"#utility.yul\":16974:16977   */\n      0x00\n        /* \"#utility.yul\":16995:17062   */\n      tag_433\n        /* \"#utility.yul\":17059:17061   */\n      0x13\n        /* \"#utility.yul\":17054:17057   */\n      dup4\n        /* \"#utility.yul\":16995:17062   */\n      tag_242\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":16988:17062   */\n      swap2\n      pop\n        /* \"#utility.yul\":17071:17164   */\n      tag_434\n        /* \"#utility.yul\":17160:17163   */\n      dup3\n        /* \"#utility.yul\":17071:17164   */\n      tag_251\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":17189:17191   */\n      0x20\n        /* \"#utility.yul\":17184:17187   */\n      dup3\n        /* \"#utility.yul\":17180:17192   */\n      add\n        /* \"#utility.yul\":17173:17192   */\n      swap1\n      pop\n        /* \"#utility.yul\":16832:17198   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17204:17623   */\n    tag_89:\n        /* \"#utility.yul\":17370:17374   */\n      0x00\n        /* \"#utility.yul\":17408:17410   */\n      0x20\n        /* \"#utility.yul\":17397:17406   */\n      dup3\n        /* \"#utility.yul\":17393:17411   */\n      add\n        /* \"#utility.yul\":17385:17411   */\n      swap1\n      pop\n        /* \"#utility.yul\":17457:17466   */\n      dup2\n        /* \"#utility.yul\":17451:17455   */\n      dup2\n        /* \"#utility.yul\":17447:17467   */\n      sub\n        /* \"#utility.yul\":17443:17444   */\n      0x00\n        /* \"#utility.yul\":17432:17441   */\n      dup4\n        /* \"#utility.yul\":17428:17445   */\n      add\n        /* \"#utility.yul\":17421:17468   */\n      mstore\n        /* \"#utility.yul\":17485:17616   */\n      tag_436\n        /* \"#utility.yul\":17611:17615   */\n      dup2\n        /* \"#utility.yul\":17485:17616   */\n      tag_252\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":17477:17616   */\n      swap1\n      pop\n        /* \"#utility.yul\":17204:17623   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17629:17809   */\n    tag_96:\n        /* \"#utility.yul\":17677:17754   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17674:17675   */\n      0x00\n        /* \"#utility.yul\":17667:17755   */\n      mstore\n        /* \"#utility.yul\":17774:17778   */\n      0x41\n        /* \"#utility.yul\":17771:17772   */\n      0x04\n        /* \"#utility.yul\":17764:17779   */\n      mstore\n        /* \"#utility.yul\":17798:17802   */\n      0x24\n        /* \"#utility.yul\":17795:17796   */\n      0x00\n        /* \"#utility.yul\":17788:17803   */\n      revert\n        /* \"#utility.yul\":17815:17976   */\n    tag_253:\n        /* \"#utility.yul\":17955:17968   */\n      0x4e6f207265736572766573000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17951:17952   */\n      0x00\n        /* \"#utility.yul\":17943:17949   */\n      dup3\n        /* \"#utility.yul\":17939:17953   */\n      add\n        /* \"#utility.yul\":17932:17969   */\n      mstore\n        /* \"#utility.yul\":17815:17976   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17982:18348   */\n    tag_254:\n        /* \"#utility.yul\":18124:18127   */\n      0x00\n        /* \"#utility.yul\":18145:18212   */\n      tag_440\n        /* \"#utility.yul\":18209:18211   */\n      0x0b\n        /* \"#utility.yul\":18204:18207   */\n      dup4\n        /* \"#utility.yul\":18145:18212   */\n      tag_242\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":18138:18212   */\n      swap2\n      pop\n        /* \"#utility.yul\":18221:18314   */\n      tag_441\n        /* \"#utility.yul\":18310:18313   */\n      dup3\n        /* \"#utility.yul\":18221:18314   */\n      tag_253\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":18339:18341   */\n      0x20\n        /* \"#utility.yul\":18334:18337   */\n      dup3\n        /* \"#utility.yul\":18330:18342   */\n      add\n        /* \"#utility.yul\":18323:18342   */\n      swap1\n      pop\n        /* \"#utility.yul\":17982:18348   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18354:18773   */\n    tag_110:\n        /* \"#utility.yul\":18520:18524   */\n      0x00\n        /* \"#utility.yul\":18558:18560   */\n      0x20\n        /* \"#utility.yul\":18547:18556   */\n      dup3\n        /* \"#utility.yul\":18543:18561   */\n      add\n        /* \"#utility.yul\":18535:18561   */\n      swap1\n      pop\n        /* \"#utility.yul\":18607:18616   */\n      dup2\n        /* \"#utility.yul\":18601:18605   */\n      dup2\n        /* \"#utility.yul\":18597:18617   */\n      sub\n        /* \"#utility.yul\":18593:18594   */\n      0x00\n        /* \"#utility.yul\":18582:18591   */\n      dup4\n        /* \"#utility.yul\":18578:18595   */\n      add\n        /* \"#utility.yul\":18571:18618   */\n      mstore\n        /* \"#utility.yul\":18635:18766   */\n      tag_443\n        /* \"#utility.yul\":18761:18765   */\n      dup2\n        /* \"#utility.yul\":18635:18766   */\n      tag_254\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":18627:18766   */\n      swap1\n      pop\n        /* \"#utility.yul\":18354:18773   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18779:18941   */\n    tag_255:\n        /* \"#utility.yul\":18919:18933   */\n      0x4e6f206c69717569646974790000000000000000000000000000000000000000\n        /* \"#utility.yul\":18915:18916   */\n      0x00\n        /* \"#utility.yul\":18907:18913   */\n      dup3\n        /* \"#utility.yul\":18903:18917   */\n      add\n        /* \"#utility.yul\":18896:18934   */\n      mstore\n        /* \"#utility.yul\":18779:18941   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18947:19313   */\n    tag_256:\n        /* \"#utility.yul\":19089:19092   */\n      0x00\n        /* \"#utility.yul\":19110:19177   */\n      tag_446\n        /* \"#utility.yul\":19174:19176   */\n      0x0c\n        /* \"#utility.yul\":19169:19172   */\n      dup4\n        /* \"#utility.yul\":19110:19177   */\n      tag_242\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":19103:19177   */\n      swap2\n      pop\n        /* \"#utility.yul\":19186:19279   */\n      tag_447\n        /* \"#utility.yul\":19275:19278   */\n      dup3\n        /* \"#utility.yul\":19186:19279   */\n      tag_255\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":19304:19306   */\n      0x20\n        /* \"#utility.yul\":19299:19302   */\n      dup3\n        /* \"#utility.yul\":19295:19307   */\n      add\n        /* \"#utility.yul\":19288:19307   */\n      swap1\n      pop\n        /* \"#utility.yul\":18947:19313   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19319:19738   */\n    tag_119:\n        /* \"#utility.yul\":19485:19489   */\n      0x00\n        /* \"#utility.yul\":19523:19525   */\n      0x20\n        /* \"#utility.yul\":19512:19521   */\n      dup3\n        /* \"#utility.yul\":19508:19526   */\n      add\n        /* \"#utility.yul\":19500:19526   */\n      swap1\n      pop\n        /* \"#utility.yul\":19572:19581   */\n      dup2\n        /* \"#utility.yul\":19566:19570   */\n      dup2\n        /* \"#utility.yul\":19562:19582   */\n      sub\n        /* \"#utility.yul\":19558:19559   */\n      0x00\n        /* \"#utility.yul\":19547:19556   */\n      dup4\n        /* \"#utility.yul\":19543:19560   */\n      add\n        /* \"#utility.yul\":19536:19583   */\n      mstore\n        /* \"#utility.yul\":19600:19731   */\n      tag_449\n        /* \"#utility.yul\":19726:19730   */\n      dup2\n        /* \"#utility.yul\":19600:19731   */\n      tag_256\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":19592:19731   */\n      swap1\n      pop\n        /* \"#utility.yul\":19319:19738   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19744:19902   */\n    tag_257:\n        /* \"#utility.yul\":19884:19894   */\n      0x536c697070616765000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19880:19881   */\n      0x00\n        /* \"#utility.yul\":19872:19878   */\n      dup3\n        /* \"#utility.yul\":19868:19882   */\n      add\n        /* \"#utility.yul\":19861:19895   */\n      mstore\n        /* \"#utility.yul\":19744:19902   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19908:20273   */\n    tag_258:\n        /* \"#utility.yul\":20050:20053   */\n      0x00\n        /* \"#utility.yul\":20071:20137   */\n      tag_452\n        /* \"#utility.yul\":20135:20136   */\n      0x08\n        /* \"#utility.yul\":20130:20133   */\n      dup4\n        /* \"#utility.yul\":20071:20137   */\n      tag_242\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":20064:20137   */\n      swap2\n      pop\n        /* \"#utility.yul\":20146:20239   */\n      tag_453\n        /* \"#utility.yul\":20235:20238   */\n      dup3\n        /* \"#utility.yul\":20146:20239   */\n      tag_257\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":20264:20266   */\n      0x20\n        /* \"#utility.yul\":20259:20262   */\n      dup3\n        /* \"#utility.yul\":20255:20267   */\n      add\n        /* \"#utility.yul\":20248:20267   */\n      swap1\n      pop\n        /* \"#utility.yul\":19908:20273   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20279:20698   */\n    tag_127:\n        /* \"#utility.yul\":20445:20449   */\n      0x00\n        /* \"#utility.yul\":20483:20485   */\n      0x20\n        /* \"#utility.yul\":20472:20481   */\n      dup3\n        /* \"#utility.yul\":20468:20486   */\n      add\n        /* \"#utility.yul\":20460:20486   */\n      swap1\n      pop\n        /* \"#utility.yul\":20532:20541   */\n      dup2\n        /* \"#utility.yul\":20526:20530   */\n      dup2\n        /* \"#utility.yul\":20522:20542   */\n      sub\n        /* \"#utility.yul\":20518:20519   */\n      0x00\n        /* \"#utility.yul\":20507:20516   */\n      dup4\n        /* \"#utility.yul\":20503:20520   */\n      add\n        /* \"#utility.yul\":20496:20543   */\n      mstore\n        /* \"#utility.yul\":20560:20691   */\n      tag_455\n        /* \"#utility.yul\":20686:20690   */\n      dup2\n        /* \"#utility.yul\":20560:20691   */\n      tag_258\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":20552:20691   */\n      swap1\n      pop\n        /* \"#utility.yul\":20279:20698   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20704:20898   */\n    tag_129:\n        /* \"#utility.yul\":20744:20748   */\n      0x00\n        /* \"#utility.yul\":20764:20784   */\n      tag_457\n        /* \"#utility.yul\":20782:20783   */\n      dup3\n        /* \"#utility.yul\":20764:20784   */\n      tag_223\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":20759:20784   */\n      swap2\n      pop\n        /* \"#utility.yul\":20798:20818   */\n      tag_458\n        /* \"#utility.yul\":20816:20817   */\n      dup4\n        /* \"#utility.yul\":20798:20818   */\n      tag_223\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":20793:20818   */\n      swap3\n      pop\n        /* \"#utility.yul\":20842:20843   */\n      dup3\n        /* \"#utility.yul\":20839:20840   */\n      dup3\n        /* \"#utility.yul\":20835:20844   */\n      sub\n        /* \"#utility.yul\":20827:20844   */\n      swap1\n      pop\n        /* \"#utility.yul\":20866:20867   */\n      dup2\n        /* \"#utility.yul\":20860:20864   */\n      dup2\n        /* \"#utility.yul\":20857:20868   */\n      gt\n        /* \"#utility.yul\":20854:20891   */\n      iszero\n      tag_459\n      jumpi\n        /* \"#utility.yul\":20871:20889   */\n      tag_460\n      tag_245\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":20854:20891   */\n    tag_459:\n        /* \"#utility.yul\":20704:20898   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20904:21127   */\n    tag_132:\n        /* \"#utility.yul\":20944:20948   */\n      0x00\n        /* \"#utility.yul\":20964:20984   */\n      tag_462\n        /* \"#utility.yul\":20982:20983   */\n      dup3\n        /* \"#utility.yul\":20964:20984   */\n      tag_221\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":20959:20984   */\n      swap2\n      pop\n        /* \"#utility.yul\":20998:21018   */\n      tag_463\n        /* \"#utility.yul\":21016:21017   */\n      dup4\n        /* \"#utility.yul\":20998:21018   */\n      tag_221\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":20993:21018   */\n      swap3\n      pop\n        /* \"#utility.yul\":21042:21043   */\n      dup3\n        /* \"#utility.yul\":21039:21040   */\n      dup3\n        /* \"#utility.yul\":21035:21044   */\n      sub\n        /* \"#utility.yul\":21027:21044   */\n      swap1\n      pop\n        /* \"#utility.yul\":21066:21096   */\n      0xffffffffffffffffffffffffffff\n        /* \"#utility.yul\":21060:21064   */\n      dup2\n        /* \"#utility.yul\":21057:21097   */\n      gt\n        /* \"#utility.yul\":21054:21120   */\n      iszero\n      tag_464\n      jumpi\n        /* \"#utility.yul\":21100:21118   */\n      tag_465\n      tag_245\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":21054:21120   */\n    tag_464:\n        /* \"#utility.yul\":20904:21127   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21133:21353   */\n    tag_159:\n        /* \"#utility.yul\":21173:21176   */\n      0x00\n        /* \"#utility.yul\":21192:21212   */\n      tag_467\n        /* \"#utility.yul\":21210:21211   */\n      dup3\n        /* \"#utility.yul\":21192:21212   */\n      tag_221\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":21187:21212   */\n      swap2\n      pop\n        /* \"#utility.yul\":21226:21246   */\n      tag_468\n        /* \"#utility.yul\":21244:21245   */\n      dup4\n        /* \"#utility.yul\":21226:21246   */\n      tag_221\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":21221:21246   */\n      swap3\n      pop\n        /* \"#utility.yul\":21269:21270   */\n      dup3\n        /* \"#utility.yul\":21266:21267   */\n      dup3\n        /* \"#utility.yul\":21262:21271   */\n      add\n        /* \"#utility.yul\":21255:21271   */\n      swap1\n      pop\n        /* \"#utility.yul\":21292:21322   */\n      0xffffffffffffffffffffffffffff\n        /* \"#utility.yul\":21287:21290   */\n      dup2\n        /* \"#utility.yul\":21284:21323   */\n      gt\n        /* \"#utility.yul\":21281:21346   */\n      iszero\n      tag_469\n      jumpi\n        /* \"#utility.yul\":21326:21344   */\n      tag_470\n      tag_245\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":21281:21346   */\n    tag_469:\n        /* \"#utility.yul\":21133:21353   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21359:21453   */\n    tag_259:\n        /* \"#utility.yul\":21392:21400   */\n      0x00\n        /* \"#utility.yul\":21440:21445   */\n      dup2\n        /* \"#utility.yul\":21436:21438   */\n      0x60\n        /* \"#utility.yul\":21432:21446   */\n      shl\n        /* \"#utility.yul\":21411:21446   */\n      swap1\n      pop\n        /* \"#utility.yul\":21359:21453   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21459:21553   */\n    tag_260:\n        /* \"#utility.yul\":21498:21505   */\n      0x00\n        /* \"#utility.yul\":21527:21547   */\n      tag_473\n        /* \"#utility.yul\":21541:21546   */\n      dup3\n        /* \"#utility.yul\":21527:21547   */\n      tag_259\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":21516:21547   */\n      swap1\n      pop\n        /* \"#utility.yul\":21459:21553   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21559:21659   */\n    tag_261:\n        /* \"#utility.yul\":21598:21605   */\n      0x00\n        /* \"#utility.yul\":21627:21653   */\n      tag_475\n        /* \"#utility.yul\":21647:21652   */\n      dup3\n        /* \"#utility.yul\":21627:21653   */\n      tag_260\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":21616:21653   */\n      swap1\n      pop\n        /* \"#utility.yul\":21559:21659   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21665:21822   */\n    tag_262:\n        /* \"#utility.yul\":21770:21815   */\n      tag_477\n        /* \"#utility.yul\":21790:21814   */\n      tag_478\n        /* \"#utility.yul\":21808:21813   */\n      dup3\n        /* \"#utility.yul\":21790:21814   */\n      tag_232\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":21770:21815   */\n      tag_261\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":21765:21768   */\n      dup3\n        /* \"#utility.yul\":21758:21816   */\n      mstore\n        /* \"#utility.yul\":21665:21822   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21828:22225   */\n    tag_170:\n        /* \"#utility.yul\":21968:21971   */\n      0x00\n        /* \"#utility.yul\":21983:22058   */\n      tag_480\n        /* \"#utility.yul\":22054:22057   */\n      dup3\n        /* \"#utility.yul\":22045:22051   */\n      dup6\n        /* \"#utility.yul\":21983:22058   */\n      tag_262\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":22083:22085   */\n      0x14\n        /* \"#utility.yul\":22078:22081   */\n      dup3\n        /* \"#utility.yul\":22074:22086   */\n      add\n        /* \"#utility.yul\":22067:22086   */\n      swap2\n      pop\n        /* \"#utility.yul\":22096:22171   */\n      tag_481\n        /* \"#utility.yul\":22167:22170   */\n      dup3\n        /* \"#utility.yul\":22158:22164   */\n      dup5\n        /* \"#utility.yul\":22096:22171   */\n      tag_262\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":22196:22198   */\n      0x14\n        /* \"#utility.yul\":22191:22194   */\n      dup3\n        /* \"#utility.yul\":22187:22199   */\n      add\n        /* \"#utility.yul\":22180:22199   */\n      swap2\n      pop\n        /* \"#utility.yul\":22216:22219   */\n      dup2\n        /* \"#utility.yul\":22209:22219   */\n      swap1\n      pop\n        /* \"#utility.yul\":21828:22225   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22231:22349   */\n    tag_263:\n        /* \"#utility.yul\":22318:22342   */\n      tag_483\n        /* \"#utility.yul\":22336:22341   */\n      dup2\n        /* \"#utility.yul\":22318:22342   */\n      tag_232\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":22313:22316   */\n      dup3\n        /* \"#utility.yul\":22306:22343   */\n      mstore\n        /* \"#utility.yul\":22231:22349   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22355:22687   */\n    tag_177:\n        /* \"#utility.yul\":22476:22480   */\n      0x00\n        /* \"#utility.yul\":22514:22516   */\n      0x40\n        /* \"#utility.yul\":22503:22512   */\n      dup3\n        /* \"#utility.yul\":22499:22517   */\n      add\n        /* \"#utility.yul\":22491:22517   */\n      swap1\n      pop\n        /* \"#utility.yul\":22527:22598   */\n      tag_485\n        /* \"#utility.yul\":22595:22596   */\n      0x00\n        /* \"#utility.yul\":22584:22593   */\n      dup4\n        /* \"#utility.yul\":22580:22597   */\n      add\n        /* \"#utility.yul\":22571:22577   */\n      dup6\n        /* \"#utility.yul\":22527:22598   */\n      tag_263\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":22608:22680   */\n      tag_486\n        /* \"#utility.yul\":22676:22678   */\n      0x20\n        /* \"#utility.yul\":22665:22674   */\n      dup4\n        /* \"#utility.yul\":22661:22679   */\n      add\n        /* \"#utility.yul\":22652:22658   */\n      dup5\n        /* \"#utility.yul\":22608:22680   */\n      tag_226\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":22355:22687   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22693:22857   */\n    tag_264:\n        /* \"#utility.yul\":22833:22849   */\n      0x496e73756666696369656e742042000000000000000000000000000000000000\n        /* \"#utility.yul\":22829:22830   */\n      0x00\n        /* \"#utility.yul\":22821:22827   */\n      dup3\n        /* \"#utility.yul\":22817:22831   */\n      add\n        /* \"#utility.yul\":22810:22850   */\n      mstore\n        /* \"#utility.yul\":22693:22857   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22863:23229   */\n    tag_265:\n        /* \"#utility.yul\":23005:23008   */\n      0x00\n        /* \"#utility.yul\":23026:23093   */\n      tag_489\n        /* \"#utility.yul\":23090:23092   */\n      0x0e\n        /* \"#utility.yul\":23085:23088   */\n      dup4\n        /* \"#utility.yul\":23026:23093   */\n      tag_242\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":23019:23093   */\n      swap2\n      pop\n        /* \"#utility.yul\":23102:23195   */\n      tag_490\n        /* \"#utility.yul\":23191:23194   */\n      dup3\n        /* \"#utility.yul\":23102:23195   */\n      tag_264\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":23220:23222   */\n      0x20\n        /* \"#utility.yul\":23215:23218   */\n      dup3\n        /* \"#utility.yul\":23211:23223   */\n      add\n        /* \"#utility.yul\":23204:23223   */\n      swap1\n      pop\n        /* \"#utility.yul\":22863:23229   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23235:23654   */\n    tag_188:\n        /* \"#utility.yul\":23401:23405   */\n      0x00\n        /* \"#utility.yul\":23439:23441   */\n      0x20\n        /* \"#utility.yul\":23428:23437   */\n      dup3\n        /* \"#utility.yul\":23424:23442   */\n      add\n        /* \"#utility.yul\":23416:23442   */\n      swap1\n      pop\n        /* \"#utility.yul\":23488:23497   */\n      dup2\n        /* \"#utility.yul\":23482:23486   */\n      dup2\n        /* \"#utility.yul\":23478:23498   */\n      sub\n        /* \"#utility.yul\":23474:23475   */\n      0x00\n        /* \"#utility.yul\":23463:23472   */\n      dup4\n        /* \"#utility.yul\":23459:23476   */\n      add\n        /* \"#utility.yul\":23452:23499   */\n      mstore\n        /* \"#utility.yul\":23516:23647   */\n      tag_492\n        /* \"#utility.yul\":23642:23646   */\n      dup2\n        /* \"#utility.yul\":23516:23647   */\n      tag_265\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":23508:23647   */\n      swap1\n      pop\n        /* \"#utility.yul\":23235:23654   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23660:23824   */\n    tag_266:\n        /* \"#utility.yul\":23800:23816   */\n      0x496e73756666696369656e742041000000000000000000000000000000000000\n        /* \"#utility.yul\":23796:23797   */\n      0x00\n        /* \"#utility.yul\":23788:23794   */\n      dup3\n        /* \"#utility.yul\":23784:23798   */\n      add\n        /* \"#utility.yul\":23777:23817   */\n      mstore\n        /* \"#utility.yul\":23660:23824   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23830:24196   */\n    tag_267:\n        /* \"#utility.yul\":23972:23975   */\n      0x00\n        /* \"#utility.yul\":23993:24060   */\n      tag_495\n        /* \"#utility.yul\":24057:24059   */\n      0x0e\n        /* \"#utility.yul\":24052:24055   */\n      dup4\n        /* \"#utility.yul\":23993:24060   */\n      tag_242\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":23986:24060   */\n      swap2\n      pop\n        /* \"#utility.yul\":24069:24162   */\n      tag_496\n        /* \"#utility.yul\":24158:24161   */\n      dup3\n        /* \"#utility.yul\":24069:24162   */\n      tag_266\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":24187:24189   */\n      0x20\n        /* \"#utility.yul\":24182:24185   */\n      dup3\n        /* \"#utility.yul\":24178:24190   */\n      add\n        /* \"#utility.yul\":24171:24190   */\n      swap1\n      pop\n        /* \"#utility.yul\":23830:24196   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24202:24621   */\n    tag_194:\n        /* \"#utility.yul\":24368:24372   */\n      0x00\n        /* \"#utility.yul\":24406:24408   */\n      0x20\n        /* \"#utility.yul\":24395:24404   */\n      dup3\n        /* \"#utility.yul\":24391:24409   */\n      add\n        /* \"#utility.yul\":24383:24409   */\n      swap1\n      pop\n        /* \"#utility.yul\":24455:24464   */\n      dup2\n        /* \"#utility.yul\":24449:24453   */\n      dup2\n        /* \"#utility.yul\":24445:24465   */\n      sub\n        /* \"#utility.yul\":24441:24442   */\n      0x00\n        /* \"#utility.yul\":24430:24439   */\n      dup4\n        /* \"#utility.yul\":24426:24443   */\n      add\n        /* \"#utility.yul\":24419:24466   */\n      mstore\n        /* \"#utility.yul\":24483:24614   */\n      tag_498\n        /* \"#utility.yul\":24609:24613   */\n      dup2\n        /* \"#utility.yul\":24483:24614   */\n      tag_267\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":24475:24614   */\n      swap1\n      pop\n        /* \"#utility.yul\":24202:24621   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24627:25069   */\n    tag_207:\n        /* \"#utility.yul\":24776:24780   */\n      0x00\n        /* \"#utility.yul\":24814:24816   */\n      0x60\n        /* \"#utility.yul\":24803:24812   */\n      dup3\n        /* \"#utility.yul\":24799:24817   */\n      add\n        /* \"#utility.yul\":24791:24817   */\n      swap1\n      pop\n        /* \"#utility.yul\":24827:24898   */\n      tag_500\n        /* \"#utility.yul\":24895:24896   */\n      0x00\n        /* \"#utility.yul\":24884:24893   */\n      dup4\n        /* \"#utility.yul\":24880:24897   */\n      add\n        /* \"#utility.yul\":24871:24877   */\n      dup7\n        /* \"#utility.yul\":24827:24898   */\n      tag_263\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":24908:24980   */\n      tag_501\n        /* \"#utility.yul\":24976:24978   */\n      0x20\n        /* \"#utility.yul\":24965:24974   */\n      dup4\n        /* \"#utility.yul\":24961:24979   */\n      add\n        /* \"#utility.yul\":24952:24958   */\n      dup6\n        /* \"#utility.yul\":24908:24980   */\n      tag_263\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":24990:25062   */\n      tag_502\n        /* \"#utility.yul\":25058:25060   */\n      0x40\n        /* \"#utility.yul\":25047:25056   */\n      dup4\n        /* \"#utility.yul\":25043:25061   */\n      add\n        /* \"#utility.yul\":25034:25040   */\n      dup5\n        /* \"#utility.yul\":24990:25062   */\n      tag_226\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":24627:25069   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25075:25297   */\n    tag_214:\n        /* \"#utility.yul\":25168:25172   */\n      0x00\n        /* \"#utility.yul\":25206:25208   */\n      0x20\n        /* \"#utility.yul\":25195:25204   */\n      dup3\n        /* \"#utility.yul\":25191:25209   */\n      add\n        /* \"#utility.yul\":25183:25209   */\n      swap1\n      pop\n        /* \"#utility.yul\":25219:25290   */\n      tag_504\n        /* \"#utility.yul\":25287:25288   */\n      0x00\n        /* \"#utility.yul\":25276:25285   */\n      dup4\n        /* \"#utility.yul\":25272:25289   */\n      add\n        /* \"#utility.yul\":25263:25269   */\n      dup5\n        /* \"#utility.yul\":25219:25290   */\n      tag_263\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":25075:25297   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d5c5981ff7f4e4a2dff9b06db8dbc35c0ca45848e78e5fc82c8167a720ec43d664736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f5ffd5b506120428061001c5f395ff3fe608060405234801561000f575f5ffd5b5060043610610085575f3560e01c8063ac41865a11610059578063ac41865a1461014a578063baa2abde1461017a578063bb521a30146101ab578063e8e33700146101db57610085565b8062bbf1e414610089578063054d50d4146100ba57806338ed1739146100ea57806354b7a8f71461011a575b5f5ffd5b6100a3600480360381019061009e91906113b5565b61020d565b6040516100b1929190611408565b60405180910390f35b6100d460048036038101906100cf9190611462565b61025e565b6040516100e191906114c1565b60405180910390f35b61010460048036038101906100ff9190611595565b61030b565b60405161011191906116e2565b60405180910390f35b610134600480360381019061012f91906113b5565b6104f1565b60405161014191906114c1565b60405180910390f35b610164600480360381019061015f9190611702565b610506565b60405161017191906114c1565b60405180910390f35b610194600480360381019061018f9190611740565b610640565b6040516101a29291906117dd565b60405180910390f35b6101c560048036038101906101c09190611804565b61097f565b6040516101d291906114c1565b60405180910390f35b6101f560048036038101906101f09190611842565b61099f565b604051610204939291906118f3565b60405180910390f35b5f602052805f5260405f205f91509050805f015f9054906101000a90046dffffffffffffffffffffffffffff1690805f01600e9054906101000a90046dffffffffffffffffffffffffffff16905082565b5f5f8411801561026d57505f83115b801561027857505f82115b6102b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ae90611982565b60405180910390fd5b5f6103e5856102c691906119cd565b90505f83826102d591906119cd565b90505f826103e8876102e791906119cd565b6102f19190611a0e565b905080826102ff9190611a6e565b93505050509392505050565b606081421115610350576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034790611ae8565b60405180910390fd5b60028585905014610396576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038d90611b50565b60405180910390fd5b5f85855f8181106103aa576103a9611b6e565b5b90506020020160208101906103bf9190611b9b565b90505f868660018181106103d6576103d5611b6e565b5b90506020020160208101906103eb9190611b9b565b90505f6103f98a8484610a7f565b90508881101561043e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043590611c10565b60405180910390fd5b61044b83838c848a610b59565b61045783838c84610bb8565b600267ffffffffffffffff81111561047257610471611c2e565b5b6040519080825280602002602001820160405280156104a05781602001602082028036833780820191505090505b50935089845f815181106104b7576104b6611b6e565b5b60200260200101818152505080846001815181106104d8576104d7611b6e565b5b6020026020010181815250505050509695505050505050565b6001602052805f5260405f205f915090505481565b5f5f6105128484610d90565b90505f5f5f8381526020019081526020015f206040518060400160405290815f82015f9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff1681526020015f8201600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff168152505090505f5f6105c4878785610e36565b915091505f821180156105d657505f81115b610615576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060c90611ca5565b60405180910390fd5b81670de0b6b3a76400008261062a91906119cd565b6106349190611a6e565b94505050505092915050565b5f5f82421115610685576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067c90611ae8565b60405180910390fd5b5f6106908a8a610d90565b90505f5f5f8381526020019081526020015f2090505f60015f8481526020019081526020015f205490505f81116106fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f390611d0d565b60405180910390fd5b808a835f015f9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff1661073591906119cd565b61073f9190611a6e565b9450808a835f01600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff1661077b91906119cd565b6107859190611a6e565b93508885101580156107975750878410155b6107d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107cd90611d75565b60405180910390fd5b8960025f8581526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546108319190611d93565b925050819055508960015f8581526020019081526020015f205f8282546108589190611d93565b9250508190555084825f015f8282829054906101000a90046dffffffffffffffffffffffffffff1661088a9190611dc6565b92506101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff16021790555083825f01600e8282829054906101000a90046dffffffffffffffffffffffffffff166108e89190611dc6565b92506101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff16021790555061094587868e73ffffffffffffffffffffffffffffffffffffffff16610eb59092919063ffffffff16565b61097087858d73ffffffffffffffffffffffffffffffffffffffff16610eb59092919063ffffffff16565b50505097509795505050505050565b6002602052815f5260405f20602052805f5260405f205f91509150505481565b5f5f5f834211156109e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109dc90611ae8565b60405180910390fd5b5f6109f08c8c610d90565b90505f5f5f8381526020019081526020015f209050610a4c815f015f9054906101000a90046dffffffffffffffffffffffffffff16825f01600e9054906101000a90046dffffffffffffffffffffffffffff168d8d8d8d610f34565b8095508196505050610a608d8d87876110a1565b610a6d8286868a85611101565b92505050985098509895505050505050565b5f5f610a8b8484610d90565b90505f5f5f8381526020019081526020015f206040518060400160405290815f82015f9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff1681526020015f8201600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff168152505090505f5f610b3d878785610e36565b91509150610b4c88838361025e565b9450505050509392505050565b610b863330858873ffffffffffffffffffffffffffffffffffffffff1661125d909392919063ffffffff16565b610bb181838673ffffffffffffffffffffffffffffffffffffffff16610eb59092919063ffffffff16565b5050505050565b5f610bc38585610d90565b90505f5f5f8381526020019081526020015f2090508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161015610ccc5783815f015f8282829054906101000a90046dffffffffffffffffffffffffffff16610c379190611e07565b92506101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff16021790555082815f01600e8282829054906101000a90046dffffffffffffffffffffffffffff16610c959190611dc6565b92506101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff160217905550610d88565b83815f01600e8282829054906101000a90046dffffffffffffffffffffffffffff16610cf89190611e07565b92506101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff16021790555082815f015f8282829054906101000a90046dffffffffffffffffffffffffffff16610d559190611dc6565b92506101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff1602179055505b505050505050565b5f8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1610610dca5781610dcc565b825b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1610610e055783610e07565b825b604051602001610e18929190611e8d565b60405160208183030381529060405280519060200120905092915050565b5f5f8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1610610e79578260200151835f0151610e83565b825f015183602001515b816dffffffffffffffffffffffffffff169150806dffffffffffffffffffffffffffff16905091509150935093915050565b610f2f838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610ee8929190611ec7565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506112df565b505050565b5f5f5f886dffffffffffffffffffffffffffff16148015610f6457505f876dffffffffffffffffffffffffffff16145b15610f785785858092508193505050611096565b5f886dffffffffffffffffffffffffffff16886dffffffffffffffffffffffffffff1688610fa691906119cd565b610fb09190611a6e565b905085811161100b5783811015610ffc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ff390611f38565b60405180910390fd5b86818093508194505050611094565b5f886dffffffffffffffffffffffffffff168a6dffffffffffffffffffffffffffff168861103991906119cd565b6110439190611a6e565b905085811015611088576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161107f90611fa0565b60405180910390fd5b80878094508195505050505b505b965096945050505050565b6110ce3330848773ffffffffffffffffffffffffffffffffffffffff1661125d909392919063ffffffff16565b6110fb3330838673ffffffffffffffffffffffffffffffffffffffff1661125d909392919063ffffffff16565b50505050565b5f838561110e9190611a0e565b90508060015f8881526020019081526020015f205f8282546111309190611a0e565b925050819055508060025f8881526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546111929190611a0e565b9250508190555084825f015f8282829054906101000a90046dffffffffffffffffffffffffffff166111c49190611e07565b92506101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff16021790555083825f01600e8282829054906101000a90046dffffffffffffffffffffffffffff166112229190611e07565b92506101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff16021790555095945050505050565b6112d9848573ffffffffffffffffffffffffffffffffffffffff166323b872dd86868660405160240161129293929190611fbe565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506112df565b50505050565b5f5f60205f8451602086015f885af1806112fe576040513d5f823e3d81fd5b3d92505f519150505f8214611317576001811415611332565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561137457836040517f5274afe700000000000000000000000000000000000000000000000000000000815260040161136b9190611ff3565b60405180910390fd5b50505050565b5f5ffd5b5f5ffd5b5f819050919050565b61139481611382565b811461139e575f5ffd5b50565b5f813590506113af8161138b565b92915050565b5f602082840312156113ca576113c961137a565b5b5f6113d7848285016113a1565b91505092915050565b5f6dffffffffffffffffffffffffffff82169050919050565b611402816113e0565b82525050565b5f60408201905061141b5f8301856113f9565b61142860208301846113f9565b9392505050565b5f819050919050565b6114418161142f565b811461144b575f5ffd5b50565b5f8135905061145c81611438565b92915050565b5f5f5f606084860312156114795761147861137a565b5b5f6114868682870161144e565b93505060206114978682870161144e565b92505060406114a88682870161144e565b9150509250925092565b6114bb8161142f565b82525050565b5f6020820190506114d45f8301846114b2565b92915050565b5f5ffd5b5f5ffd5b5f5ffd5b5f5f83601f8401126114fb576114fa6114da565b5b8235905067ffffffffffffffff811115611518576115176114de565b5b602083019150836020820283011115611534576115336114e2565b5b9250929050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6115648261153b565b9050919050565b6115748161155a565b811461157e575f5ffd5b50565b5f8135905061158f8161156b565b92915050565b5f5f5f5f5f5f60a087890312156115af576115ae61137a565b5b5f6115bc89828a0161144e565b96505060206115cd89828a0161144e565b955050604087013567ffffffffffffffff8111156115ee576115ed61137e565b5b6115fa89828a016114e6565b9450945050606061160d89828a01611581565b925050608061161e89828a0161144e565b9150509295509295509295565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b61165d8161142f565b82525050565b5f61166e8383611654565b60208301905092915050565b5f602082019050919050565b5f6116908261162b565b61169a8185611635565b93506116a583611645565b805f5b838110156116d55781516116bc8882611663565b97506116c78361167a565b9250506001810190506116a8565b5085935050505092915050565b5f6020820190508181035f8301526116fa8184611686565b905092915050565b5f5f604083850312156117185761171761137a565b5b5f61172585828601611581565b925050602061173685828601611581565b9150509250929050565b5f5f5f5f5f5f5f60e0888a03121561175b5761175a61137a565b5b5f6117688a828b01611581565b97505060206117798a828b01611581565b965050604061178a8a828b0161144e565b955050606061179b8a828b0161144e565b94505060806117ac8a828b0161144e565b93505060a06117bd8a828b01611581565b92505060c06117ce8a828b0161144e565b91505092959891949750929550565b5f6040820190506117f05f8301856114b2565b6117fd60208301846114b2565b9392505050565b5f5f6040838503121561181a5761181961137a565b5b5f611827858286016113a1565b925050602061183885828601611581565b9150509250929050565b5f5f5f5f5f5f5f5f610100898b03121561185f5761185e61137a565b5b5f61186c8b828c01611581565b985050602061187d8b828c01611581565b975050604061188e8b828c0161144e565b965050606061189f8b828c0161144e565b95505060806118b08b828c0161144e565b94505060a06118c18b828c0161144e565b93505060c06118d28b828c01611581565b92505060e06118e38b828c0161144e565b9150509295985092959890939650565b5f6060820190506119065f8301866114b2565b61191360208301856114b2565b61192060408301846114b2565b949350505050565b5f82825260208201905092915050565b7f496e76616c6964207265736572766573000000000000000000000000000000005f82015250565b5f61196c601083611928565b915061197782611938565b602082019050919050565b5f6020820190508181035f83015261199981611960565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6119d78261142f565b91506119e28361142f565b92508282026119f08161142f565b91508282048414831517611a0757611a066119a0565b5b5092915050565b5f611a188261142f565b9150611a238361142f565b9250828201905080821115611a3b57611a3a6119a0565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611a788261142f565b9150611a838361142f565b925082611a9357611a92611a41565b5b828204905092915050565b7f45787069726564000000000000000000000000000000000000000000000000005f82015250565b5f611ad2600783611928565b9150611add82611a9e565b602082019050919050565b5f6020820190508181035f830152611aff81611ac6565b9050919050565b7f4f6e6c7920322d746f6b656e207061746820737570706f7274656400000000005f82015250565b5f611b3a601b83611928565b9150611b4582611b06565b602082019050919050565b5f6020820190508181035f830152611b6781611b2e565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f60208284031215611bb057611baf61137a565b5b5f611bbd84828501611581565b91505092915050565b7f496e73756666696369656e74206f7574707574000000000000000000000000005f82015250565b5f611bfa601383611928565b9150611c0582611bc6565b602082019050919050565b5f6020820190508181035f830152611c2781611bee565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e6f2072657365727665730000000000000000000000000000000000000000005f82015250565b5f611c8f600b83611928565b9150611c9a82611c5b565b602082019050919050565b5f6020820190508181035f830152611cbc81611c83565b9050919050565b7f4e6f206c697175696469747900000000000000000000000000000000000000005f82015250565b5f611cf7600c83611928565b9150611d0282611cc3565b602082019050919050565b5f6020820190508181035f830152611d2481611ceb565b9050919050565b7f536c6970706167650000000000000000000000000000000000000000000000005f82015250565b5f611d5f600883611928565b9150611d6a82611d2b565b602082019050919050565b5f6020820190508181035f830152611d8c81611d53565b9050919050565b5f611d9d8261142f565b9150611da88361142f565b9250828203905081811115611dc057611dbf6119a0565b5b92915050565b5f611dd0826113e0565b9150611ddb836113e0565b925082820390506dffffffffffffffffffffffffffff811115611e0157611e006119a0565b5b92915050565b5f611e11826113e0565b9150611e1c836113e0565b925082820190506dffffffffffffffffffffffffffff811115611e4257611e416119a0565b5b92915050565b5f8160601b9050919050565b5f611e5e82611e48565b9050919050565b5f611e6f82611e54565b9050919050565b611e87611e828261155a565b611e65565b82525050565b5f611e988285611e76565b601482019150611ea88284611e76565b6014820191508190509392505050565b611ec18161155a565b82525050565b5f604082019050611eda5f830185611eb8565b611ee760208301846114b2565b9392505050565b7f496e73756666696369656e7420420000000000000000000000000000000000005f82015250565b5f611f22600e83611928565b9150611f2d82611eee565b602082019050919050565b5f6020820190508181035f830152611f4f81611f16565b9050919050565b7f496e73756666696369656e7420410000000000000000000000000000000000005f82015250565b5f611f8a600e83611928565b9150611f9582611f56565b602082019050919050565b5f6020820190508181035f830152611fb781611f7e565b9050919050565b5f606082019050611fd15f830186611eb8565b611fde6020830185611eb8565b611feb60408301846114b2565b949350505050565b5f6020820190506120065f830184611eb8565b9291505056fea2646970667358221220d5c5981ff7f4e4a2dff9b06db8dbc35c0ca45848e78e5fc82c8167a720ec43d664736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2042 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x85 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAC41865A GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xAC41865A EQ PUSH2 0x14A JUMPI DUP1 PUSH4 0xBAA2ABDE EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xBB521A30 EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0xE8E33700 EQ PUSH2 0x1DB JUMPI PUSH2 0x85 JUMP JUMPDEST DUP1 PUSH3 0xBBF1E4 EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0x54D50D4 EQ PUSH2 0xBA JUMPI DUP1 PUSH4 0x38ED1739 EQ PUSH2 0xEA JUMPI DUP1 PUSH4 0x54B7A8F7 EQ PUSH2 0x11A JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xA3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9E SWAP2 SWAP1 PUSH2 0x13B5 JUMP JUMPDEST PUSH2 0x20D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB1 SWAP3 SWAP2 SWAP1 PUSH2 0x1408 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCF SWAP2 SWAP1 PUSH2 0x1462 JUMP JUMPDEST PUSH2 0x25E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0x14C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFF SWAP2 SWAP1 PUSH2 0x1595 JUMP JUMPDEST PUSH2 0x30B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0x16E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0x13B5 JUMP JUMPDEST PUSH2 0x4F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0x14C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x164 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15F SWAP2 SWAP1 PUSH2 0x1702 JUMP JUMPDEST PUSH2 0x506 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x171 SWAP2 SWAP1 PUSH2 0x14C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x194 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18F SWAP2 SWAP1 PUSH2 0x1740 JUMP JUMPDEST PUSH2 0x640 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A2 SWAP3 SWAP2 SWAP1 PUSH2 0x17DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C0 SWAP2 SWAP1 PUSH2 0x1804 JUMP JUMPDEST PUSH2 0x97F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D2 SWAP2 SWAP1 PUSH2 0x14C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0x1842 JUMP JUMPDEST PUSH2 0x99F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x204 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x18F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH0 ADD PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 JUMP JUMPDEST PUSH0 PUSH0 DUP5 GT DUP1 ISZERO PUSH2 0x26D JUMPI POP PUSH0 DUP4 GT JUMPDEST DUP1 ISZERO PUSH2 0x278 JUMPI POP PUSH0 DUP3 GT JUMPDEST PUSH2 0x2B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2AE SWAP1 PUSH2 0x1982 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x3E5 DUP6 PUSH2 0x2C6 SWAP2 SWAP1 PUSH2 0x19CD JUMP JUMPDEST SWAP1 POP PUSH0 DUP4 DUP3 PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x19CD JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH2 0x3E8 DUP8 PUSH2 0x2E7 SWAP2 SWAP1 PUSH2 0x19CD JUMP JUMPDEST PUSH2 0x2F1 SWAP2 SWAP1 PUSH2 0x1A0E JUMP JUMPDEST SWAP1 POP DUP1 DUP3 PUSH2 0x2FF SWAP2 SWAP1 PUSH2 0x1A6E JUMP JUMPDEST SWAP4 POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 TIMESTAMP GT ISZERO PUSH2 0x350 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x347 SWAP1 PUSH2 0x1AE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP6 DUP6 SWAP1 POP EQ PUSH2 0x396 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38D SWAP1 PUSH2 0x1B50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP6 DUP6 PUSH0 DUP2 DUP2 LT PUSH2 0x3AA JUMPI PUSH2 0x3A9 PUSH2 0x1B6E JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x3BF SWAP2 SWAP1 PUSH2 0x1B9B JUMP JUMPDEST SWAP1 POP PUSH0 DUP7 DUP7 PUSH1 0x1 DUP2 DUP2 LT PUSH2 0x3D6 JUMPI PUSH2 0x3D5 PUSH2 0x1B6E JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x3EB SWAP2 SWAP1 PUSH2 0x1B9B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x3F9 DUP11 DUP5 DUP5 PUSH2 0xA7F JUMP JUMPDEST SWAP1 POP DUP9 DUP2 LT ISZERO PUSH2 0x43E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x435 SWAP1 PUSH2 0x1C10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x44B DUP4 DUP4 DUP13 DUP5 DUP11 PUSH2 0xB59 JUMP JUMPDEST PUSH2 0x457 DUP4 DUP4 DUP13 DUP5 PUSH2 0xBB8 JUMP JUMPDEST PUSH1 0x2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x472 JUMPI PUSH2 0x471 PUSH2 0x1C2E JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x4A0 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP4 POP DUP10 DUP5 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x4B7 JUMPI PUSH2 0x4B6 PUSH2 0x1B6E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP5 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x4D8 JUMPI PUSH2 0x4D7 PUSH2 0x1B6E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP POP POP POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x512 DUP5 DUP5 PUSH2 0xD90 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH0 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP3 ADD PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP PUSH0 PUSH0 PUSH2 0x5C4 DUP8 DUP8 DUP6 PUSH2 0xE36 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH0 DUP3 GT DUP1 ISZERO PUSH2 0x5D6 JUMPI POP PUSH0 DUP2 GT JUMPDEST PUSH2 0x615 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60C SWAP1 PUSH2 0x1CA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0x62A SWAP2 SWAP1 PUSH2 0x19CD JUMP JUMPDEST PUSH2 0x634 SWAP2 SWAP1 PUSH2 0x1A6E JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 TIMESTAMP GT ISZERO PUSH2 0x685 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67C SWAP1 PUSH2 0x1AE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x690 DUP11 DUP11 PUSH2 0xD90 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH0 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 PUSH1 0x1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0x6FC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F3 SWAP1 PUSH2 0x1D0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP11 DUP4 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x735 SWAP2 SWAP1 PUSH2 0x19CD JUMP JUMPDEST PUSH2 0x73F SWAP2 SWAP1 PUSH2 0x1A6E JUMP JUMPDEST SWAP5 POP DUP1 DUP11 DUP4 PUSH0 ADD PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x77B SWAP2 SWAP1 PUSH2 0x19CD JUMP JUMPDEST PUSH2 0x785 SWAP2 SWAP1 PUSH2 0x1A6E JUMP JUMPDEST SWAP4 POP DUP9 DUP6 LT ISZERO DUP1 ISZERO PUSH2 0x797 JUMPI POP DUP8 DUP5 LT ISZERO JUMPDEST PUSH2 0x7D6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CD SWAP1 PUSH2 0x1D75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP10 PUSH1 0x2 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x831 SWAP2 SWAP1 PUSH2 0x1D93 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP10 PUSH1 0x1 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x858 SWAP2 SWAP1 PUSH2 0x1D93 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP5 DUP3 PUSH0 ADD PUSH0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x88A SWAP2 SWAP1 PUSH2 0x1DC6 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP3 PUSH0 ADD PUSH1 0xE DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8E8 SWAP2 SWAP1 PUSH2 0x1DC6 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x945 DUP8 DUP7 DUP15 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xEB5 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x970 DUP8 DUP6 DUP14 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xEB5 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP SWAP8 POP SWAP8 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 TIMESTAMP GT ISZERO PUSH2 0x9E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9DC SWAP1 PUSH2 0x1AE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x9F0 DUP13 DUP13 PUSH2 0xD90 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH0 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH2 0xA4C DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH0 ADD PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP14 DUP14 DUP14 DUP14 PUSH2 0xF34 JUMP JUMPDEST DUP1 SWAP6 POP DUP2 SWAP7 POP POP POP PUSH2 0xA60 DUP14 DUP14 DUP8 DUP8 PUSH2 0x10A1 JUMP JUMPDEST PUSH2 0xA6D DUP3 DUP7 DUP7 DUP11 DUP6 PUSH2 0x1101 JUMP JUMPDEST SWAP3 POP POP POP SWAP9 POP SWAP9 POP SWAP9 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xA8B DUP5 DUP5 PUSH2 0xD90 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH0 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP3 ADD PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP PUSH0 PUSH0 PUSH2 0xB3D DUP8 DUP8 DUP6 PUSH2 0xE36 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xB4C DUP9 DUP4 DUP4 PUSH2 0x25E JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xB86 CALLER ADDRESS DUP6 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x125D SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xBB1 DUP2 DUP4 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xEB5 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xBC3 DUP6 DUP6 PUSH2 0xD90 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH0 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0xCCC JUMPI DUP4 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC37 SWAP2 SWAP1 PUSH2 0x1E07 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 DUP2 PUSH0 ADD PUSH1 0xE DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC95 SWAP2 SWAP1 PUSH2 0x1DC6 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0xD88 JUMP JUMPDEST DUP4 DUP2 PUSH0 ADD PUSH1 0xE DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCF8 SWAP2 SWAP1 PUSH2 0x1E07 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD55 SWAP2 SWAP1 PUSH2 0x1DC6 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT PUSH2 0xDCA JUMPI DUP2 PUSH2 0xDCC JUMP JUMPDEST DUP3 JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT PUSH2 0xE05 JUMPI DUP4 PUSH2 0xE07 JUMP JUMPDEST DUP3 JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xE18 SWAP3 SWAP2 SWAP1 PUSH2 0x1E8D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT PUSH2 0xE79 JUMPI DUP3 PUSH1 0x20 ADD MLOAD DUP4 PUSH0 ADD MLOAD PUSH2 0xE83 JUMP JUMPDEST DUP3 PUSH0 ADD MLOAD DUP4 PUSH1 0x20 ADD MLOAD JUMPDEST DUP2 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP DUP1 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 POP SWAP2 POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF2F DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xEE8 SWAP3 SWAP2 SWAP1 PUSH2 0x1EC7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x12DF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP9 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xF64 JUMPI POP PUSH0 DUP8 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0xF78 JUMPI DUP6 DUP6 DUP1 SWAP3 POP DUP2 SWAP4 POP POP POP PUSH2 0x1096 JUMP JUMPDEST PUSH0 DUP9 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH2 0xFA6 SWAP2 SWAP1 PUSH2 0x19CD JUMP JUMPDEST PUSH2 0xFB0 SWAP2 SWAP1 PUSH2 0x1A6E JUMP JUMPDEST SWAP1 POP DUP6 DUP2 GT PUSH2 0x100B JUMPI DUP4 DUP2 LT ISZERO PUSH2 0xFFC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFF3 SWAP1 PUSH2 0x1F38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 DUP2 DUP1 SWAP4 POP DUP2 SWAP5 POP POP POP PUSH2 0x1094 JUMP JUMPDEST PUSH0 DUP9 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP11 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH2 0x1039 SWAP2 SWAP1 PUSH2 0x19CD JUMP JUMPDEST PUSH2 0x1043 SWAP2 SWAP1 PUSH2 0x1A6E JUMP JUMPDEST SWAP1 POP DUP6 DUP2 LT ISZERO PUSH2 0x1088 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x107F SWAP1 PUSH2 0x1FA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP8 DUP1 SWAP5 POP DUP2 SWAP6 POP POP POP POP JUMPDEST POP JUMPDEST SWAP7 POP SWAP7 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x10CE CALLER ADDRESS DUP5 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x125D SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x10FB CALLER ADDRESS DUP4 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x125D SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP4 DUP6 PUSH2 0x110E SWAP2 SWAP1 PUSH2 0x1A0E JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1130 SWAP2 SWAP1 PUSH2 0x1A0E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1192 SWAP2 SWAP1 PUSH2 0x1A0E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP5 DUP3 PUSH0 ADD PUSH0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11C4 SWAP2 SWAP1 PUSH2 0x1E07 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP3 PUSH0 ADD PUSH1 0xE DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1222 SWAP2 SWAP1 PUSH2 0x1E07 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x12D9 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1292 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1FBE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x12DF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x12FE JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x1317 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x1332 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1374 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x136B SWAP2 SWAP1 PUSH2 0x1FF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1394 DUP2 PUSH2 0x1382 JUMP JUMPDEST DUP2 EQ PUSH2 0x139E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13AF DUP2 PUSH2 0x138B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13CA JUMPI PUSH2 0x13C9 PUSH2 0x137A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13D7 DUP5 DUP3 DUP6 ADD PUSH2 0x13A1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1402 DUP2 PUSH2 0x13E0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x141B PUSH0 DUP4 ADD DUP6 PUSH2 0x13F9 JUMP JUMPDEST PUSH2 0x1428 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x13F9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1441 DUP2 PUSH2 0x142F JUMP JUMPDEST DUP2 EQ PUSH2 0x144B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x145C DUP2 PUSH2 0x1438 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1479 JUMPI PUSH2 0x1478 PUSH2 0x137A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1486 DUP7 DUP3 DUP8 ADD PUSH2 0x144E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1497 DUP7 DUP3 DUP8 ADD PUSH2 0x144E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x14A8 DUP7 DUP3 DUP8 ADD PUSH2 0x144E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x14BB DUP2 PUSH2 0x142F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14D4 PUSH0 DUP4 ADD DUP5 PUSH2 0x14B2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x14FB JUMPI PUSH2 0x14FA PUSH2 0x14DA JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1518 JUMPI PUSH2 0x1517 PUSH2 0x14DE JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1534 JUMPI PUSH2 0x1533 PUSH2 0x14E2 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1564 DUP3 PUSH2 0x153B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1574 DUP2 PUSH2 0x155A JUMP JUMPDEST DUP2 EQ PUSH2 0x157E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x158F DUP2 PUSH2 0x156B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x15AF JUMPI PUSH2 0x15AE PUSH2 0x137A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15BC DUP10 DUP3 DUP11 ADD PUSH2 0x144E JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x15CD DUP10 DUP3 DUP11 ADD PUSH2 0x144E JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15EE JUMPI PUSH2 0x15ED PUSH2 0x137E JUMP JUMPDEST JUMPDEST PUSH2 0x15FA DUP10 DUP3 DUP11 ADD PUSH2 0x14E6 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x60 PUSH2 0x160D DUP10 DUP3 DUP11 ADD PUSH2 0x1581 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x161E DUP10 DUP3 DUP11 ADD PUSH2 0x144E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x165D DUP2 PUSH2 0x142F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x166E DUP4 DUP4 PUSH2 0x1654 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1690 DUP3 PUSH2 0x162B JUMP JUMPDEST PUSH2 0x169A DUP2 DUP6 PUSH2 0x1635 JUMP JUMPDEST SWAP4 POP PUSH2 0x16A5 DUP4 PUSH2 0x1645 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16D5 JUMPI DUP2 MLOAD PUSH2 0x16BC DUP9 DUP3 PUSH2 0x1663 JUMP JUMPDEST SWAP8 POP PUSH2 0x16C7 DUP4 PUSH2 0x167A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x16A8 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x16FA DUP2 DUP5 PUSH2 0x1686 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1718 JUMPI PUSH2 0x1717 PUSH2 0x137A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1725 DUP6 DUP3 DUP7 ADD PUSH2 0x1581 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1736 DUP6 DUP3 DUP7 ADD PUSH2 0x1581 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x175B JUMPI PUSH2 0x175A PUSH2 0x137A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1768 DUP11 DUP3 DUP12 ADD PUSH2 0x1581 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x1779 DUP11 DUP3 DUP12 ADD PUSH2 0x1581 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x178A DUP11 DUP3 DUP12 ADD PUSH2 0x144E JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x179B DUP11 DUP3 DUP12 ADD PUSH2 0x144E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x17AC DUP11 DUP3 DUP12 ADD PUSH2 0x144E JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x17BD DUP11 DUP3 DUP12 ADD PUSH2 0x1581 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x17CE DUP11 DUP3 DUP12 ADD PUSH2 0x144E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x17F0 PUSH0 DUP4 ADD DUP6 PUSH2 0x14B2 JUMP JUMPDEST PUSH2 0x17FD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x14B2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x181A JUMPI PUSH2 0x1819 PUSH2 0x137A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1827 DUP6 DUP3 DUP7 ADD PUSH2 0x13A1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1838 DUP6 DUP3 DUP7 ADD PUSH2 0x1581 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x185F JUMPI PUSH2 0x185E PUSH2 0x137A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x186C DUP12 DUP3 DUP13 ADD PUSH2 0x1581 JUMP JUMPDEST SWAP9 POP POP PUSH1 0x20 PUSH2 0x187D DUP12 DUP3 DUP13 ADD PUSH2 0x1581 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x40 PUSH2 0x188E DUP12 DUP3 DUP13 ADD PUSH2 0x144E JUMP JUMPDEST SWAP7 POP POP PUSH1 0x60 PUSH2 0x189F DUP12 DUP3 DUP13 ADD PUSH2 0x144E JUMP JUMPDEST SWAP6 POP POP PUSH1 0x80 PUSH2 0x18B0 DUP12 DUP3 DUP13 ADD PUSH2 0x144E JUMP JUMPDEST SWAP5 POP POP PUSH1 0xA0 PUSH2 0x18C1 DUP12 DUP3 DUP13 ADD PUSH2 0x144E JUMP JUMPDEST SWAP4 POP POP PUSH1 0xC0 PUSH2 0x18D2 DUP12 DUP3 DUP13 ADD PUSH2 0x1581 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xE0 PUSH2 0x18E3 DUP12 DUP3 DUP13 ADD PUSH2 0x144E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1906 PUSH0 DUP4 ADD DUP7 PUSH2 0x14B2 JUMP JUMPDEST PUSH2 0x1913 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x14B2 JUMP JUMPDEST PUSH2 0x1920 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x14B2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420726573657276657300000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x196C PUSH1 0x10 DUP4 PUSH2 0x1928 JUMP JUMPDEST SWAP2 POP PUSH2 0x1977 DUP3 PUSH2 0x1938 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1999 DUP2 PUSH2 0x1960 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x19D7 DUP3 PUSH2 0x142F JUMP JUMPDEST SWAP2 POP PUSH2 0x19E2 DUP4 PUSH2 0x142F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x19F0 DUP2 PUSH2 0x142F JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1A07 JUMPI PUSH2 0x1A06 PUSH2 0x19A0 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A18 DUP3 PUSH2 0x142F JUMP JUMPDEST SWAP2 POP PUSH2 0x1A23 DUP4 PUSH2 0x142F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1A3B JUMPI PUSH2 0x1A3A PUSH2 0x19A0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1A78 DUP3 PUSH2 0x142F JUMP JUMPDEST SWAP2 POP PUSH2 0x1A83 DUP4 PUSH2 0x142F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1A93 JUMPI PUSH2 0x1A92 PUSH2 0x1A41 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4578706972656400000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1AD2 PUSH1 0x7 DUP4 PUSH2 0x1928 JUMP JUMPDEST SWAP2 POP PUSH2 0x1ADD DUP3 PUSH2 0x1A9E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AFF DUP2 PUSH2 0x1AC6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C7920322D746F6B656E207061746820737570706F727465640000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B3A PUSH1 0x1B DUP4 PUSH2 0x1928 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B45 DUP3 PUSH2 0x1B06 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B67 DUP2 PUSH2 0x1B2E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BB0 JUMPI PUSH2 0x1BAF PUSH2 0x137A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BBD DUP5 DUP3 DUP6 ADD PUSH2 0x1581 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74206F757470757400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1BFA PUSH1 0x13 DUP4 PUSH2 0x1928 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C05 DUP3 PUSH2 0x1BC6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C27 DUP2 PUSH2 0x1BEE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E6F207265736572766573000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C8F PUSH1 0xB DUP4 PUSH2 0x1928 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C9A DUP3 PUSH2 0x1C5B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CBC DUP2 PUSH2 0x1C83 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F206C69717569646974790000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1CF7 PUSH1 0xC DUP4 PUSH2 0x1928 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D02 DUP3 PUSH2 0x1CC3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D24 DUP2 PUSH2 0x1CEB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x536C697070616765000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D5F PUSH1 0x8 DUP4 PUSH2 0x1928 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D6A DUP3 PUSH2 0x1D2B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D8C DUP2 PUSH2 0x1D53 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D9D DUP3 PUSH2 0x142F JUMP JUMPDEST SWAP2 POP PUSH2 0x1DA8 DUP4 PUSH2 0x142F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1DC0 JUMPI PUSH2 0x1DBF PUSH2 0x19A0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1DD0 DUP3 PUSH2 0x13E0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DDB DUP4 PUSH2 0x13E0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E01 JUMPI PUSH2 0x1E00 PUSH2 0x19A0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E11 DUP3 PUSH2 0x13E0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E1C DUP4 PUSH2 0x13E0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E42 JUMPI PUSH2 0x1E41 PUSH2 0x19A0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E5E DUP3 PUSH2 0x1E48 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E6F DUP3 PUSH2 0x1E54 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E87 PUSH2 0x1E82 DUP3 PUSH2 0x155A JUMP JUMPDEST PUSH2 0x1E65 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E98 DUP3 DUP6 PUSH2 0x1E76 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x1EA8 DUP3 DUP5 PUSH2 0x1E76 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1EC1 DUP2 PUSH2 0x155A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1EDA PUSH0 DUP4 ADD DUP6 PUSH2 0x1EB8 JUMP JUMPDEST PUSH2 0x1EE7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x14B2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742042000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F22 PUSH1 0xE DUP4 PUSH2 0x1928 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F2D DUP3 PUSH2 0x1EEE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F4F DUP2 PUSH2 0x1F16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742041000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F8A PUSH1 0xE DUP4 PUSH2 0x1928 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F95 DUP3 PUSH2 0x1F56 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1FB7 DUP2 PUSH2 0x1F7E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1FD1 PUSH0 DUP4 ADD DUP7 PUSH2 0x1EB8 JUMP JUMPDEST PUSH2 0x1FDE PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1EB8 JUMP JUMPDEST PUSH2 0x1FEB PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x14B2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2006 PUSH0 DUP4 ADD DUP5 PUSH2 0x1EB8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD5 0xC5 SWAP9 0x1F 0xF7 DELEGATECALL RETF LOG2 0xDF EXTDELEGATECALL 0xB0 PUSH14 0xB8DBC35C0CA45848E78E5FC82C81 PUSH8 0xA720EC43D664736F PUSH13 0x634300081E0033000000000000 ",
							"sourceMap": "544:10925:6:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_calculateLiquidityAmounts_1190": {
									"entryPoint": 3892,
									"id": 1190,
									"parameterSlots": 6,
									"returnSlots": 2
								},
								"@_calculateSwapOutput_1328": {
									"entryPoint": 2687,
									"id": 1328,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_callOptionalReturn_589": {
									"entryPoint": 4831,
									"id": 589,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_getPairHash_1462": {
									"entryPoint": 3472,
									"id": 1462,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_getSortedReserves_1493": {
									"entryPoint": 3638,
									"id": 1493,
									"parameterSlots": 3,
									"returnSlots": 2
								},
								"@_mintLiquidityAndUpdateReserves_1285": {
									"entryPoint": 4353,
									"id": 1285,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@_performAddLiquidityTransfers_1229": {
									"entryPoint": 4257,
									"id": 1229,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_performSwapTransfers_1364": {
									"entryPoint": 2905,
									"id": 1364,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_updateReservesAfterSwap_1433": {
									"entryPoint": 3000,
									"id": 1433,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@addLiquidity_757": {
									"entryPoint": 2463,
									"id": 757,
									"parameterSlots": 8,
									"returnSlots": 3
								},
								"@getAmountOut_1099": {
									"entryPoint": 606,
									"id": 1099,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getPrice_1045": {
									"entryPoint": 1286,
									"id": 1045,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@liquidityBalance_676": {
									"entryPoint": 2431,
									"id": 676,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@removeLiquidity_893": {
									"entryPoint": 1600,
									"id": 893,
									"parameterSlots": 7,
									"returnSlots": 2
								},
								"@reserves_664": {
									"entryPoint": 525,
									"id": 664,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_239": {
									"entryPoint": 4701,
									"id": 239,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_212": {
									"entryPoint": 3765,
									"id": 212,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@swapExactTokensForTokens_990": {
									"entryPoint": 779,
									"id": 990,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"@totalLiquidity_669": {
									"entryPoint": 1265,
									"id": 669,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 5505,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_calldata_ptr": {
									"entryPoint": 5350,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 5025,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5198,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7067,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5890,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_addresst_uint256": {
									"entryPoint": 5952,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 7
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_uint256t_addresst_uint256": {
									"entryPoint": 6210,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 8
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 5045,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 6148,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256t_array$_t_address_$dyn_calldata_ptrt_addresst_uint256": {
									"entryPoint": 5525,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256": {
									"entryPoint": 5218,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 5731,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7864,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack": {
									"entryPoint": 7798,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 5766,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_00c0664002c3a7ab9481655483f753aa6ee21854999370a38d90a0549f0cf8f4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8062,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_185a9d5da6de3eebfb2e4ad4adad189f402b098c61f6e8e0c8d2b4a20a1faa2a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6496,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1999f60f5526a13cb17eac3c04d030e47d1c41d4e55af8ccb43358373aec7eb8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6958,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_28ee48a047f51c165a70ae36f179330afc265bf4c05f56e1a1f02c2668dcead2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7958,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_379a432f00aa43993bfbf4e01492a8eab5138dcd2e395864ede728644390fc31_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7403,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f183c8b0f89612f6f096bf1f0017061404d2019bd0580f7b18bddb8dcc0d7a13_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6854,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f8d6698763d2d0ff1e31fa7f43b504a63f09c2932b87b9842c093ff74de4d766_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7299,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fb87c09e63b5ee5d76fa5ada5f7c2fd9de8980c2964f73a791eaef9c4602f114_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7507,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ffebb6789a62ed60836fc38e566e8cbcff27ebb3acadee53ee5da9825f1b14e1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7150,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint112_to_t_uint112_fromStack": {
									"entryPoint": 5113,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 5716,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5298,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7821,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 8179,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8126,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7879,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 5858,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_00c0664002c3a7ab9481655483f753aa6ee21854999370a38d90a0549f0cf8f4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8096,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_185a9d5da6de3eebfb2e4ad4adad189f402b098c61f6e8e0c8d2b4a20a1faa2a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6530,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1999f60f5526a13cb17eac3c04d030e47d1c41d4e55af8ccb43358373aec7eb8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6992,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_28ee48a047f51c165a70ae36f179330afc265bf4c05f56e1a1f02c2668dcead2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7992,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_379a432f00aa43993bfbf4e01492a8eab5138dcd2e395864ede728644390fc31__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7437,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f183c8b0f89612f6f096bf1f0017061404d2019bd0580f7b18bddb8dcc0d7a13__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6888,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8d6698763d2d0ff1e31fa7f43b504a63f09c2932b87b9842c093ff74de4d766__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7333,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fb87c09e63b5ee5d76fa5ada5f7c2fd9de8980c2964f73a791eaef9c4602f114__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7541,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ffebb6789a62ed60836fc38e566e8cbcff27ebb3acadee53ee5da9825f1b14e1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7184,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint112_t_uint112__to_t_uint112_t_uint112__fromStack_reversed": {
									"entryPoint": 5128,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5313,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6109,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6387,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5701,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5675,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5754,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 5685,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6440,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint112": {
									"entryPoint": 7687,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6670,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 6766,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6605,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint112": {
									"entryPoint": 7622,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7571,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5466,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 4994,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint112": {
									"entryPoint": 5088,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5435,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5167,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_address": {
									"entryPoint": 7781,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_uint160": {
									"entryPoint": 7764,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6560,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 6721,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 7022,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 7214,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 5342,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 5338,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 5346,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 4990,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4986,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_96": {
									"entryPoint": 7752,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_00c0664002c3a7ab9481655483f753aa6ee21854999370a38d90a0549f0cf8f4": {
									"entryPoint": 8022,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_185a9d5da6de3eebfb2e4ad4adad189f402b098c61f6e8e0c8d2b4a20a1faa2a": {
									"entryPoint": 6456,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1999f60f5526a13cb17eac3c04d030e47d1c41d4e55af8ccb43358373aec7eb8": {
									"entryPoint": 6918,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_28ee48a047f51c165a70ae36f179330afc265bf4c05f56e1a1f02c2668dcead2": {
									"entryPoint": 7918,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_379a432f00aa43993bfbf4e01492a8eab5138dcd2e395864ede728644390fc31": {
									"entryPoint": 7363,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f183c8b0f89612f6f096bf1f0017061404d2019bd0580f7b18bddb8dcc0d7a13": {
									"entryPoint": 6814,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f8d6698763d2d0ff1e31fa7f43b504a63f09c2932b87b9842c093ff74de4d766": {
									"entryPoint": 7259,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fb87c09e63b5ee5d76fa5ada5f7c2fd9de8980c2964f73a791eaef9c4602f114": {
									"entryPoint": 7467,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ffebb6789a62ed60836fc38e566e8cbcff27ebb3acadee53ee5da9825f1b14e1": {
									"entryPoint": 7110,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5483,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 5003,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5176,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:25300:7",
										"nodeType": "YulBlock",
										"src": "0:25300:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:7",
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nativeSrc": "57:19:7",
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:7",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nativeSrc": "67:9:7",
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:7",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nativeSrc": "177:28:7",
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:7",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:7",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nativeSrc": "187:12:7",
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nativeSrc": "187:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nativeSrc": "300:28:7",
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:7",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nativeSrc": "310:12:7",
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nativeSrc": "310:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nativeSrc": "379:32:7",
													"nodeType": "YulBlock",
													"src": "379:32:7",
													"statements": [
														{
															"nativeSrc": "389:16:7",
															"nodeType": "YulAssignment",
															"src": "389:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:7",
																"nodeType": "YulIdentifier",
																"src": "400:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "334:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:7",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:7",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:77:7"
											},
											{
												"body": {
													"nativeSrc": "460:79:7",
													"nodeType": "YulBlock",
													"src": "460:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:7",
																"nodeType": "YulBlock",
																"src": "517:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:7",
																					"nodeType": "YulLiteral",
																					"src": "526:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:7",
																					"nodeType": "YulLiteral",
																					"src": "529:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:7"
																			},
																			"nativeSrc": "519:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:7"
																		},
																		"nativeSrc": "519:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "490:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:7"
																				},
																				"nativeSrc": "490:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:7"
																		},
																		"nativeSrc": "480:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:7"
																},
																"nativeSrc": "473:43:7",
																"nodeType": "YulFunctionCall",
																"src": "473:43:7"
															},
															"nativeSrc": "470:63:7",
															"nodeType": "YulIf",
															"src": "470:63:7"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "417:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:7",
														"nodeType": "YulTypedName",
														"src": "453:5:7",
														"type": ""
													}
												],
												"src": "417:122:7"
											},
											{
												"body": {
													"nativeSrc": "597:87:7",
													"nodeType": "YulBlock",
													"src": "597:87:7",
													"statements": [
														{
															"nativeSrc": "607:29:7",
															"nodeType": "YulAssignment",
															"src": "607:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:7"
																},
																"nativeSrc": "616:20:7",
																"nodeType": "YulFunctionCall",
																"src": "616:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "645:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:7"
																},
																"nativeSrc": "645:33:7",
																"nodeType": "YulFunctionCall",
																"src": "645:33:7"
															},
															"nativeSrc": "645:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:7"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "545:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:7",
														"nodeType": "YulTypedName",
														"src": "575:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:7",
														"nodeType": "YulTypedName",
														"src": "583:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:7",
														"nodeType": "YulTypedName",
														"src": "591:5:7",
														"type": ""
													}
												],
												"src": "545:139:7"
											},
											{
												"body": {
													"nativeSrc": "756:263:7",
													"nodeType": "YulBlock",
													"src": "756:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "802:83:7",
																"nodeType": "YulBlock",
																"src": "802:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "804:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:7"
																			},
																			"nativeSrc": "804:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:7"
																		},
																		"nativeSrc": "804:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "777:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "786:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "773:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:7"
																		},
																		"nativeSrc": "773:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "798:2:7",
																		"nodeType": "YulLiteral",
																		"src": "798:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "769:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:7"
																},
																"nativeSrc": "769:32:7",
																"nodeType": "YulFunctionCall",
																"src": "769:32:7"
															},
															"nativeSrc": "766:119:7",
															"nodeType": "YulIf",
															"src": "766:119:7"
														},
														{
															"nativeSrc": "895:117:7",
															"nodeType": "YulBlock",
															"src": "895:117:7",
															"statements": [
																{
																	"nativeSrc": "910:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "924:1:7",
																		"nodeType": "YulLiteral",
																		"src": "924:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "914:6:7",
																			"nodeType": "YulTypedName",
																			"src": "914:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "939:63:7",
																	"nodeType": "YulAssignment",
																	"src": "939:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "974:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "985:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "970:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:7"
																				},
																				"nativeSrc": "970:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "994:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "949:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:7"
																		},
																		"nativeSrc": "949:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "939:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "690:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "726:9:7",
														"nodeType": "YulTypedName",
														"src": "726:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "737:7:7",
														"nodeType": "YulTypedName",
														"src": "737:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "749:6:7",
														"nodeType": "YulTypedName",
														"src": "749:6:7",
														"type": ""
													}
												],
												"src": "690:329:7"
											},
											{
												"body": {
													"nativeSrc": "1070:69:7",
													"nodeType": "YulBlock",
													"src": "1070:69:7",
													"statements": [
														{
															"nativeSrc": "1080:53:7",
															"nodeType": "YulAssignment",
															"src": "1080:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1095:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1095:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1102:30:7",
																		"nodeType": "YulLiteral",
																		"src": "1102:30:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1091:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1091:3:7"
																},
																"nativeSrc": "1091:42:7",
																"nodeType": "YulFunctionCall",
																"src": "1091:42:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1080:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1080:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint112",
												"nativeSrc": "1025:114:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1052:5:7",
														"nodeType": "YulTypedName",
														"src": "1052:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1062:7:7",
														"nodeType": "YulTypedName",
														"src": "1062:7:7",
														"type": ""
													}
												],
												"src": "1025:114:7"
											},
											{
												"body": {
													"nativeSrc": "1210:53:7",
													"nodeType": "YulBlock",
													"src": "1210:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1227:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1227:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1250:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1250:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint112",
																			"nativeSrc": "1232:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "1232:17:7"
																		},
																		"nativeSrc": "1232:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1232:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1220:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1220:6:7"
																},
																"nativeSrc": "1220:37:7",
																"nodeType": "YulFunctionCall",
																"src": "1220:37:7"
															},
															"nativeSrc": "1220:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "1220:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint112_to_t_uint112_fromStack",
												"nativeSrc": "1145:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1198:5:7",
														"nodeType": "YulTypedName",
														"src": "1198:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1205:3:7",
														"nodeType": "YulTypedName",
														"src": "1205:3:7",
														"type": ""
													}
												],
												"src": "1145:118:7"
											},
											{
												"body": {
													"nativeSrc": "1395:206:7",
													"nodeType": "YulBlock",
													"src": "1395:206:7",
													"statements": [
														{
															"nativeSrc": "1405:26:7",
															"nodeType": "YulAssignment",
															"src": "1405:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1417:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1417:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1428:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1428:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1413:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1413:3:7"
																},
																"nativeSrc": "1413:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1413:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1405:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1405:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1485:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1485:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1498:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1498:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1509:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1509:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1494:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1494:3:7"
																		},
																		"nativeSrc": "1494:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1494:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint112_to_t_uint112_fromStack",
																	"nativeSrc": "1441:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "1441:43:7"
																},
																"nativeSrc": "1441:71:7",
																"nodeType": "YulFunctionCall",
																"src": "1441:71:7"
															},
															"nativeSrc": "1441:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "1441:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "1566:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1566:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1579:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1579:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1590:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1590:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1575:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1575:3:7"
																		},
																		"nativeSrc": "1575:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1575:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint112_to_t_uint112_fromStack",
																	"nativeSrc": "1522:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "1522:43:7"
																},
																"nativeSrc": "1522:72:7",
																"nodeType": "YulFunctionCall",
																"src": "1522:72:7"
															},
															"nativeSrc": "1522:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "1522:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint112_t_uint112__to_t_uint112_t_uint112__fromStack_reversed",
												"nativeSrc": "1269:332:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1359:9:7",
														"nodeType": "YulTypedName",
														"src": "1359:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1371:6:7",
														"nodeType": "YulTypedName",
														"src": "1371:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1379:6:7",
														"nodeType": "YulTypedName",
														"src": "1379:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1390:4:7",
														"nodeType": "YulTypedName",
														"src": "1390:4:7",
														"type": ""
													}
												],
												"src": "1269:332:7"
											},
											{
												"body": {
													"nativeSrc": "1652:32:7",
													"nodeType": "YulBlock",
													"src": "1652:32:7",
													"statements": [
														{
															"nativeSrc": "1662:16:7",
															"nodeType": "YulAssignment",
															"src": "1662:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "1673:5:7",
																"nodeType": "YulIdentifier",
																"src": "1673:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1662:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1662:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1607:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1634:5:7",
														"nodeType": "YulTypedName",
														"src": "1634:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1644:7:7",
														"nodeType": "YulTypedName",
														"src": "1644:7:7",
														"type": ""
													}
												],
												"src": "1607:77:7"
											},
											{
												"body": {
													"nativeSrc": "1733:79:7",
													"nodeType": "YulBlock",
													"src": "1733:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1790:16:7",
																"nodeType": "YulBlock",
																"src": "1790:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1799:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1799:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1802:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1802:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1792:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1792:6:7"
																			},
																			"nativeSrc": "1792:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1792:12:7"
																		},
																		"nativeSrc": "1792:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1792:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1756:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1756:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1781:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1781:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1763:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "1763:17:7"
																				},
																				"nativeSrc": "1763:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1763:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1753:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1753:2:7"
																		},
																		"nativeSrc": "1753:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1753:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1746:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1746:6:7"
																},
																"nativeSrc": "1746:43:7",
																"nodeType": "YulFunctionCall",
																"src": "1746:43:7"
															},
															"nativeSrc": "1743:63:7",
															"nodeType": "YulIf",
															"src": "1743:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1690:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1726:5:7",
														"nodeType": "YulTypedName",
														"src": "1726:5:7",
														"type": ""
													}
												],
												"src": "1690:122:7"
											},
											{
												"body": {
													"nativeSrc": "1870:87:7",
													"nodeType": "YulBlock",
													"src": "1870:87:7",
													"statements": [
														{
															"nativeSrc": "1880:29:7",
															"nodeType": "YulAssignment",
															"src": "1880:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1902:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1902:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1889:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "1889:12:7"
																},
																"nativeSrc": "1889:20:7",
																"nodeType": "YulFunctionCall",
																"src": "1889:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1880:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1880:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1945:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1945:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1918:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "1918:26:7"
																},
																"nativeSrc": "1918:33:7",
																"nodeType": "YulFunctionCall",
																"src": "1918:33:7"
															},
															"nativeSrc": "1918:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "1918:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1818:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1848:6:7",
														"nodeType": "YulTypedName",
														"src": "1848:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1856:3:7",
														"nodeType": "YulTypedName",
														"src": "1856:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1864:5:7",
														"nodeType": "YulTypedName",
														"src": "1864:5:7",
														"type": ""
													}
												],
												"src": "1818:139:7"
											},
											{
												"body": {
													"nativeSrc": "2063:519:7",
													"nodeType": "YulBlock",
													"src": "2063:519:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2109:83:7",
																"nodeType": "YulBlock",
																"src": "2109:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2111:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2111:77:7"
																			},
																			"nativeSrc": "2111:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2111:79:7"
																		},
																		"nativeSrc": "2111:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2111:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2084:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2084:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2093:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2093:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2080:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2080:3:7"
																		},
																		"nativeSrc": "2080:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2080:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2105:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2105:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2076:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2076:3:7"
																},
																"nativeSrc": "2076:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2076:32:7"
															},
															"nativeSrc": "2073:119:7",
															"nodeType": "YulIf",
															"src": "2073:119:7"
														},
														{
															"nativeSrc": "2202:117:7",
															"nodeType": "YulBlock",
															"src": "2202:117:7",
															"statements": [
																{
																	"nativeSrc": "2217:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2217:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2231:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2231:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2221:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2221:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2246:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2246:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2281:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2281:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2292:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2292:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2277:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2277:3:7"
																				},
																				"nativeSrc": "2277:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2277:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2301:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2301:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2256:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2256:20:7"
																		},
																		"nativeSrc": "2256:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2256:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2246:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2246:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2329:118:7",
															"nodeType": "YulBlock",
															"src": "2329:118:7",
															"statements": [
																{
																	"nativeSrc": "2344:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2344:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2358:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2358:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2348:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2348:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2374:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2374:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2409:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2409:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2420:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2420:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2405:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2405:3:7"
																				},
																				"nativeSrc": "2405:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2405:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2429:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2429:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2384:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2384:20:7"
																		},
																		"nativeSrc": "2384:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2384:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2374:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2374:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2457:118:7",
															"nodeType": "YulBlock",
															"src": "2457:118:7",
															"statements": [
																{
																	"nativeSrc": "2472:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2472:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2486:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2486:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2476:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2476:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2502:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2502:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2537:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2537:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2548:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2548:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2533:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2533:3:7"
																				},
																				"nativeSrc": "2533:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2533:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2557:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2557:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2512:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2512:20:7"
																		},
																		"nativeSrc": "2512:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2512:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "2502:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2502:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256",
												"nativeSrc": "1963:619:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2017:9:7",
														"nodeType": "YulTypedName",
														"src": "2017:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2028:7:7",
														"nodeType": "YulTypedName",
														"src": "2028:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2040:6:7",
														"nodeType": "YulTypedName",
														"src": "2040:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2048:6:7",
														"nodeType": "YulTypedName",
														"src": "2048:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2056:6:7",
														"nodeType": "YulTypedName",
														"src": "2056:6:7",
														"type": ""
													}
												],
												"src": "1963:619:7"
											},
											{
												"body": {
													"nativeSrc": "2653:53:7",
													"nodeType": "YulBlock",
													"src": "2653:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2670:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2670:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2693:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2693:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2675:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "2675:17:7"
																		},
																		"nativeSrc": "2675:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2675:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2663:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2663:6:7"
																},
																"nativeSrc": "2663:37:7",
																"nodeType": "YulFunctionCall",
																"src": "2663:37:7"
															},
															"nativeSrc": "2663:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "2663:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "2588:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2641:5:7",
														"nodeType": "YulTypedName",
														"src": "2641:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2648:3:7",
														"nodeType": "YulTypedName",
														"src": "2648:3:7",
														"type": ""
													}
												],
												"src": "2588:118:7"
											},
											{
												"body": {
													"nativeSrc": "2810:124:7",
													"nodeType": "YulBlock",
													"src": "2810:124:7",
													"statements": [
														{
															"nativeSrc": "2820:26:7",
															"nodeType": "YulAssignment",
															"src": "2820:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2832:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2832:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2843:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2843:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2828:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2828:3:7"
																},
																"nativeSrc": "2828:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2828:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2820:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2820:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2900:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2900:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2913:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2913:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2924:1:7",
																				"nodeType": "YulLiteral",
																				"src": "2924:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2909:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2909:3:7"
																		},
																		"nativeSrc": "2909:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2909:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2856:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "2856:43:7"
																},
																"nativeSrc": "2856:71:7",
																"nodeType": "YulFunctionCall",
																"src": "2856:71:7"
															},
															"nativeSrc": "2856:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "2856:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2712:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2782:9:7",
														"nodeType": "YulTypedName",
														"src": "2782:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2794:6:7",
														"nodeType": "YulTypedName",
														"src": "2794:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2805:4:7",
														"nodeType": "YulTypedName",
														"src": "2805:4:7",
														"type": ""
													}
												],
												"src": "2712:222:7"
											},
											{
												"body": {
													"nativeSrc": "3029:28:7",
													"nodeType": "YulBlock",
													"src": "3029:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3046:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3046:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3049:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3049:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3039:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3039:6:7"
																},
																"nativeSrc": "3039:12:7",
																"nodeType": "YulFunctionCall",
																"src": "3039:12:7"
															},
															"nativeSrc": "3039:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "3039:12:7"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "2940:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "2940:117:7"
											},
											{
												"body": {
													"nativeSrc": "3152:28:7",
													"nodeType": "YulBlock",
													"src": "3152:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3169:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3169:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3172:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3172:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3162:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3162:6:7"
																},
																"nativeSrc": "3162:12:7",
																"nodeType": "YulFunctionCall",
																"src": "3162:12:7"
															},
															"nativeSrc": "3162:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "3162:12:7"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nativeSrc": "3063:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "3063:117:7"
											},
											{
												"body": {
													"nativeSrc": "3275:28:7",
													"nodeType": "YulBlock",
													"src": "3275:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3292:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3292:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3295:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3295:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3285:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3285:6:7"
																},
																"nativeSrc": "3285:12:7",
																"nodeType": "YulFunctionCall",
																"src": "3285:12:7"
															},
															"nativeSrc": "3285:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "3285:12:7"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "3186:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "3186:117:7"
											},
											{
												"body": {
													"nativeSrc": "3416:478:7",
													"nodeType": "YulBlock",
													"src": "3416:478:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3465:83:7",
																"nodeType": "YulBlock",
																"src": "3465:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "3467:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "3467:77:7"
																			},
																			"nativeSrc": "3467:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3467:79:7"
																		},
																		"nativeSrc": "3467:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3467:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "3444:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3444:6:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3452:4:7",
																						"nodeType": "YulLiteral",
																						"src": "3452:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3440:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3440:3:7"
																				},
																				"nativeSrc": "3440:17:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3440:17:7"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "3459:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "3459:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "3436:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3436:3:7"
																		},
																		"nativeSrc": "3436:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3429:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3429:6:7"
																},
																"nativeSrc": "3429:35:7",
																"nodeType": "YulFunctionCall",
																"src": "3429:35:7"
															},
															"nativeSrc": "3426:122:7",
															"nodeType": "YulIf",
															"src": "3426:122:7"
														},
														{
															"nativeSrc": "3557:30:7",
															"nodeType": "YulAssignment",
															"src": "3557:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3580:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3580:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3567:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "3567:12:7"
																},
																"nativeSrc": "3567:20:7",
																"nodeType": "YulFunctionCall",
																"src": "3567:20:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3557:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3557:6:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3630:83:7",
																"nodeType": "YulBlock",
																"src": "3630:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "3632:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "3632:77:7"
																			},
																			"nativeSrc": "3632:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3632:79:7"
																		},
																		"nativeSrc": "3632:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3632:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "3602:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3602:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3610:18:7",
																		"nodeType": "YulLiteral",
																		"src": "3610:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3599:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "3599:2:7"
																},
																"nativeSrc": "3599:30:7",
																"nodeType": "YulFunctionCall",
																"src": "3599:30:7"
															},
															"nativeSrc": "3596:117:7",
															"nodeType": "YulIf",
															"src": "3596:117:7"
														},
														{
															"nativeSrc": "3722:29:7",
															"nodeType": "YulAssignment",
															"src": "3722:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3738:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3738:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3746:4:7",
																		"nodeType": "YulLiteral",
																		"src": "3746:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3734:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3734:3:7"
																},
																"nativeSrc": "3734:17:7",
																"nodeType": "YulFunctionCall",
																"src": "3734:17:7"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "3722:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "3722:8:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3805:83:7",
																"nodeType": "YulBlock",
																"src": "3805:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "3807:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "3807:77:7"
																			},
																			"nativeSrc": "3807:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3807:79:7"
																		},
																		"nativeSrc": "3807:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3807:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "3770:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "3770:8:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "3784:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3784:6:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3792:4:7",
																						"nodeType": "YulLiteral",
																						"src": "3792:4:7",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3780:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3780:3:7"
																				},
																				"nativeSrc": "3780:17:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3780:17:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3766:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3766:3:7"
																		},
																		"nativeSrc": "3766:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3766:32:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3800:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3800:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3763:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "3763:2:7"
																},
																"nativeSrc": "3763:41:7",
																"nodeType": "YulFunctionCall",
																"src": "3763:41:7"
															},
															"nativeSrc": "3760:128:7",
															"nodeType": "YulIf",
															"src": "3760:128:7"
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_calldata_ptr",
												"nativeSrc": "3326:568:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3383:6:7",
														"nodeType": "YulTypedName",
														"src": "3383:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3391:3:7",
														"nodeType": "YulTypedName",
														"src": "3391:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "3399:8:7",
														"nodeType": "YulTypedName",
														"src": "3399:8:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3409:6:7",
														"nodeType": "YulTypedName",
														"src": "3409:6:7",
														"type": ""
													}
												],
												"src": "3326:568:7"
											},
											{
												"body": {
													"nativeSrc": "3945:81:7",
													"nodeType": "YulBlock",
													"src": "3945:81:7",
													"statements": [
														{
															"nativeSrc": "3955:65:7",
															"nodeType": "YulAssignment",
															"src": "3955:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3970:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3970:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3977:42:7",
																		"nodeType": "YulLiteral",
																		"src": "3977:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3966:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3966:3:7"
																},
																"nativeSrc": "3966:54:7",
																"nodeType": "YulFunctionCall",
																"src": "3966:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3955:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "3955:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "3900:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3927:5:7",
														"nodeType": "YulTypedName",
														"src": "3927:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3937:7:7",
														"nodeType": "YulTypedName",
														"src": "3937:7:7",
														"type": ""
													}
												],
												"src": "3900:126:7"
											},
											{
												"body": {
													"nativeSrc": "4077:51:7",
													"nodeType": "YulBlock",
													"src": "4077:51:7",
													"statements": [
														{
															"nativeSrc": "4087:35:7",
															"nodeType": "YulAssignment",
															"src": "4087:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4116:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4116:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "4098:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "4098:17:7"
																},
																"nativeSrc": "4098:24:7",
																"nodeType": "YulFunctionCall",
																"src": "4098:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4087:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "4087:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "4032:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4059:5:7",
														"nodeType": "YulTypedName",
														"src": "4059:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4069:7:7",
														"nodeType": "YulTypedName",
														"src": "4069:7:7",
														"type": ""
													}
												],
												"src": "4032:96:7"
											},
											{
												"body": {
													"nativeSrc": "4177:79:7",
													"nodeType": "YulBlock",
													"src": "4177:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4234:16:7",
																"nodeType": "YulBlock",
																"src": "4234:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4243:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4243:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4246:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4246:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4236:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4236:6:7"
																			},
																			"nativeSrc": "4236:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4236:12:7"
																		},
																		"nativeSrc": "4236:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4236:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4200:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4200:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4225:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "4225:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "4207:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "4207:17:7"
																				},
																				"nativeSrc": "4207:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4207:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4197:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "4197:2:7"
																		},
																		"nativeSrc": "4197:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4197:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4190:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4190:6:7"
																},
																"nativeSrc": "4190:43:7",
																"nodeType": "YulFunctionCall",
																"src": "4190:43:7"
															},
															"nativeSrc": "4187:63:7",
															"nodeType": "YulIf",
															"src": "4187:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "4134:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4170:5:7",
														"nodeType": "YulTypedName",
														"src": "4170:5:7",
														"type": ""
													}
												],
												"src": "4134:122:7"
											},
											{
												"body": {
													"nativeSrc": "4314:87:7",
													"nodeType": "YulBlock",
													"src": "4314:87:7",
													"statements": [
														{
															"nativeSrc": "4324:29:7",
															"nodeType": "YulAssignment",
															"src": "4324:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4346:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4346:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4333:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "4333:12:7"
																},
																"nativeSrc": "4333:20:7",
																"nodeType": "YulFunctionCall",
																"src": "4333:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4324:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "4324:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4389:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4389:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "4362:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "4362:26:7"
																},
																"nativeSrc": "4362:33:7",
																"nodeType": "YulFunctionCall",
																"src": "4362:33:7"
															},
															"nativeSrc": "4362:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "4362:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "4262:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4292:6:7",
														"nodeType": "YulTypedName",
														"src": "4292:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4300:3:7",
														"nodeType": "YulTypedName",
														"src": "4300:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4308:5:7",
														"nodeType": "YulTypedName",
														"src": "4308:5:7",
														"type": ""
													}
												],
												"src": "4262:139:7"
											},
											{
												"body": {
													"nativeSrc": "4576:972:7",
													"nodeType": "YulBlock",
													"src": "4576:972:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4623:83:7",
																"nodeType": "YulBlock",
																"src": "4623:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4625:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "4625:77:7"
																			},
																			"nativeSrc": "4625:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4625:79:7"
																		},
																		"nativeSrc": "4625:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4625:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4597:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4597:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4606:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4606:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4593:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4593:3:7"
																		},
																		"nativeSrc": "4593:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4593:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4618:3:7",
																		"nodeType": "YulLiteral",
																		"src": "4618:3:7",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4589:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4589:3:7"
																},
																"nativeSrc": "4589:33:7",
																"nodeType": "YulFunctionCall",
																"src": "4589:33:7"
															},
															"nativeSrc": "4586:120:7",
															"nodeType": "YulIf",
															"src": "4586:120:7"
														},
														{
															"nativeSrc": "4716:117:7",
															"nodeType": "YulBlock",
															"src": "4716:117:7",
															"statements": [
																{
																	"nativeSrc": "4731:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4731:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4745:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4745:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4735:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4735:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4760:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4760:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4795:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4795:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4806:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4806:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4791:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4791:3:7"
																				},
																				"nativeSrc": "4791:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4791:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4815:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4815:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4770:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4770:20:7"
																		},
																		"nativeSrc": "4770:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4770:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4760:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4760:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4843:118:7",
															"nodeType": "YulBlock",
															"src": "4843:118:7",
															"statements": [
																{
																	"nativeSrc": "4858:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4858:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4872:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4872:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4862:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4862:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4888:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4888:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4923:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4923:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4934:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4934:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4919:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4919:3:7"
																				},
																				"nativeSrc": "4919:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4919:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4943:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4943:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4898:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4898:20:7"
																		},
																		"nativeSrc": "4898:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4898:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4888:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4888:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4971:313:7",
															"nodeType": "YulBlock",
															"src": "4971:313:7",
															"statements": [
																{
																	"nativeSrc": "4986:46:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4986:46:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5017:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5017:9:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5028:2:7",
																						"nodeType": "YulLiteral",
																						"src": "5028:2:7",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5013:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5013:3:7"
																				},
																				"nativeSrc": "5013:18:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5013:18:7"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "5000:12:7",
																			"nodeType": "YulIdentifier",
																			"src": "5000:12:7"
																		},
																		"nativeSrc": "5000:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5000:32:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4990:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4990:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "5079:83:7",
																		"nodeType": "YulBlock",
																		"src": "5079:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "5081:77:7",
																						"nodeType": "YulIdentifier",
																						"src": "5081:77:7"
																					},
																					"nativeSrc": "5081:79:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5081:79:7"
																				},
																				"nativeSrc": "5081:79:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "5081:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "5051:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5051:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5059:18:7",
																				"nodeType": "YulLiteral",
																				"src": "5059:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "5048:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "5048:2:7"
																		},
																		"nativeSrc": "5048:30:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5048:30:7"
																	},
																	"nativeSrc": "5045:117:7",
																	"nodeType": "YulIf",
																	"src": "5045:117:7"
																},
																{
																	"nativeSrc": "5176:98:7",
																	"nodeType": "YulAssignment",
																	"src": "5176:98:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5246:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5246:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5257:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5257:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5242:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5242:3:7"
																				},
																				"nativeSrc": "5242:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5242:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5266:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5266:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_calldata_ptr",
																			"nativeSrc": "5194:47:7",
																			"nodeType": "YulIdentifier",
																			"src": "5194:47:7"
																		},
																		"nativeSrc": "5194:80:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5194:80:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5176:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5176:6:7"
																		},
																		{
																			"name": "value3",
																			"nativeSrc": "5184:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5184:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5294:118:7",
															"nodeType": "YulBlock",
															"src": "5294:118:7",
															"statements": [
																{
																	"nativeSrc": "5309:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5309:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5323:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5323:2:7",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5313:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5313:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5339:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5339:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5374:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5374:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5385:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5385:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5370:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5370:3:7"
																				},
																				"nativeSrc": "5370:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5370:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5394:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5394:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5349:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5349:20:7"
																		},
																		"nativeSrc": "5349:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5349:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "5339:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5339:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5422:119:7",
															"nodeType": "YulBlock",
															"src": "5422:119:7",
															"statements": [
																{
																	"nativeSrc": "5437:17:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5437:17:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5451:3:7",
																		"nodeType": "YulLiteral",
																		"src": "5451:3:7",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5441:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5441:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5468:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5468:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5503:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5503:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5514:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5514:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5499:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5499:3:7"
																				},
																				"nativeSrc": "5499:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5499:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5523:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5523:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5478:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5478:20:7"
																		},
																		"nativeSrc": "5478:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5478:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nativeSrc": "5468:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5468:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_array$_t_address_$dyn_calldata_ptrt_addresst_uint256",
												"nativeSrc": "4407:1141:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4506:9:7",
														"nodeType": "YulTypedName",
														"src": "4506:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4517:7:7",
														"nodeType": "YulTypedName",
														"src": "4517:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4529:6:7",
														"nodeType": "YulTypedName",
														"src": "4529:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4537:6:7",
														"nodeType": "YulTypedName",
														"src": "4537:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4545:6:7",
														"nodeType": "YulTypedName",
														"src": "4545:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "4553:6:7",
														"nodeType": "YulTypedName",
														"src": "4553:6:7",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "4561:6:7",
														"nodeType": "YulTypedName",
														"src": "4561:6:7",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "4569:6:7",
														"nodeType": "YulTypedName",
														"src": "4569:6:7",
														"type": ""
													}
												],
												"src": "4407:1141:7"
											},
											{
												"body": {
													"nativeSrc": "5628:40:7",
													"nodeType": "YulBlock",
													"src": "5628:40:7",
													"statements": [
														{
															"nativeSrc": "5639:22:7",
															"nodeType": "YulAssignment",
															"src": "5639:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5655:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5655:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5649:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "5649:5:7"
																},
																"nativeSrc": "5649:12:7",
																"nodeType": "YulFunctionCall",
																"src": "5649:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5639:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5639:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "5554:114:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5611:5:7",
														"nodeType": "YulTypedName",
														"src": "5611:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "5621:6:7",
														"nodeType": "YulTypedName",
														"src": "5621:6:7",
														"type": ""
													}
												],
												"src": "5554:114:7"
											},
											{
												"body": {
													"nativeSrc": "5785:73:7",
													"nodeType": "YulBlock",
													"src": "5785:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5802:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5802:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5807:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5807:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5795:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5795:6:7"
																},
																"nativeSrc": "5795:19:7",
																"nodeType": "YulFunctionCall",
																"src": "5795:19:7"
															},
															"nativeSrc": "5795:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "5795:19:7"
														},
														{
															"nativeSrc": "5823:29:7",
															"nodeType": "YulAssignment",
															"src": "5823:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5842:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5842:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5847:4:7",
																		"nodeType": "YulLiteral",
																		"src": "5847:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5838:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5838:3:7"
																},
																"nativeSrc": "5838:14:7",
																"nodeType": "YulFunctionCall",
																"src": "5838:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "5823:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "5823:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nativeSrc": "5674:184:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5757:3:7",
														"nodeType": "YulTypedName",
														"src": "5757:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5762:6:7",
														"nodeType": "YulTypedName",
														"src": "5762:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "5773:11:7",
														"nodeType": "YulTypedName",
														"src": "5773:11:7",
														"type": ""
													}
												],
												"src": "5674:184:7"
											},
											{
												"body": {
													"nativeSrc": "5936:60:7",
													"nodeType": "YulBlock",
													"src": "5936:60:7",
													"statements": [
														{
															"nativeSrc": "5946:11:7",
															"nodeType": "YulAssignment",
															"src": "5946:11:7",
															"value": {
																"name": "ptr",
																"nativeSrc": "5954:3:7",
																"nodeType": "YulIdentifier",
																"src": "5954:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5946:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5946:4:7"
																}
															]
														},
														{
															"nativeSrc": "5967:22:7",
															"nodeType": "YulAssignment",
															"src": "5967:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "5979:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5979:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5984:4:7",
																		"nodeType": "YulLiteral",
																		"src": "5984:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5975:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5975:3:7"
																},
																"nativeSrc": "5975:14:7",
																"nodeType": "YulFunctionCall",
																"src": "5975:14:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5967:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5967:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "5864:132:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "5923:3:7",
														"nodeType": "YulTypedName",
														"src": "5923:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "5931:4:7",
														"nodeType": "YulTypedName",
														"src": "5931:4:7",
														"type": ""
													}
												],
												"src": "5864:132:7"
											},
											{
												"body": {
													"nativeSrc": "6057:53:7",
													"nodeType": "YulBlock",
													"src": "6057:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6074:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6074:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6097:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6097:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "6079:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "6079:17:7"
																		},
																		"nativeSrc": "6079:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6079:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6067:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6067:6:7"
																},
																"nativeSrc": "6067:37:7",
																"nodeType": "YulFunctionCall",
																"src": "6067:37:7"
															},
															"nativeSrc": "6067:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "6067:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "6002:108:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6045:5:7",
														"nodeType": "YulTypedName",
														"src": "6045:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6052:3:7",
														"nodeType": "YulTypedName",
														"src": "6052:3:7",
														"type": ""
													}
												],
												"src": "6002:108:7"
											},
											{
												"body": {
													"nativeSrc": "6196:99:7",
													"nodeType": "YulBlock",
													"src": "6196:99:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6240:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6240:6:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "6248:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6248:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nativeSrc": "6206:33:7",
																	"nodeType": "YulIdentifier",
																	"src": "6206:33:7"
																},
																"nativeSrc": "6206:46:7",
																"nodeType": "YulFunctionCall",
																"src": "6206:46:7"
															},
															"nativeSrc": "6206:46:7",
															"nodeType": "YulExpressionStatement",
															"src": "6206:46:7"
														},
														{
															"nativeSrc": "6261:28:7",
															"nodeType": "YulAssignment",
															"src": "6261:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6279:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6279:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6284:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6284:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6275:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6275:3:7"
																},
																"nativeSrc": "6275:14:7",
																"nodeType": "YulFunctionCall",
																"src": "6275:14:7"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "6261:10:7",
																	"nodeType": "YulIdentifier",
																	"src": "6261:10:7"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nativeSrc": "6116:179:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "6169:6:7",
														"nodeType": "YulTypedName",
														"src": "6169:6:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6177:3:7",
														"nodeType": "YulTypedName",
														"src": "6177:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "6185:10:7",
														"nodeType": "YulTypedName",
														"src": "6185:10:7",
														"type": ""
													}
												],
												"src": "6116:179:7"
											},
											{
												"body": {
													"nativeSrc": "6376:38:7",
													"nodeType": "YulBlock",
													"src": "6376:38:7",
													"statements": [
														{
															"nativeSrc": "6386:22:7",
															"nodeType": "YulAssignment",
															"src": "6386:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "6398:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6398:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6403:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6403:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6394:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6394:3:7"
																},
																"nativeSrc": "6394:14:7",
																"nodeType": "YulFunctionCall",
																"src": "6394:14:7"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "6386:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6386:4:7"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "6301:113:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "6363:3:7",
														"nodeType": "YulTypedName",
														"src": "6363:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "6371:4:7",
														"nodeType": "YulTypedName",
														"src": "6371:4:7",
														"type": ""
													}
												],
												"src": "6301:113:7"
											},
											{
												"body": {
													"nativeSrc": "6574:608:7",
													"nodeType": "YulBlock",
													"src": "6574:608:7",
													"statements": [
														{
															"nativeSrc": "6584:68:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6584:68:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6646:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "6646:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "6598:47:7",
																	"nodeType": "YulIdentifier",
																	"src": "6598:47:7"
																},
																"nativeSrc": "6598:54:7",
																"nodeType": "YulFunctionCall",
																"src": "6598:54:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6588:6:7",
																	"nodeType": "YulTypedName",
																	"src": "6588:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6661:93:7",
															"nodeType": "YulAssignment",
															"src": "6661:93:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6742:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6742:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6747:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6747:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "6668:73:7",
																	"nodeType": "YulIdentifier",
																	"src": "6668:73:7"
																},
																"nativeSrc": "6668:86:7",
																"nodeType": "YulFunctionCall",
																"src": "6668:86:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6661:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6661:3:7"
																}
															]
														},
														{
															"nativeSrc": "6763:71:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6763:71:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6828:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "6828:5:7"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "6778:49:7",
																	"nodeType": "YulIdentifier",
																	"src": "6778:49:7"
																},
																"nativeSrc": "6778:56:7",
																"nodeType": "YulFunctionCall",
																"src": "6778:56:7"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "6767:7:7",
																	"nodeType": "YulTypedName",
																	"src": "6767:7:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6843:21:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6843:21:7",
															"value": {
																"name": "baseRef",
																"nativeSrc": "6857:7:7",
																"nodeType": "YulIdentifier",
																"src": "6857:7:7"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "6847:6:7",
																	"nodeType": "YulTypedName",
																	"src": "6847:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6933:224:7",
																"nodeType": "YulBlock",
																"src": "6933:224:7",
																"statements": [
																	{
																		"nativeSrc": "6947:34:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6947:34:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "6974:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "6974:6:7"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6968:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6968:5:7"
																			},
																			"nativeSrc": "6968:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6968:13:7"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "6951:13:7",
																				"nodeType": "YulTypedName",
																				"src": "6951:13:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "6994:70:7",
																		"nodeType": "YulAssignment",
																		"src": "6994:70:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "7045:13:7",
																					"nodeType": "YulIdentifier",
																					"src": "7045:13:7"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "7060:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7060:3:7"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nativeSrc": "7001:43:7",
																				"nodeType": "YulIdentifier",
																				"src": "7001:43:7"
																			},
																			"nativeSrc": "7001:63:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7001:63:7"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "6994:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "6994:3:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "7077:70:7",
																		"nodeType": "YulAssignment",
																		"src": "7077:70:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "7140:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "7140:6:7"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nativeSrc": "7087:52:7",
																				"nodeType": "YulIdentifier",
																				"src": "7087:52:7"
																			},
																			"nativeSrc": "7087:60:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7087:60:7"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "7077:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7077:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "6895:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "6895:1:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6898:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6898:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6892:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6892:2:7"
																},
																"nativeSrc": "6892:13:7",
																"nodeType": "YulFunctionCall",
																"src": "6892:13:7"
															},
															"nativeSrc": "6873:284:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6906:18:7",
																"nodeType": "YulBlock",
																"src": "6906:18:7",
																"statements": [
																	{
																		"nativeSrc": "6908:14:7",
																		"nodeType": "YulAssignment",
																		"src": "6908:14:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "6917:1:7",
																					"nodeType": "YulIdentifier",
																					"src": "6917:1:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6920:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6920:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6913:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "6913:3:7"
																			},
																			"nativeSrc": "6913:9:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6913:9:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "6908:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "6908:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6877:14:7",
																"nodeType": "YulBlock",
																"src": "6877:14:7",
																"statements": [
																	{
																		"nativeSrc": "6879:10:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6879:10:7",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "6888:1:7",
																			"nodeType": "YulLiteral",
																			"src": "6888:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "6883:1:7",
																				"nodeType": "YulTypedName",
																				"src": "6883:1:7",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "6873:284:7"
														},
														{
															"nativeSrc": "7166:10:7",
															"nodeType": "YulAssignment",
															"src": "7166:10:7",
															"value": {
																"name": "pos",
																"nativeSrc": "7173:3:7",
																"nodeType": "YulIdentifier",
																"src": "7173:3:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7166:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7166:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nativeSrc": "6450:732:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6553:5:7",
														"nodeType": "YulTypedName",
														"src": "6553:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6560:3:7",
														"nodeType": "YulTypedName",
														"src": "6560:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6569:3:7",
														"nodeType": "YulTypedName",
														"src": "6569:3:7",
														"type": ""
													}
												],
												"src": "6450:732:7"
											},
											{
												"body": {
													"nativeSrc": "7336:225:7",
													"nodeType": "YulBlock",
													"src": "7336:225:7",
													"statements": [
														{
															"nativeSrc": "7346:26:7",
															"nodeType": "YulAssignment",
															"src": "7346:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7358:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7358:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7369:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7369:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7354:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7354:3:7"
																},
																"nativeSrc": "7354:18:7",
																"nodeType": "YulFunctionCall",
																"src": "7354:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7346:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7346:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7393:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7393:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7404:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7404:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7389:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7389:3:7"
																		},
																		"nativeSrc": "7389:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7389:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7412:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "7412:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7418:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7418:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7408:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7408:3:7"
																		},
																		"nativeSrc": "7408:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7408:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7382:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7382:6:7"
																},
																"nativeSrc": "7382:47:7",
																"nodeType": "YulFunctionCall",
																"src": "7382:47:7"
															},
															"nativeSrc": "7382:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "7382:47:7"
														},
														{
															"nativeSrc": "7438:116:7",
															"nodeType": "YulAssignment",
															"src": "7438:116:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7540:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7540:6:7"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "7549:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7549:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "7446:93:7",
																	"nodeType": "YulIdentifier",
																	"src": "7446:93:7"
																},
																"nativeSrc": "7446:108:7",
																"nodeType": "YulFunctionCall",
																"src": "7446:108:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7438:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7438:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "7188:373:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7308:9:7",
														"nodeType": "YulTypedName",
														"src": "7308:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7320:6:7",
														"nodeType": "YulTypedName",
														"src": "7320:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7331:4:7",
														"nodeType": "YulTypedName",
														"src": "7331:4:7",
														"type": ""
													}
												],
												"src": "7188:373:7"
											},
											{
												"body": {
													"nativeSrc": "7650:391:7",
													"nodeType": "YulBlock",
													"src": "7650:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "7696:83:7",
																"nodeType": "YulBlock",
																"src": "7696:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7698:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "7698:77:7"
																			},
																			"nativeSrc": "7698:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7698:79:7"
																		},
																		"nativeSrc": "7698:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7698:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7671:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7671:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7680:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7680:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7667:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7667:3:7"
																		},
																		"nativeSrc": "7667:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7667:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7692:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7692:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7663:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7663:3:7"
																},
																"nativeSrc": "7663:32:7",
																"nodeType": "YulFunctionCall",
																"src": "7663:32:7"
															},
															"nativeSrc": "7660:119:7",
															"nodeType": "YulIf",
															"src": "7660:119:7"
														},
														{
															"nativeSrc": "7789:117:7",
															"nodeType": "YulBlock",
															"src": "7789:117:7",
															"statements": [
																{
																	"nativeSrc": "7804:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7804:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7818:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7818:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7808:6:7",
																			"nodeType": "YulTypedName",
																			"src": "7808:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7833:63:7",
																	"nodeType": "YulAssignment",
																	"src": "7833:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7868:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "7868:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7879:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "7879:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7864:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7864:3:7"
																				},
																				"nativeSrc": "7864:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7864:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7888:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7888:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7843:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "7843:20:7"
																		},
																		"nativeSrc": "7843:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7843:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7833:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "7833:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7916:118:7",
															"nodeType": "YulBlock",
															"src": "7916:118:7",
															"statements": [
																{
																	"nativeSrc": "7931:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7931:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7945:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7945:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7935:6:7",
																			"nodeType": "YulTypedName",
																			"src": "7935:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7961:63:7",
																	"nodeType": "YulAssignment",
																	"src": "7961:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7996:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "7996:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8007:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "8007:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7992:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7992:3:7"
																				},
																				"nativeSrc": "7992:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7992:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8016:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "8016:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7971:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "7971:20:7"
																		},
																		"nativeSrc": "7971:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7971:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7961:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "7961:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "7567:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7612:9:7",
														"nodeType": "YulTypedName",
														"src": "7612:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7623:7:7",
														"nodeType": "YulTypedName",
														"src": "7623:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7635:6:7",
														"nodeType": "YulTypedName",
														"src": "7635:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7643:6:7",
														"nodeType": "YulTypedName",
														"src": "7643:6:7",
														"type": ""
													}
												],
												"src": "7567:474:7"
											},
											{
												"body": {
													"nativeSrc": "8215:1035:7",
													"nodeType": "YulBlock",
													"src": "8215:1035:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "8262:83:7",
																"nodeType": "YulBlock",
																"src": "8262:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8264:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "8264:77:7"
																			},
																			"nativeSrc": "8264:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8264:79:7"
																		},
																		"nativeSrc": "8264:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8264:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8236:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "8236:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8245:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8245:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8232:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8232:3:7"
																		},
																		"nativeSrc": "8232:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8232:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8257:3:7",
																		"nodeType": "YulLiteral",
																		"src": "8257:3:7",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8228:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8228:3:7"
																},
																"nativeSrc": "8228:33:7",
																"nodeType": "YulFunctionCall",
																"src": "8228:33:7"
															},
															"nativeSrc": "8225:120:7",
															"nodeType": "YulIf",
															"src": "8225:120:7"
														},
														{
															"nativeSrc": "8355:117:7",
															"nodeType": "YulBlock",
															"src": "8355:117:7",
															"statements": [
																{
																	"nativeSrc": "8370:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8370:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8384:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8384:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8374:6:7",
																			"nodeType": "YulTypedName",
																			"src": "8374:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8399:63:7",
																	"nodeType": "YulAssignment",
																	"src": "8399:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8434:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "8434:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8445:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "8445:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8430:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8430:3:7"
																				},
																				"nativeSrc": "8430:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8430:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8454:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "8454:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8409:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "8409:20:7"
																		},
																		"nativeSrc": "8409:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8409:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8399:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "8399:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8482:118:7",
															"nodeType": "YulBlock",
															"src": "8482:118:7",
															"statements": [
																{
																	"nativeSrc": "8497:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8497:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8511:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8511:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8501:6:7",
																			"nodeType": "YulTypedName",
																			"src": "8501:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8527:63:7",
																	"nodeType": "YulAssignment",
																	"src": "8527:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8562:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "8562:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8573:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "8573:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8558:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8558:3:7"
																				},
																				"nativeSrc": "8558:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8558:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8582:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "8582:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8537:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "8537:20:7"
																		},
																		"nativeSrc": "8537:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8537:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8527:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "8527:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8610:118:7",
															"nodeType": "YulBlock",
															"src": "8610:118:7",
															"statements": [
																{
																	"nativeSrc": "8625:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8625:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8639:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8639:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8629:6:7",
																			"nodeType": "YulTypedName",
																			"src": "8629:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8655:63:7",
																	"nodeType": "YulAssignment",
																	"src": "8655:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8690:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "8690:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8701:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "8701:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8686:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8686:3:7"
																				},
																				"nativeSrc": "8686:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8686:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8710:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "8710:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "8665:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "8665:20:7"
																		},
																		"nativeSrc": "8665:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8665:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "8655:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "8655:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8738:118:7",
															"nodeType": "YulBlock",
															"src": "8738:118:7",
															"statements": [
																{
																	"nativeSrc": "8753:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8753:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8767:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8767:2:7",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8757:6:7",
																			"nodeType": "YulTypedName",
																			"src": "8757:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8783:63:7",
																	"nodeType": "YulAssignment",
																	"src": "8783:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8818:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "8818:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8829:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "8829:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8814:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8814:3:7"
																				},
																				"nativeSrc": "8814:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8814:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8838:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "8838:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "8793:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "8793:20:7"
																		},
																		"nativeSrc": "8793:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8793:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "8783:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "8783:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8866:119:7",
															"nodeType": "YulBlock",
															"src": "8866:119:7",
															"statements": [
																{
																	"nativeSrc": "8881:17:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8881:17:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8895:3:7",
																		"nodeType": "YulLiteral",
																		"src": "8895:3:7",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8885:6:7",
																			"nodeType": "YulTypedName",
																			"src": "8885:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8912:63:7",
																	"nodeType": "YulAssignment",
																	"src": "8912:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8947:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "8947:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8958:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "8958:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8943:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8943:3:7"
																				},
																				"nativeSrc": "8943:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8943:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8967:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "8967:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "8922:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "8922:20:7"
																		},
																		"nativeSrc": "8922:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8922:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "8912:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "8912:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8995:119:7",
															"nodeType": "YulBlock",
															"src": "8995:119:7",
															"statements": [
																{
																	"nativeSrc": "9010:17:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9010:17:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9024:3:7",
																		"nodeType": "YulLiteral",
																		"src": "9024:3:7",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9014:6:7",
																			"nodeType": "YulTypedName",
																			"src": "9014:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9041:63:7",
																	"nodeType": "YulAssignment",
																	"src": "9041:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9076:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "9076:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9087:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "9087:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9072:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "9072:3:7"
																				},
																				"nativeSrc": "9072:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "9072:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9096:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "9096:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9051:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "9051:20:7"
																		},
																		"nativeSrc": "9051:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9051:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nativeSrc": "9041:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "9041:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9124:119:7",
															"nodeType": "YulBlock",
															"src": "9124:119:7",
															"statements": [
																{
																	"nativeSrc": "9139:17:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9139:17:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9153:3:7",
																		"nodeType": "YulLiteral",
																		"src": "9153:3:7",
																		"type": "",
																		"value": "192"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9143:6:7",
																			"nodeType": "YulTypedName",
																			"src": "9143:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9170:63:7",
																	"nodeType": "YulAssignment",
																	"src": "9170:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9205:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "9205:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9216:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "9216:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9201:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "9201:3:7"
																				},
																				"nativeSrc": "9201:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "9201:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9225:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "9225:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "9180:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "9180:20:7"
																		},
																		"nativeSrc": "9180:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9180:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value6",
																			"nativeSrc": "9170:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "9170:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_addresst_uint256",
												"nativeSrc": "8047:1203:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8137:9:7",
														"nodeType": "YulTypedName",
														"src": "8137:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8148:7:7",
														"nodeType": "YulTypedName",
														"src": "8148:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8160:6:7",
														"nodeType": "YulTypedName",
														"src": "8160:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8168:6:7",
														"nodeType": "YulTypedName",
														"src": "8168:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8176:6:7",
														"nodeType": "YulTypedName",
														"src": "8176:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "8184:6:7",
														"nodeType": "YulTypedName",
														"src": "8184:6:7",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "8192:6:7",
														"nodeType": "YulTypedName",
														"src": "8192:6:7",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "8200:6:7",
														"nodeType": "YulTypedName",
														"src": "8200:6:7",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "8208:6:7",
														"nodeType": "YulTypedName",
														"src": "8208:6:7",
														"type": ""
													}
												],
												"src": "8047:1203:7"
											},
											{
												"body": {
													"nativeSrc": "9382:206:7",
													"nodeType": "YulBlock",
													"src": "9382:206:7",
													"statements": [
														{
															"nativeSrc": "9392:26:7",
															"nodeType": "YulAssignment",
															"src": "9392:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9404:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9404:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9415:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9415:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9400:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9400:3:7"
																},
																"nativeSrc": "9400:18:7",
																"nodeType": "YulFunctionCall",
																"src": "9400:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9392:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9392:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9472:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9472:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9485:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9485:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9496:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9496:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9481:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9481:3:7"
																		},
																		"nativeSrc": "9481:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9481:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9428:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "9428:43:7"
																},
																"nativeSrc": "9428:71:7",
																"nodeType": "YulFunctionCall",
																"src": "9428:71:7"
															},
															"nativeSrc": "9428:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "9428:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9553:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9553:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9566:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9566:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9577:2:7",
																				"nodeType": "YulLiteral",
																				"src": "9577:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9562:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9562:3:7"
																		},
																		"nativeSrc": "9562:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9562:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9509:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "9509:43:7"
																},
																"nativeSrc": "9509:72:7",
																"nodeType": "YulFunctionCall",
																"src": "9509:72:7"
															},
															"nativeSrc": "9509:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "9509:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "9256:332:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9346:9:7",
														"nodeType": "YulTypedName",
														"src": "9346:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9358:6:7",
														"nodeType": "YulTypedName",
														"src": "9358:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9366:6:7",
														"nodeType": "YulTypedName",
														"src": "9366:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9377:4:7",
														"nodeType": "YulTypedName",
														"src": "9377:4:7",
														"type": ""
													}
												],
												"src": "9256:332:7"
											},
											{
												"body": {
													"nativeSrc": "9677:391:7",
													"nodeType": "YulBlock",
													"src": "9677:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "9723:83:7",
																"nodeType": "YulBlock",
																"src": "9723:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9725:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "9725:77:7"
																			},
																			"nativeSrc": "9725:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9725:79:7"
																		},
																		"nativeSrc": "9725:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "9725:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9698:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "9698:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9707:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9707:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9694:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9694:3:7"
																		},
																		"nativeSrc": "9694:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9694:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9719:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9719:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9690:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9690:3:7"
																},
																"nativeSrc": "9690:32:7",
																"nodeType": "YulFunctionCall",
																"src": "9690:32:7"
															},
															"nativeSrc": "9687:119:7",
															"nodeType": "YulIf",
															"src": "9687:119:7"
														},
														{
															"nativeSrc": "9816:117:7",
															"nodeType": "YulBlock",
															"src": "9816:117:7",
															"statements": [
																{
																	"nativeSrc": "9831:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9831:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9845:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9845:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9835:6:7",
																			"nodeType": "YulTypedName",
																			"src": "9835:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9860:63:7",
																	"nodeType": "YulAssignment",
																	"src": "9860:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9895:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "9895:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9906:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "9906:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9891:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "9891:3:7"
																				},
																				"nativeSrc": "9891:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "9891:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9915:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "9915:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "9870:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "9870:20:7"
																		},
																		"nativeSrc": "9870:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9870:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9860:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "9860:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9943:118:7",
															"nodeType": "YulBlock",
															"src": "9943:118:7",
															"statements": [
																{
																	"nativeSrc": "9958:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9958:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9972:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9972:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9962:6:7",
																			"nodeType": "YulTypedName",
																			"src": "9962:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9988:63:7",
																	"nodeType": "YulAssignment",
																	"src": "9988:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10023:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "10023:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10034:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "10034:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10019:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10019:3:7"
																				},
																				"nativeSrc": "10019:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10019:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10043:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "10043:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9998:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "9998:20:7"
																		},
																		"nativeSrc": "9998:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9998:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9988:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "9988:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "9594:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9639:9:7",
														"nodeType": "YulTypedName",
														"src": "9639:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9650:7:7",
														"nodeType": "YulTypedName",
														"src": "9650:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9662:6:7",
														"nodeType": "YulTypedName",
														"src": "9662:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9670:6:7",
														"nodeType": "YulTypedName",
														"src": "9670:6:7",
														"type": ""
													}
												],
												"src": "9594:474:7"
											},
											{
												"body": {
													"nativeSrc": "10259:1164:7",
													"nodeType": "YulBlock",
													"src": "10259:1164:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "10306:83:7",
																"nodeType": "YulBlock",
																"src": "10306:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10308:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "10308:77:7"
																			},
																			"nativeSrc": "10308:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "10308:79:7"
																		},
																		"nativeSrc": "10308:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "10308:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10280:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "10280:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10289:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10289:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10276:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10276:3:7"
																		},
																		"nativeSrc": "10276:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10276:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10301:3:7",
																		"nodeType": "YulLiteral",
																		"src": "10301:3:7",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10272:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10272:3:7"
																},
																"nativeSrc": "10272:33:7",
																"nodeType": "YulFunctionCall",
																"src": "10272:33:7"
															},
															"nativeSrc": "10269:120:7",
															"nodeType": "YulIf",
															"src": "10269:120:7"
														},
														{
															"nativeSrc": "10399:117:7",
															"nodeType": "YulBlock",
															"src": "10399:117:7",
															"statements": [
																{
																	"nativeSrc": "10414:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10414:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10428:1:7",
																		"nodeType": "YulLiteral",
																		"src": "10428:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10418:6:7",
																			"nodeType": "YulTypedName",
																			"src": "10418:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10443:63:7",
																	"nodeType": "YulAssignment",
																	"src": "10443:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10478:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "10478:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10489:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "10489:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10474:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10474:3:7"
																				},
																				"nativeSrc": "10474:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10474:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10498:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "10498:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10453:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "10453:20:7"
																		},
																		"nativeSrc": "10453:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10453:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10443:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "10443:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10526:118:7",
															"nodeType": "YulBlock",
															"src": "10526:118:7",
															"statements": [
																{
																	"nativeSrc": "10541:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10541:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10555:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10555:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10545:6:7",
																			"nodeType": "YulTypedName",
																			"src": "10545:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10571:63:7",
																	"nodeType": "YulAssignment",
																	"src": "10571:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10606:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "10606:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10617:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "10617:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10602:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10602:3:7"
																				},
																				"nativeSrc": "10602:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10602:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10626:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "10626:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10581:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "10581:20:7"
																		},
																		"nativeSrc": "10581:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10581:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10571:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "10571:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10654:118:7",
															"nodeType": "YulBlock",
															"src": "10654:118:7",
															"statements": [
																{
																	"nativeSrc": "10669:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10669:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10683:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10683:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10673:6:7",
																			"nodeType": "YulTypedName",
																			"src": "10673:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10699:63:7",
																	"nodeType": "YulAssignment",
																	"src": "10699:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10734:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "10734:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10745:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "10745:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10730:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10730:3:7"
																				},
																				"nativeSrc": "10730:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10730:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10754:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "10754:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "10709:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "10709:20:7"
																		},
																		"nativeSrc": "10709:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10709:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "10699:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "10699:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10782:118:7",
															"nodeType": "YulBlock",
															"src": "10782:118:7",
															"statements": [
																{
																	"nativeSrc": "10797:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10797:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10811:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10811:2:7",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10801:6:7",
																			"nodeType": "YulTypedName",
																			"src": "10801:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10827:63:7",
																	"nodeType": "YulAssignment",
																	"src": "10827:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10862:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "10862:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10873:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "10873:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10858:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10858:3:7"
																				},
																				"nativeSrc": "10858:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10858:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10882:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "10882:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "10837:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "10837:20:7"
																		},
																		"nativeSrc": "10837:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10837:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "10827:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "10827:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10910:119:7",
															"nodeType": "YulBlock",
															"src": "10910:119:7",
															"statements": [
																{
																	"nativeSrc": "10925:17:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10925:17:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10939:3:7",
																		"nodeType": "YulLiteral",
																		"src": "10939:3:7",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10929:6:7",
																			"nodeType": "YulTypedName",
																			"src": "10929:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10956:63:7",
																	"nodeType": "YulAssignment",
																	"src": "10956:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10991:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "10991:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11002:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "11002:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10987:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10987:3:7"
																				},
																				"nativeSrc": "10987:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10987:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11011:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "11011:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "10966:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "10966:20:7"
																		},
																		"nativeSrc": "10966:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10966:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "10956:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "10956:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11039:119:7",
															"nodeType": "YulBlock",
															"src": "11039:119:7",
															"statements": [
																{
																	"nativeSrc": "11054:17:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11054:17:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11068:3:7",
																		"nodeType": "YulLiteral",
																		"src": "11068:3:7",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11058:6:7",
																			"nodeType": "YulTypedName",
																			"src": "11058:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11085:63:7",
																	"nodeType": "YulAssignment",
																	"src": "11085:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11120:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "11120:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11131:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "11131:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11116:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "11116:3:7"
																				},
																				"nativeSrc": "11116:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "11116:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11140:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "11140:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "11095:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "11095:20:7"
																		},
																		"nativeSrc": "11095:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11095:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nativeSrc": "11085:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "11085:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11168:119:7",
															"nodeType": "YulBlock",
															"src": "11168:119:7",
															"statements": [
																{
																	"nativeSrc": "11183:17:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11183:17:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11197:3:7",
																		"nodeType": "YulLiteral",
																		"src": "11197:3:7",
																		"type": "",
																		"value": "192"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11187:6:7",
																			"nodeType": "YulTypedName",
																			"src": "11187:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11214:63:7",
																	"nodeType": "YulAssignment",
																	"src": "11214:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11249:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "11249:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11260:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "11260:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11245:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "11245:3:7"
																				},
																				"nativeSrc": "11245:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "11245:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11269:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "11269:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11224:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "11224:20:7"
																		},
																		"nativeSrc": "11224:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11224:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value6",
																			"nativeSrc": "11214:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "11214:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11297:119:7",
															"nodeType": "YulBlock",
															"src": "11297:119:7",
															"statements": [
																{
																	"nativeSrc": "11312:17:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11312:17:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11326:3:7",
																		"nodeType": "YulLiteral",
																		"src": "11326:3:7",
																		"type": "",
																		"value": "224"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11316:6:7",
																			"nodeType": "YulTypedName",
																			"src": "11316:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11343:63:7",
																	"nodeType": "YulAssignment",
																	"src": "11343:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11378:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "11378:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11389:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "11389:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11374:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "11374:3:7"
																				},
																				"nativeSrc": "11374:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "11374:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11398:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "11398:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "11353:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "11353:20:7"
																		},
																		"nativeSrc": "11353:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11353:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value7",
																			"nativeSrc": "11343:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "11343:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_uint256t_addresst_uint256",
												"nativeSrc": "10074:1349:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10173:9:7",
														"nodeType": "YulTypedName",
														"src": "10173:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10184:7:7",
														"nodeType": "YulTypedName",
														"src": "10184:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10196:6:7",
														"nodeType": "YulTypedName",
														"src": "10196:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10204:6:7",
														"nodeType": "YulTypedName",
														"src": "10204:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10212:6:7",
														"nodeType": "YulTypedName",
														"src": "10212:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "10220:6:7",
														"nodeType": "YulTypedName",
														"src": "10220:6:7",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "10228:6:7",
														"nodeType": "YulTypedName",
														"src": "10228:6:7",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "10236:6:7",
														"nodeType": "YulTypedName",
														"src": "10236:6:7",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "10244:6:7",
														"nodeType": "YulTypedName",
														"src": "10244:6:7",
														"type": ""
													},
													{
														"name": "value7",
														"nativeSrc": "10252:6:7",
														"nodeType": "YulTypedName",
														"src": "10252:6:7",
														"type": ""
													}
												],
												"src": "10074:1349:7"
											},
											{
												"body": {
													"nativeSrc": "11583:288:7",
													"nodeType": "YulBlock",
													"src": "11583:288:7",
													"statements": [
														{
															"nativeSrc": "11593:26:7",
															"nodeType": "YulAssignment",
															"src": "11593:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11605:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "11605:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11616:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11616:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11601:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11601:3:7"
																},
																"nativeSrc": "11601:18:7",
																"nodeType": "YulFunctionCall",
																"src": "11601:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11593:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11593:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11673:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "11673:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11686:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11686:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11697:1:7",
																				"nodeType": "YulLiteral",
																				"src": "11697:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11682:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11682:3:7"
																		},
																		"nativeSrc": "11682:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11682:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11629:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "11629:43:7"
																},
																"nativeSrc": "11629:71:7",
																"nodeType": "YulFunctionCall",
																"src": "11629:71:7"
															},
															"nativeSrc": "11629:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "11629:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11754:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "11754:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11767:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11767:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11778:2:7",
																				"nodeType": "YulLiteral",
																				"src": "11778:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11763:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11763:3:7"
																		},
																		"nativeSrc": "11763:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11763:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11710:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "11710:43:7"
																},
																"nativeSrc": "11710:72:7",
																"nodeType": "YulFunctionCall",
																"src": "11710:72:7"
															},
															"nativeSrc": "11710:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "11710:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "11836:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "11836:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11849:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11849:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11860:2:7",
																				"nodeType": "YulLiteral",
																				"src": "11860:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11845:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11845:3:7"
																		},
																		"nativeSrc": "11845:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11845:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11792:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "11792:43:7"
																},
																"nativeSrc": "11792:72:7",
																"nodeType": "YulFunctionCall",
																"src": "11792:72:7"
															},
															"nativeSrc": "11792:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "11792:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "11429:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11539:9:7",
														"nodeType": "YulTypedName",
														"src": "11539:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11551:6:7",
														"nodeType": "YulTypedName",
														"src": "11551:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11559:6:7",
														"nodeType": "YulTypedName",
														"src": "11559:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11567:6:7",
														"nodeType": "YulTypedName",
														"src": "11567:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11578:4:7",
														"nodeType": "YulTypedName",
														"src": "11578:4:7",
														"type": ""
													}
												],
												"src": "11429:442:7"
											},
											{
												"body": {
													"nativeSrc": "11973:73:7",
													"nodeType": "YulBlock",
													"src": "11973:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11990:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11990:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11995:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "11995:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11983:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11983:6:7"
																},
																"nativeSrc": "11983:19:7",
																"nodeType": "YulFunctionCall",
																"src": "11983:19:7"
															},
															"nativeSrc": "11983:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "11983:19:7"
														},
														{
															"nativeSrc": "12011:29:7",
															"nodeType": "YulAssignment",
															"src": "12011:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12030:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12030:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12035:4:7",
																		"nodeType": "YulLiteral",
																		"src": "12035:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12026:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12026:3:7"
																},
																"nativeSrc": "12026:14:7",
																"nodeType": "YulFunctionCall",
																"src": "12026:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "12011:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "12011:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "11877:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11945:3:7",
														"nodeType": "YulTypedName",
														"src": "11945:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "11950:6:7",
														"nodeType": "YulTypedName",
														"src": "11950:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "11961:11:7",
														"nodeType": "YulTypedName",
														"src": "11961:11:7",
														"type": ""
													}
												],
												"src": "11877:169:7"
											},
											{
												"body": {
													"nativeSrc": "12158:60:7",
													"nodeType": "YulBlock",
													"src": "12158:60:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12180:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "12180:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12188:1:7",
																				"nodeType": "YulLiteral",
																				"src": "12188:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12176:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12176:3:7"
																		},
																		"nativeSrc": "12176:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12176:14:7"
																	},
																	{
																		"hexValue": "496e76616c6964207265736572766573",
																		"kind": "string",
																		"nativeSrc": "12192:18:7",
																		"nodeType": "YulLiteral",
																		"src": "12192:18:7",
																		"type": "",
																		"value": "Invalid reserves"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12169:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12169:6:7"
																},
																"nativeSrc": "12169:42:7",
																"nodeType": "YulFunctionCall",
																"src": "12169:42:7"
															},
															"nativeSrc": "12169:42:7",
															"nodeType": "YulExpressionStatement",
															"src": "12169:42:7"
														}
													]
												},
												"name": "store_literal_in_memory_185a9d5da6de3eebfb2e4ad4adad189f402b098c61f6e8e0c8d2b4a20a1faa2a",
												"nativeSrc": "12052:166:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12150:6:7",
														"nodeType": "YulTypedName",
														"src": "12150:6:7",
														"type": ""
													}
												],
												"src": "12052:166:7"
											},
											{
												"body": {
													"nativeSrc": "12370:220:7",
													"nodeType": "YulBlock",
													"src": "12370:220:7",
													"statements": [
														{
															"nativeSrc": "12380:74:7",
															"nodeType": "YulAssignment",
															"src": "12380:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12446:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12446:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12451:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12451:2:7",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12387:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "12387:58:7"
																},
																"nativeSrc": "12387:67:7",
																"nodeType": "YulFunctionCall",
																"src": "12387:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12380:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12380:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12552:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12552:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_185a9d5da6de3eebfb2e4ad4adad189f402b098c61f6e8e0c8d2b4a20a1faa2a",
																	"nativeSrc": "12463:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "12463:88:7"
																},
																"nativeSrc": "12463:93:7",
																"nodeType": "YulFunctionCall",
																"src": "12463:93:7"
															},
															"nativeSrc": "12463:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "12463:93:7"
														},
														{
															"nativeSrc": "12565:19:7",
															"nodeType": "YulAssignment",
															"src": "12565:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12576:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12576:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12581:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12581:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12572:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12572:3:7"
																},
																"nativeSrc": "12572:12:7",
																"nodeType": "YulFunctionCall",
																"src": "12572:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12565:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12565:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_185a9d5da6de3eebfb2e4ad4adad189f402b098c61f6e8e0c8d2b4a20a1faa2a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12224:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12358:3:7",
														"nodeType": "YulTypedName",
														"src": "12358:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12366:3:7",
														"nodeType": "YulTypedName",
														"src": "12366:3:7",
														"type": ""
													}
												],
												"src": "12224:366:7"
											},
											{
												"body": {
													"nativeSrc": "12767:248:7",
													"nodeType": "YulBlock",
													"src": "12767:248:7",
													"statements": [
														{
															"nativeSrc": "12777:26:7",
															"nodeType": "YulAssignment",
															"src": "12777:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12789:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "12789:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12800:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12800:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12785:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12785:3:7"
																},
																"nativeSrc": "12785:18:7",
																"nodeType": "YulFunctionCall",
																"src": "12785:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12777:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12777:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12824:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12824:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12835:1:7",
																				"nodeType": "YulLiteral",
																				"src": "12835:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12820:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12820:3:7"
																		},
																		"nativeSrc": "12820:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12820:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12843:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "12843:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12849:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12849:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12839:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12839:3:7"
																		},
																		"nativeSrc": "12839:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12839:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12813:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12813:6:7"
																},
																"nativeSrc": "12813:47:7",
																"nodeType": "YulFunctionCall",
																"src": "12813:47:7"
															},
															"nativeSrc": "12813:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "12813:47:7"
														},
														{
															"nativeSrc": "12869:139:7",
															"nodeType": "YulAssignment",
															"src": "12869:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13003:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "13003:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_185a9d5da6de3eebfb2e4ad4adad189f402b098c61f6e8e0c8d2b4a20a1faa2a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12877:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "12877:124:7"
																},
																"nativeSrc": "12877:131:7",
																"nodeType": "YulFunctionCall",
																"src": "12877:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12869:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12869:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_185a9d5da6de3eebfb2e4ad4adad189f402b098c61f6e8e0c8d2b4a20a1faa2a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12596:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12747:9:7",
														"nodeType": "YulTypedName",
														"src": "12747:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12762:4:7",
														"nodeType": "YulTypedName",
														"src": "12762:4:7",
														"type": ""
													}
												],
												"src": "12596:419:7"
											},
											{
												"body": {
													"nativeSrc": "13049:152:7",
													"nodeType": "YulBlock",
													"src": "13049:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13066:1:7",
																		"nodeType": "YulLiteral",
																		"src": "13066:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13069:77:7",
																		"nodeType": "YulLiteral",
																		"src": "13069:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13059:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13059:6:7"
																},
																"nativeSrc": "13059:88:7",
																"nodeType": "YulFunctionCall",
																"src": "13059:88:7"
															},
															"nativeSrc": "13059:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "13059:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13163:1:7",
																		"nodeType": "YulLiteral",
																		"src": "13163:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13166:4:7",
																		"nodeType": "YulLiteral",
																		"src": "13166:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13156:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13156:6:7"
																},
																"nativeSrc": "13156:15:7",
																"nodeType": "YulFunctionCall",
																"src": "13156:15:7"
															},
															"nativeSrc": "13156:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "13156:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13187:1:7",
																		"nodeType": "YulLiteral",
																		"src": "13187:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13190:4:7",
																		"nodeType": "YulLiteral",
																		"src": "13190:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13180:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13180:6:7"
																},
																"nativeSrc": "13180:15:7",
																"nodeType": "YulFunctionCall",
																"src": "13180:15:7"
															},
															"nativeSrc": "13180:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "13180:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "13021:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "13021:180:7"
											},
											{
												"body": {
													"nativeSrc": "13255:362:7",
													"nodeType": "YulBlock",
													"src": "13255:362:7",
													"statements": [
														{
															"nativeSrc": "13265:25:7",
															"nodeType": "YulAssignment",
															"src": "13265:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13288:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "13288:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13270:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "13270:17:7"
																},
																"nativeSrc": "13270:20:7",
																"nodeType": "YulFunctionCall",
																"src": "13270:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13265:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "13265:1:7"
																}
															]
														},
														{
															"nativeSrc": "13299:25:7",
															"nodeType": "YulAssignment",
															"src": "13299:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13322:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "13322:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13304:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "13304:17:7"
																},
																"nativeSrc": "13304:20:7",
																"nodeType": "YulFunctionCall",
																"src": "13304:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13299:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "13299:1:7"
																}
															]
														},
														{
															"nativeSrc": "13333:28:7",
															"nodeType": "YulVariableDeclaration",
															"src": "13333:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13356:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "13356:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13359:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "13359:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "13352:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13352:3:7"
																},
																"nativeSrc": "13352:9:7",
																"nodeType": "YulFunctionCall",
																"src": "13352:9:7"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "13337:11:7",
																	"nodeType": "YulTypedName",
																	"src": "13337:11:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "13370:41:7",
															"nodeType": "YulAssignment",
															"src": "13370:41:7",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "13399:11:7",
																		"nodeType": "YulIdentifier",
																		"src": "13399:11:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13381:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "13381:17:7"
																},
																"nativeSrc": "13381:30:7",
																"nodeType": "YulFunctionCall",
																"src": "13381:30:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "13370:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "13370:7:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13588:22:7",
																"nodeType": "YulBlock",
																"src": "13588:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13590:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "13590:16:7"
																			},
																			"nativeSrc": "13590:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "13590:18:7"
																		},
																		"nativeSrc": "13590:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "13590:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "13521:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "13521:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "13514:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "13514:6:7"
																				},
																				"nativeSrc": "13514:9:7",
																				"nodeType": "YulFunctionCall",
																				"src": "13514:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "13544:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "13544:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "13551:7:7",
																								"nodeType": "YulIdentifier",
																								"src": "13551:7:7"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "13560:1:7",
																								"nodeType": "YulIdentifier",
																								"src": "13560:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "13547:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "13547:3:7"
																						},
																						"nativeSrc": "13547:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "13547:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "13541:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "13541:2:7"
																				},
																				"nativeSrc": "13541:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "13541:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "13494:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "13494:2:7"
																		},
																		"nativeSrc": "13494:83:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13494:83:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13474:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13474:6:7"
																},
																"nativeSrc": "13474:113:7",
																"nodeType": "YulFunctionCall",
																"src": "13474:113:7"
															},
															"nativeSrc": "13471:139:7",
															"nodeType": "YulIf",
															"src": "13471:139:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "13207:410:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13238:1:7",
														"nodeType": "YulTypedName",
														"src": "13238:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13241:1:7",
														"nodeType": "YulTypedName",
														"src": "13241:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "13247:7:7",
														"nodeType": "YulTypedName",
														"src": "13247:7:7",
														"type": ""
													}
												],
												"src": "13207:410:7"
											},
											{
												"body": {
													"nativeSrc": "13667:147:7",
													"nodeType": "YulBlock",
													"src": "13667:147:7",
													"statements": [
														{
															"nativeSrc": "13677:25:7",
															"nodeType": "YulAssignment",
															"src": "13677:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13700:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "13700:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13682:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "13682:17:7"
																},
																"nativeSrc": "13682:20:7",
																"nodeType": "YulFunctionCall",
																"src": "13682:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13677:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "13677:1:7"
																}
															]
														},
														{
															"nativeSrc": "13711:25:7",
															"nodeType": "YulAssignment",
															"src": "13711:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13734:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "13734:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13716:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "13716:17:7"
																},
																"nativeSrc": "13716:20:7",
																"nodeType": "YulFunctionCall",
																"src": "13716:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13711:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "13711:1:7"
																}
															]
														},
														{
															"nativeSrc": "13745:16:7",
															"nodeType": "YulAssignment",
															"src": "13745:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13756:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "13756:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13759:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "13759:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13752:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13752:3:7"
																},
																"nativeSrc": "13752:9:7",
																"nodeType": "YulFunctionCall",
																"src": "13752:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "13745:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13745:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13785:22:7",
																"nodeType": "YulBlock",
																"src": "13785:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13787:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "13787:16:7"
																			},
																			"nativeSrc": "13787:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "13787:18:7"
																		},
																		"nativeSrc": "13787:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "13787:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13777:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "13777:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "13780:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13780:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13774:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "13774:2:7"
																},
																"nativeSrc": "13774:10:7",
																"nodeType": "YulFunctionCall",
																"src": "13774:10:7"
															},
															"nativeSrc": "13771:36:7",
															"nodeType": "YulIf",
															"src": "13771:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "13623:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13654:1:7",
														"nodeType": "YulTypedName",
														"src": "13654:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13657:1:7",
														"nodeType": "YulTypedName",
														"src": "13657:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "13663:3:7",
														"nodeType": "YulTypedName",
														"src": "13663:3:7",
														"type": ""
													}
												],
												"src": "13623:191:7"
											},
											{
												"body": {
													"nativeSrc": "13848:152:7",
													"nodeType": "YulBlock",
													"src": "13848:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13865:1:7",
																		"nodeType": "YulLiteral",
																		"src": "13865:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13868:77:7",
																		"nodeType": "YulLiteral",
																		"src": "13868:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13858:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13858:6:7"
																},
																"nativeSrc": "13858:88:7",
																"nodeType": "YulFunctionCall",
																"src": "13858:88:7"
															},
															"nativeSrc": "13858:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "13858:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13962:1:7",
																		"nodeType": "YulLiteral",
																		"src": "13962:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13965:4:7",
																		"nodeType": "YulLiteral",
																		"src": "13965:4:7",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13955:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13955:6:7"
																},
																"nativeSrc": "13955:15:7",
																"nodeType": "YulFunctionCall",
																"src": "13955:15:7"
															},
															"nativeSrc": "13955:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "13955:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13986:1:7",
																		"nodeType": "YulLiteral",
																		"src": "13986:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13989:4:7",
																		"nodeType": "YulLiteral",
																		"src": "13989:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13979:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13979:6:7"
																},
																"nativeSrc": "13979:15:7",
																"nodeType": "YulFunctionCall",
																"src": "13979:15:7"
															},
															"nativeSrc": "13979:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "13979:15:7"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "13820:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "13820:180:7"
											},
											{
												"body": {
													"nativeSrc": "14048:143:7",
													"nodeType": "YulBlock",
													"src": "14048:143:7",
													"statements": [
														{
															"nativeSrc": "14058:25:7",
															"nodeType": "YulAssignment",
															"src": "14058:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14081:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "14081:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14063:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "14063:17:7"
																},
																"nativeSrc": "14063:20:7",
																"nodeType": "YulFunctionCall",
																"src": "14063:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14058:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "14058:1:7"
																}
															]
														},
														{
															"nativeSrc": "14092:25:7",
															"nodeType": "YulAssignment",
															"src": "14092:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14115:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "14115:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14097:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "14097:17:7"
																},
																"nativeSrc": "14097:20:7",
																"nodeType": "YulFunctionCall",
																"src": "14097:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14092:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "14092:1:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14139:22:7",
																"nodeType": "YulBlock",
																"src": "14139:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "14141:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "14141:16:7"
																			},
																			"nativeSrc": "14141:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "14141:18:7"
																		},
																		"nativeSrc": "14141:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "14141:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14136:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "14136:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14129:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14129:6:7"
																},
																"nativeSrc": "14129:9:7",
																"nodeType": "YulFunctionCall",
																"src": "14129:9:7"
															},
															"nativeSrc": "14126:35:7",
															"nodeType": "YulIf",
															"src": "14126:35:7"
														},
														{
															"nativeSrc": "14171:14:7",
															"nodeType": "YulAssignment",
															"src": "14171:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14180:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "14180:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14183:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "14183:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "14176:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14176:3:7"
																},
																"nativeSrc": "14176:9:7",
																"nodeType": "YulFunctionCall",
																"src": "14176:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "14171:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "14171:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "14006:185:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14037:1:7",
														"nodeType": "YulTypedName",
														"src": "14037:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14040:1:7",
														"nodeType": "YulTypedName",
														"src": "14040:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "14046:1:7",
														"nodeType": "YulTypedName",
														"src": "14046:1:7",
														"type": ""
													}
												],
												"src": "14006:185:7"
											},
											{
												"body": {
													"nativeSrc": "14303:51:7",
													"nodeType": "YulBlock",
													"src": "14303:51:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14325:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "14325:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14333:1:7",
																				"nodeType": "YulLiteral",
																				"src": "14333:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14321:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14321:3:7"
																		},
																		"nativeSrc": "14321:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14321:14:7"
																	},
																	{
																		"hexValue": "45787069726564",
																		"kind": "string",
																		"nativeSrc": "14337:9:7",
																		"nodeType": "YulLiteral",
																		"src": "14337:9:7",
																		"type": "",
																		"value": "Expired"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14314:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14314:6:7"
																},
																"nativeSrc": "14314:33:7",
																"nodeType": "YulFunctionCall",
																"src": "14314:33:7"
															},
															"nativeSrc": "14314:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "14314:33:7"
														}
													]
												},
												"name": "store_literal_in_memory_f183c8b0f89612f6f096bf1f0017061404d2019bd0580f7b18bddb8dcc0d7a13",
												"nativeSrc": "14197:157:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14295:6:7",
														"nodeType": "YulTypedName",
														"src": "14295:6:7",
														"type": ""
													}
												],
												"src": "14197:157:7"
											},
											{
												"body": {
													"nativeSrc": "14506:219:7",
													"nodeType": "YulBlock",
													"src": "14506:219:7",
													"statements": [
														{
															"nativeSrc": "14516:73:7",
															"nodeType": "YulAssignment",
															"src": "14516:73:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14582:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "14582:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14587:1:7",
																		"nodeType": "YulLiteral",
																		"src": "14587:1:7",
																		"type": "",
																		"value": "7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14523:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "14523:58:7"
																},
																"nativeSrc": "14523:66:7",
																"nodeType": "YulFunctionCall",
																"src": "14523:66:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14516:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14516:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14687:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "14687:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f183c8b0f89612f6f096bf1f0017061404d2019bd0580f7b18bddb8dcc0d7a13",
																	"nativeSrc": "14598:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "14598:88:7"
																},
																"nativeSrc": "14598:93:7",
																"nodeType": "YulFunctionCall",
																"src": "14598:93:7"
															},
															"nativeSrc": "14598:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "14598:93:7"
														},
														{
															"nativeSrc": "14700:19:7",
															"nodeType": "YulAssignment",
															"src": "14700:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14711:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "14711:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14716:2:7",
																		"nodeType": "YulLiteral",
																		"src": "14716:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14707:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14707:3:7"
																},
																"nativeSrc": "14707:12:7",
																"nodeType": "YulFunctionCall",
																"src": "14707:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14700:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14700:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f183c8b0f89612f6f096bf1f0017061404d2019bd0580f7b18bddb8dcc0d7a13_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14360:365:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14494:3:7",
														"nodeType": "YulTypedName",
														"src": "14494:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14502:3:7",
														"nodeType": "YulTypedName",
														"src": "14502:3:7",
														"type": ""
													}
												],
												"src": "14360:365:7"
											},
											{
												"body": {
													"nativeSrc": "14902:248:7",
													"nodeType": "YulBlock",
													"src": "14902:248:7",
													"statements": [
														{
															"nativeSrc": "14912:26:7",
															"nodeType": "YulAssignment",
															"src": "14912:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14924:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "14924:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14935:2:7",
																		"nodeType": "YulLiteral",
																		"src": "14935:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14920:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14920:3:7"
																},
																"nativeSrc": "14920:18:7",
																"nodeType": "YulFunctionCall",
																"src": "14920:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14912:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "14912:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14959:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "14959:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14970:1:7",
																				"nodeType": "YulLiteral",
																				"src": "14970:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14955:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14955:3:7"
																		},
																		"nativeSrc": "14955:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14955:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14978:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "14978:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14984:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "14984:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14974:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14974:3:7"
																		},
																		"nativeSrc": "14974:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14974:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14948:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14948:6:7"
																},
																"nativeSrc": "14948:47:7",
																"nodeType": "YulFunctionCall",
																"src": "14948:47:7"
															},
															"nativeSrc": "14948:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "14948:47:7"
														},
														{
															"nativeSrc": "15004:139:7",
															"nodeType": "YulAssignment",
															"src": "15004:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15138:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "15138:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f183c8b0f89612f6f096bf1f0017061404d2019bd0580f7b18bddb8dcc0d7a13_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15012:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "15012:124:7"
																},
																"nativeSrc": "15012:131:7",
																"nodeType": "YulFunctionCall",
																"src": "15012:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15004:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "15004:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f183c8b0f89612f6f096bf1f0017061404d2019bd0580f7b18bddb8dcc0d7a13__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14731:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14882:9:7",
														"nodeType": "YulTypedName",
														"src": "14882:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14897:4:7",
														"nodeType": "YulTypedName",
														"src": "14897:4:7",
														"type": ""
													}
												],
												"src": "14731:419:7"
											},
											{
												"body": {
													"nativeSrc": "15262:71:7",
													"nodeType": "YulBlock",
													"src": "15262:71:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15284:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "15284:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15292:1:7",
																				"nodeType": "YulLiteral",
																				"src": "15292:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15280:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15280:3:7"
																		},
																		"nativeSrc": "15280:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15280:14:7"
																	},
																	{
																		"hexValue": "4f6e6c7920322d746f6b656e207061746820737570706f72746564",
																		"kind": "string",
																		"nativeSrc": "15296:29:7",
																		"nodeType": "YulLiteral",
																		"src": "15296:29:7",
																		"type": "",
																		"value": "Only 2-token path supported"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15273:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15273:6:7"
																},
																"nativeSrc": "15273:53:7",
																"nodeType": "YulFunctionCall",
																"src": "15273:53:7"
															},
															"nativeSrc": "15273:53:7",
															"nodeType": "YulExpressionStatement",
															"src": "15273:53:7"
														}
													]
												},
												"name": "store_literal_in_memory_1999f60f5526a13cb17eac3c04d030e47d1c41d4e55af8ccb43358373aec7eb8",
												"nativeSrc": "15156:177:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15254:6:7",
														"nodeType": "YulTypedName",
														"src": "15254:6:7",
														"type": ""
													}
												],
												"src": "15156:177:7"
											},
											{
												"body": {
													"nativeSrc": "15485:220:7",
													"nodeType": "YulBlock",
													"src": "15485:220:7",
													"statements": [
														{
															"nativeSrc": "15495:74:7",
															"nodeType": "YulAssignment",
															"src": "15495:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15561:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "15561:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15566:2:7",
																		"nodeType": "YulLiteral",
																		"src": "15566:2:7",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15502:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "15502:58:7"
																},
																"nativeSrc": "15502:67:7",
																"nodeType": "YulFunctionCall",
																"src": "15502:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15495:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15495:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15667:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "15667:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1999f60f5526a13cb17eac3c04d030e47d1c41d4e55af8ccb43358373aec7eb8",
																	"nativeSrc": "15578:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "15578:88:7"
																},
																"nativeSrc": "15578:93:7",
																"nodeType": "YulFunctionCall",
																"src": "15578:93:7"
															},
															"nativeSrc": "15578:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "15578:93:7"
														},
														{
															"nativeSrc": "15680:19:7",
															"nodeType": "YulAssignment",
															"src": "15680:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15691:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "15691:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15696:2:7",
																		"nodeType": "YulLiteral",
																		"src": "15696:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15687:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15687:3:7"
																},
																"nativeSrc": "15687:12:7",
																"nodeType": "YulFunctionCall",
																"src": "15687:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15680:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15680:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1999f60f5526a13cb17eac3c04d030e47d1c41d4e55af8ccb43358373aec7eb8_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15339:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15473:3:7",
														"nodeType": "YulTypedName",
														"src": "15473:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15481:3:7",
														"nodeType": "YulTypedName",
														"src": "15481:3:7",
														"type": ""
													}
												],
												"src": "15339:366:7"
											},
											{
												"body": {
													"nativeSrc": "15882:248:7",
													"nodeType": "YulBlock",
													"src": "15882:248:7",
													"statements": [
														{
															"nativeSrc": "15892:26:7",
															"nodeType": "YulAssignment",
															"src": "15892:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15904:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "15904:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15915:2:7",
																		"nodeType": "YulLiteral",
																		"src": "15915:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15900:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15900:3:7"
																},
																"nativeSrc": "15900:18:7",
																"nodeType": "YulFunctionCall",
																"src": "15900:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15892:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "15892:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15939:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "15939:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15950:1:7",
																				"nodeType": "YulLiteral",
																				"src": "15950:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15935:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15935:3:7"
																		},
																		"nativeSrc": "15935:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15935:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15958:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "15958:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15964:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "15964:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15954:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15954:3:7"
																		},
																		"nativeSrc": "15954:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15954:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15928:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15928:6:7"
																},
																"nativeSrc": "15928:47:7",
																"nodeType": "YulFunctionCall",
																"src": "15928:47:7"
															},
															"nativeSrc": "15928:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "15928:47:7"
														},
														{
															"nativeSrc": "15984:139:7",
															"nodeType": "YulAssignment",
															"src": "15984:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16118:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "16118:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1999f60f5526a13cb17eac3c04d030e47d1c41d4e55af8ccb43358373aec7eb8_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15992:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "15992:124:7"
																},
																"nativeSrc": "15992:131:7",
																"nodeType": "YulFunctionCall",
																"src": "15992:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15984:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "15984:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1999f60f5526a13cb17eac3c04d030e47d1c41d4e55af8ccb43358373aec7eb8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15711:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15862:9:7",
														"nodeType": "YulTypedName",
														"src": "15862:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15877:4:7",
														"nodeType": "YulTypedName",
														"src": "15877:4:7",
														"type": ""
													}
												],
												"src": "15711:419:7"
											},
											{
												"body": {
													"nativeSrc": "16164:152:7",
													"nodeType": "YulBlock",
													"src": "16164:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16181:1:7",
																		"nodeType": "YulLiteral",
																		"src": "16181:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16184:77:7",
																		"nodeType": "YulLiteral",
																		"src": "16184:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16174:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "16174:6:7"
																},
																"nativeSrc": "16174:88:7",
																"nodeType": "YulFunctionCall",
																"src": "16174:88:7"
															},
															"nativeSrc": "16174:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "16174:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16278:1:7",
																		"nodeType": "YulLiteral",
																		"src": "16278:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16281:4:7",
																		"nodeType": "YulLiteral",
																		"src": "16281:4:7",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16271:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "16271:6:7"
																},
																"nativeSrc": "16271:15:7",
																"nodeType": "YulFunctionCall",
																"src": "16271:15:7"
															},
															"nativeSrc": "16271:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "16271:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16302:1:7",
																		"nodeType": "YulLiteral",
																		"src": "16302:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16305:4:7",
																		"nodeType": "YulLiteral",
																		"src": "16305:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "16295:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "16295:6:7"
																},
																"nativeSrc": "16295:15:7",
																"nodeType": "YulFunctionCall",
																"src": "16295:15:7"
															},
															"nativeSrc": "16295:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "16295:15:7"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "16136:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "16136:180:7"
											},
											{
												"body": {
													"nativeSrc": "16388:263:7",
													"nodeType": "YulBlock",
													"src": "16388:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "16434:83:7",
																"nodeType": "YulBlock",
																"src": "16434:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "16436:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "16436:77:7"
																			},
																			"nativeSrc": "16436:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "16436:79:7"
																		},
																		"nativeSrc": "16436:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "16436:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16409:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "16409:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16418:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "16418:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16405:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "16405:3:7"
																		},
																		"nativeSrc": "16405:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16405:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16430:2:7",
																		"nodeType": "YulLiteral",
																		"src": "16430:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "16401:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16401:3:7"
																},
																"nativeSrc": "16401:32:7",
																"nodeType": "YulFunctionCall",
																"src": "16401:32:7"
															},
															"nativeSrc": "16398:119:7",
															"nodeType": "YulIf",
															"src": "16398:119:7"
														},
														{
															"nativeSrc": "16527:117:7",
															"nodeType": "YulBlock",
															"src": "16527:117:7",
															"statements": [
																{
																	"nativeSrc": "16542:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16542:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16556:1:7",
																		"nodeType": "YulLiteral",
																		"src": "16556:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16546:6:7",
																			"nodeType": "YulTypedName",
																			"src": "16546:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16571:63:7",
																	"nodeType": "YulAssignment",
																	"src": "16571:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16606:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "16606:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16617:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "16617:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16602:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "16602:3:7"
																				},
																				"nativeSrc": "16602:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "16602:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16626:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "16626:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "16581:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "16581:20:7"
																		},
																		"nativeSrc": "16581:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16581:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "16571:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "16571:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "16322:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16358:9:7",
														"nodeType": "YulTypedName",
														"src": "16358:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "16369:7:7",
														"nodeType": "YulTypedName",
														"src": "16369:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "16381:6:7",
														"nodeType": "YulTypedName",
														"src": "16381:6:7",
														"type": ""
													}
												],
												"src": "16322:329:7"
											},
											{
												"body": {
													"nativeSrc": "16763:63:7",
													"nodeType": "YulBlock",
													"src": "16763:63:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16785:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "16785:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16793:1:7",
																				"nodeType": "YulLiteral",
																				"src": "16793:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16781:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "16781:3:7"
																		},
																		"nativeSrc": "16781:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16781:14:7"
																	},
																	{
																		"hexValue": "496e73756666696369656e74206f7574707574",
																		"kind": "string",
																		"nativeSrc": "16797:21:7",
																		"nodeType": "YulLiteral",
																		"src": "16797:21:7",
																		"type": "",
																		"value": "Insufficient output"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16774:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "16774:6:7"
																},
																"nativeSrc": "16774:45:7",
																"nodeType": "YulFunctionCall",
																"src": "16774:45:7"
															},
															"nativeSrc": "16774:45:7",
															"nodeType": "YulExpressionStatement",
															"src": "16774:45:7"
														}
													]
												},
												"name": "store_literal_in_memory_ffebb6789a62ed60836fc38e566e8cbcff27ebb3acadee53ee5da9825f1b14e1",
												"nativeSrc": "16657:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16755:6:7",
														"nodeType": "YulTypedName",
														"src": "16755:6:7",
														"type": ""
													}
												],
												"src": "16657:169:7"
											},
											{
												"body": {
													"nativeSrc": "16978:220:7",
													"nodeType": "YulBlock",
													"src": "16978:220:7",
													"statements": [
														{
															"nativeSrc": "16988:74:7",
															"nodeType": "YulAssignment",
															"src": "16988:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17054:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "17054:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17059:2:7",
																		"nodeType": "YulLiteral",
																		"src": "17059:2:7",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16995:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "16995:58:7"
																},
																"nativeSrc": "16995:67:7",
																"nodeType": "YulFunctionCall",
																"src": "16995:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16988:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16988:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17160:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "17160:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ffebb6789a62ed60836fc38e566e8cbcff27ebb3acadee53ee5da9825f1b14e1",
																	"nativeSrc": "17071:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "17071:88:7"
																},
																"nativeSrc": "17071:93:7",
																"nodeType": "YulFunctionCall",
																"src": "17071:93:7"
															},
															"nativeSrc": "17071:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "17071:93:7"
														},
														{
															"nativeSrc": "17173:19:7",
															"nodeType": "YulAssignment",
															"src": "17173:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17184:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "17184:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17189:2:7",
																		"nodeType": "YulLiteral",
																		"src": "17189:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17180:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "17180:3:7"
																},
																"nativeSrc": "17180:12:7",
																"nodeType": "YulFunctionCall",
																"src": "17180:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17173:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "17173:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ffebb6789a62ed60836fc38e566e8cbcff27ebb3acadee53ee5da9825f1b14e1_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16832:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16966:3:7",
														"nodeType": "YulTypedName",
														"src": "16966:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16974:3:7",
														"nodeType": "YulTypedName",
														"src": "16974:3:7",
														"type": ""
													}
												],
												"src": "16832:366:7"
											},
											{
												"body": {
													"nativeSrc": "17375:248:7",
													"nodeType": "YulBlock",
													"src": "17375:248:7",
													"statements": [
														{
															"nativeSrc": "17385:26:7",
															"nodeType": "YulAssignment",
															"src": "17385:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17397:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "17397:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17408:2:7",
																		"nodeType": "YulLiteral",
																		"src": "17408:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17393:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "17393:3:7"
																},
																"nativeSrc": "17393:18:7",
																"nodeType": "YulFunctionCall",
																"src": "17393:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17385:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "17385:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17432:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "17432:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17443:1:7",
																				"nodeType": "YulLiteral",
																				"src": "17443:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17428:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "17428:3:7"
																		},
																		"nativeSrc": "17428:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17428:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17451:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "17451:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17457:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "17457:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17447:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "17447:3:7"
																		},
																		"nativeSrc": "17447:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17447:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17421:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "17421:6:7"
																},
																"nativeSrc": "17421:47:7",
																"nodeType": "YulFunctionCall",
																"src": "17421:47:7"
															},
															"nativeSrc": "17421:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "17421:47:7"
														},
														{
															"nativeSrc": "17477:139:7",
															"nodeType": "YulAssignment",
															"src": "17477:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17611:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "17611:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ffebb6789a62ed60836fc38e566e8cbcff27ebb3acadee53ee5da9825f1b14e1_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17485:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "17485:124:7"
																},
																"nativeSrc": "17485:131:7",
																"nodeType": "YulFunctionCall",
																"src": "17485:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17477:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "17477:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ffebb6789a62ed60836fc38e566e8cbcff27ebb3acadee53ee5da9825f1b14e1__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17204:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17355:9:7",
														"nodeType": "YulTypedName",
														"src": "17355:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17370:4:7",
														"nodeType": "YulTypedName",
														"src": "17370:4:7",
														"type": ""
													}
												],
												"src": "17204:419:7"
											},
											{
												"body": {
													"nativeSrc": "17657:152:7",
													"nodeType": "YulBlock",
													"src": "17657:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17674:1:7",
																		"nodeType": "YulLiteral",
																		"src": "17674:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17677:77:7",
																		"nodeType": "YulLiteral",
																		"src": "17677:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17667:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "17667:6:7"
																},
																"nativeSrc": "17667:88:7",
																"nodeType": "YulFunctionCall",
																"src": "17667:88:7"
															},
															"nativeSrc": "17667:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "17667:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17771:1:7",
																		"nodeType": "YulLiteral",
																		"src": "17771:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17774:4:7",
																		"nodeType": "YulLiteral",
																		"src": "17774:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17764:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "17764:6:7"
																},
																"nativeSrc": "17764:15:7",
																"nodeType": "YulFunctionCall",
																"src": "17764:15:7"
															},
															"nativeSrc": "17764:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "17764:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17795:1:7",
																		"nodeType": "YulLiteral",
																		"src": "17795:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17798:4:7",
																		"nodeType": "YulLiteral",
																		"src": "17798:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "17788:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "17788:6:7"
																},
																"nativeSrc": "17788:15:7",
																"nodeType": "YulFunctionCall",
																"src": "17788:15:7"
															},
															"nativeSrc": "17788:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "17788:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "17629:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "17629:180:7"
											},
											{
												"body": {
													"nativeSrc": "17921:55:7",
													"nodeType": "YulBlock",
													"src": "17921:55:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17943:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "17943:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17951:1:7",
																				"nodeType": "YulLiteral",
																				"src": "17951:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17939:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "17939:3:7"
																		},
																		"nativeSrc": "17939:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17939:14:7"
																	},
																	{
																		"hexValue": "4e6f207265736572766573",
																		"kind": "string",
																		"nativeSrc": "17955:13:7",
																		"nodeType": "YulLiteral",
																		"src": "17955:13:7",
																		"type": "",
																		"value": "No reserves"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17932:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "17932:6:7"
																},
																"nativeSrc": "17932:37:7",
																"nodeType": "YulFunctionCall",
																"src": "17932:37:7"
															},
															"nativeSrc": "17932:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "17932:37:7"
														}
													]
												},
												"name": "store_literal_in_memory_f8d6698763d2d0ff1e31fa7f43b504a63f09c2932b87b9842c093ff74de4d766",
												"nativeSrc": "17815:161:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17913:6:7",
														"nodeType": "YulTypedName",
														"src": "17913:6:7",
														"type": ""
													}
												],
												"src": "17815:161:7"
											},
											{
												"body": {
													"nativeSrc": "18128:220:7",
													"nodeType": "YulBlock",
													"src": "18128:220:7",
													"statements": [
														{
															"nativeSrc": "18138:74:7",
															"nodeType": "YulAssignment",
															"src": "18138:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18204:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "18204:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18209:2:7",
																		"nodeType": "YulLiteral",
																		"src": "18209:2:7",
																		"type": "",
																		"value": "11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18145:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "18145:58:7"
																},
																"nativeSrc": "18145:67:7",
																"nodeType": "YulFunctionCall",
																"src": "18145:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18138:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "18138:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18310:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "18310:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f8d6698763d2d0ff1e31fa7f43b504a63f09c2932b87b9842c093ff74de4d766",
																	"nativeSrc": "18221:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "18221:88:7"
																},
																"nativeSrc": "18221:93:7",
																"nodeType": "YulFunctionCall",
																"src": "18221:93:7"
															},
															"nativeSrc": "18221:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "18221:93:7"
														},
														{
															"nativeSrc": "18323:19:7",
															"nodeType": "YulAssignment",
															"src": "18323:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18334:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "18334:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18339:2:7",
																		"nodeType": "YulLiteral",
																		"src": "18339:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18330:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "18330:3:7"
																},
																"nativeSrc": "18330:12:7",
																"nodeType": "YulFunctionCall",
																"src": "18330:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18323:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "18323:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f8d6698763d2d0ff1e31fa7f43b504a63f09c2932b87b9842c093ff74de4d766_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17982:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18116:3:7",
														"nodeType": "YulTypedName",
														"src": "18116:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18124:3:7",
														"nodeType": "YulTypedName",
														"src": "18124:3:7",
														"type": ""
													}
												],
												"src": "17982:366:7"
											},
											{
												"body": {
													"nativeSrc": "18525:248:7",
													"nodeType": "YulBlock",
													"src": "18525:248:7",
													"statements": [
														{
															"nativeSrc": "18535:26:7",
															"nodeType": "YulAssignment",
															"src": "18535:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18547:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "18547:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18558:2:7",
																		"nodeType": "YulLiteral",
																		"src": "18558:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18543:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "18543:3:7"
																},
																"nativeSrc": "18543:18:7",
																"nodeType": "YulFunctionCall",
																"src": "18543:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18535:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "18535:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18582:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "18582:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18593:1:7",
																				"nodeType": "YulLiteral",
																				"src": "18593:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18578:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "18578:3:7"
																		},
																		"nativeSrc": "18578:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "18578:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18601:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "18601:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18607:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "18607:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18597:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "18597:3:7"
																		},
																		"nativeSrc": "18597:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "18597:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18571:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "18571:6:7"
																},
																"nativeSrc": "18571:47:7",
																"nodeType": "YulFunctionCall",
																"src": "18571:47:7"
															},
															"nativeSrc": "18571:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "18571:47:7"
														},
														{
															"nativeSrc": "18627:139:7",
															"nodeType": "YulAssignment",
															"src": "18627:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18761:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "18761:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f8d6698763d2d0ff1e31fa7f43b504a63f09c2932b87b9842c093ff74de4d766_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18635:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "18635:124:7"
																},
																"nativeSrc": "18635:131:7",
																"nodeType": "YulFunctionCall",
																"src": "18635:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18627:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "18627:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8d6698763d2d0ff1e31fa7f43b504a63f09c2932b87b9842c093ff74de4d766__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18354:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18505:9:7",
														"nodeType": "YulTypedName",
														"src": "18505:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18520:4:7",
														"nodeType": "YulTypedName",
														"src": "18520:4:7",
														"type": ""
													}
												],
												"src": "18354:419:7"
											},
											{
												"body": {
													"nativeSrc": "18885:56:7",
													"nodeType": "YulBlock",
													"src": "18885:56:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18907:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "18907:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18915:1:7",
																				"nodeType": "YulLiteral",
																				"src": "18915:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18903:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "18903:3:7"
																		},
																		"nativeSrc": "18903:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "18903:14:7"
																	},
																	{
																		"hexValue": "4e6f206c6971756964697479",
																		"kind": "string",
																		"nativeSrc": "18919:14:7",
																		"nodeType": "YulLiteral",
																		"src": "18919:14:7",
																		"type": "",
																		"value": "No liquidity"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18896:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "18896:6:7"
																},
																"nativeSrc": "18896:38:7",
																"nodeType": "YulFunctionCall",
																"src": "18896:38:7"
															},
															"nativeSrc": "18896:38:7",
															"nodeType": "YulExpressionStatement",
															"src": "18896:38:7"
														}
													]
												},
												"name": "store_literal_in_memory_379a432f00aa43993bfbf4e01492a8eab5138dcd2e395864ede728644390fc31",
												"nativeSrc": "18779:162:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18877:6:7",
														"nodeType": "YulTypedName",
														"src": "18877:6:7",
														"type": ""
													}
												],
												"src": "18779:162:7"
											},
											{
												"body": {
													"nativeSrc": "19093:220:7",
													"nodeType": "YulBlock",
													"src": "19093:220:7",
													"statements": [
														{
															"nativeSrc": "19103:74:7",
															"nodeType": "YulAssignment",
															"src": "19103:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19169:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "19169:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19174:2:7",
																		"nodeType": "YulLiteral",
																		"src": "19174:2:7",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19110:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "19110:58:7"
																},
																"nativeSrc": "19110:67:7",
																"nodeType": "YulFunctionCall",
																"src": "19110:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19103:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "19103:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19275:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "19275:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_379a432f00aa43993bfbf4e01492a8eab5138dcd2e395864ede728644390fc31",
																	"nativeSrc": "19186:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "19186:88:7"
																},
																"nativeSrc": "19186:93:7",
																"nodeType": "YulFunctionCall",
																"src": "19186:93:7"
															},
															"nativeSrc": "19186:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "19186:93:7"
														},
														{
															"nativeSrc": "19288:19:7",
															"nodeType": "YulAssignment",
															"src": "19288:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19299:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "19299:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19304:2:7",
																		"nodeType": "YulLiteral",
																		"src": "19304:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19295:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "19295:3:7"
																},
																"nativeSrc": "19295:12:7",
																"nodeType": "YulFunctionCall",
																"src": "19295:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19288:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "19288:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_379a432f00aa43993bfbf4e01492a8eab5138dcd2e395864ede728644390fc31_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18947:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19081:3:7",
														"nodeType": "YulTypedName",
														"src": "19081:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19089:3:7",
														"nodeType": "YulTypedName",
														"src": "19089:3:7",
														"type": ""
													}
												],
												"src": "18947:366:7"
											},
											{
												"body": {
													"nativeSrc": "19490:248:7",
													"nodeType": "YulBlock",
													"src": "19490:248:7",
													"statements": [
														{
															"nativeSrc": "19500:26:7",
															"nodeType": "YulAssignment",
															"src": "19500:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19512:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "19512:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19523:2:7",
																		"nodeType": "YulLiteral",
																		"src": "19523:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19508:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "19508:3:7"
																},
																"nativeSrc": "19508:18:7",
																"nodeType": "YulFunctionCall",
																"src": "19508:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19500:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "19500:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19547:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "19547:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19558:1:7",
																				"nodeType": "YulLiteral",
																				"src": "19558:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19543:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "19543:3:7"
																		},
																		"nativeSrc": "19543:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19543:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19566:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "19566:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19572:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "19572:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19562:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "19562:3:7"
																		},
																		"nativeSrc": "19562:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19562:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19536:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "19536:6:7"
																},
																"nativeSrc": "19536:47:7",
																"nodeType": "YulFunctionCall",
																"src": "19536:47:7"
															},
															"nativeSrc": "19536:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "19536:47:7"
														},
														{
															"nativeSrc": "19592:139:7",
															"nodeType": "YulAssignment",
															"src": "19592:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19726:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "19726:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_379a432f00aa43993bfbf4e01492a8eab5138dcd2e395864ede728644390fc31_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19600:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "19600:124:7"
																},
																"nativeSrc": "19600:131:7",
																"nodeType": "YulFunctionCall",
																"src": "19600:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19592:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "19592:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_379a432f00aa43993bfbf4e01492a8eab5138dcd2e395864ede728644390fc31__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19319:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19470:9:7",
														"nodeType": "YulTypedName",
														"src": "19470:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19485:4:7",
														"nodeType": "YulTypedName",
														"src": "19485:4:7",
														"type": ""
													}
												],
												"src": "19319:419:7"
											},
											{
												"body": {
													"nativeSrc": "19850:52:7",
													"nodeType": "YulBlock",
													"src": "19850:52:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19872:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "19872:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19880:1:7",
																				"nodeType": "YulLiteral",
																				"src": "19880:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19868:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "19868:3:7"
																		},
																		"nativeSrc": "19868:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19868:14:7"
																	},
																	{
																		"hexValue": "536c697070616765",
																		"kind": "string",
																		"nativeSrc": "19884:10:7",
																		"nodeType": "YulLiteral",
																		"src": "19884:10:7",
																		"type": "",
																		"value": "Slippage"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19861:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "19861:6:7"
																},
																"nativeSrc": "19861:34:7",
																"nodeType": "YulFunctionCall",
																"src": "19861:34:7"
															},
															"nativeSrc": "19861:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "19861:34:7"
														}
													]
												},
												"name": "store_literal_in_memory_fb87c09e63b5ee5d76fa5ada5f7c2fd9de8980c2964f73a791eaef9c4602f114",
												"nativeSrc": "19744:158:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19842:6:7",
														"nodeType": "YulTypedName",
														"src": "19842:6:7",
														"type": ""
													}
												],
												"src": "19744:158:7"
											},
											{
												"body": {
													"nativeSrc": "20054:219:7",
													"nodeType": "YulBlock",
													"src": "20054:219:7",
													"statements": [
														{
															"nativeSrc": "20064:73:7",
															"nodeType": "YulAssignment",
															"src": "20064:73:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20130:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "20130:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20135:1:7",
																		"nodeType": "YulLiteral",
																		"src": "20135:1:7",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20071:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "20071:58:7"
																},
																"nativeSrc": "20071:66:7",
																"nodeType": "YulFunctionCall",
																"src": "20071:66:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20064:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "20064:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20235:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "20235:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fb87c09e63b5ee5d76fa5ada5f7c2fd9de8980c2964f73a791eaef9c4602f114",
																	"nativeSrc": "20146:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "20146:88:7"
																},
																"nativeSrc": "20146:93:7",
																"nodeType": "YulFunctionCall",
																"src": "20146:93:7"
															},
															"nativeSrc": "20146:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "20146:93:7"
														},
														{
															"nativeSrc": "20248:19:7",
															"nodeType": "YulAssignment",
															"src": "20248:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20259:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "20259:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20264:2:7",
																		"nodeType": "YulLiteral",
																		"src": "20264:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20255:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "20255:3:7"
																},
																"nativeSrc": "20255:12:7",
																"nodeType": "YulFunctionCall",
																"src": "20255:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20248:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "20248:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fb87c09e63b5ee5d76fa5ada5f7c2fd9de8980c2964f73a791eaef9c4602f114_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19908:365:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20042:3:7",
														"nodeType": "YulTypedName",
														"src": "20042:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20050:3:7",
														"nodeType": "YulTypedName",
														"src": "20050:3:7",
														"type": ""
													}
												],
												"src": "19908:365:7"
											},
											{
												"body": {
													"nativeSrc": "20450:248:7",
													"nodeType": "YulBlock",
													"src": "20450:248:7",
													"statements": [
														{
															"nativeSrc": "20460:26:7",
															"nodeType": "YulAssignment",
															"src": "20460:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20472:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "20472:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20483:2:7",
																		"nodeType": "YulLiteral",
																		"src": "20483:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20468:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "20468:3:7"
																},
																"nativeSrc": "20468:18:7",
																"nodeType": "YulFunctionCall",
																"src": "20468:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20460:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "20460:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20507:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "20507:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20518:1:7",
																				"nodeType": "YulLiteral",
																				"src": "20518:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20503:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "20503:3:7"
																		},
																		"nativeSrc": "20503:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "20503:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20526:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "20526:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20532:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "20532:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20522:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "20522:3:7"
																		},
																		"nativeSrc": "20522:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "20522:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20496:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "20496:6:7"
																},
																"nativeSrc": "20496:47:7",
																"nodeType": "YulFunctionCall",
																"src": "20496:47:7"
															},
															"nativeSrc": "20496:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "20496:47:7"
														},
														{
															"nativeSrc": "20552:139:7",
															"nodeType": "YulAssignment",
															"src": "20552:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "20686:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "20686:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fb87c09e63b5ee5d76fa5ada5f7c2fd9de8980c2964f73a791eaef9c4602f114_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20560:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "20560:124:7"
																},
																"nativeSrc": "20560:131:7",
																"nodeType": "YulFunctionCall",
																"src": "20560:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20552:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "20552:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fb87c09e63b5ee5d76fa5ada5f7c2fd9de8980c2964f73a791eaef9c4602f114__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20279:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20430:9:7",
														"nodeType": "YulTypedName",
														"src": "20430:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20445:4:7",
														"nodeType": "YulTypedName",
														"src": "20445:4:7",
														"type": ""
													}
												],
												"src": "20279:419:7"
											},
											{
												"body": {
													"nativeSrc": "20749:149:7",
													"nodeType": "YulBlock",
													"src": "20749:149:7",
													"statements": [
														{
															"nativeSrc": "20759:25:7",
															"nodeType": "YulAssignment",
															"src": "20759:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "20782:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "20782:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "20764:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "20764:17:7"
																},
																"nativeSrc": "20764:20:7",
																"nodeType": "YulFunctionCall",
																"src": "20764:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "20759:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "20759:1:7"
																}
															]
														},
														{
															"nativeSrc": "20793:25:7",
															"nodeType": "YulAssignment",
															"src": "20793:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "20816:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "20816:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "20798:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "20798:17:7"
																},
																"nativeSrc": "20798:20:7",
																"nodeType": "YulFunctionCall",
																"src": "20798:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "20793:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "20793:1:7"
																}
															]
														},
														{
															"nativeSrc": "20827:17:7",
															"nodeType": "YulAssignment",
															"src": "20827:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "20839:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "20839:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "20842:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "20842:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "20835:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "20835:3:7"
																},
																"nativeSrc": "20835:9:7",
																"nodeType": "YulFunctionCall",
																"src": "20835:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "20827:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "20827:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "20869:22:7",
																"nodeType": "YulBlock",
																"src": "20869:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "20871:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "20871:16:7"
																			},
																			"nativeSrc": "20871:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "20871:18:7"
																		},
																		"nativeSrc": "20871:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "20871:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "20860:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "20860:4:7"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "20866:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "20866:1:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "20857:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "20857:2:7"
																},
																"nativeSrc": "20857:11:7",
																"nodeType": "YulFunctionCall",
																"src": "20857:11:7"
															},
															"nativeSrc": "20854:37:7",
															"nodeType": "YulIf",
															"src": "20854:37:7"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "20704:194:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "20735:1:7",
														"nodeType": "YulTypedName",
														"src": "20735:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "20738:1:7",
														"nodeType": "YulTypedName",
														"src": "20738:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "20744:4:7",
														"nodeType": "YulTypedName",
														"src": "20744:4:7",
														"type": ""
													}
												],
												"src": "20704:194:7"
											},
											{
												"body": {
													"nativeSrc": "20949:178:7",
													"nodeType": "YulBlock",
													"src": "20949:178:7",
													"statements": [
														{
															"nativeSrc": "20959:25:7",
															"nodeType": "YulAssignment",
															"src": "20959:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "20982:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "20982:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint112",
																	"nativeSrc": "20964:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "20964:17:7"
																},
																"nativeSrc": "20964:20:7",
																"nodeType": "YulFunctionCall",
																"src": "20964:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "20959:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "20959:1:7"
																}
															]
														},
														{
															"nativeSrc": "20993:25:7",
															"nodeType": "YulAssignment",
															"src": "20993:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "21016:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "21016:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint112",
																	"nativeSrc": "20998:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "20998:17:7"
																},
																"nativeSrc": "20998:20:7",
																"nodeType": "YulFunctionCall",
																"src": "20998:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "20993:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "20993:1:7"
																}
															]
														},
														{
															"nativeSrc": "21027:17:7",
															"nodeType": "YulAssignment",
															"src": "21027:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "21039:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "21039:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "21042:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "21042:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "21035:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "21035:3:7"
																},
																"nativeSrc": "21035:9:7",
																"nodeType": "YulFunctionCall",
																"src": "21035:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "21027:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "21027:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "21098:22:7",
																"nodeType": "YulBlock",
																"src": "21098:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "21100:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "21100:16:7"
																			},
																			"nativeSrc": "21100:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "21100:18:7"
																		},
																		"nativeSrc": "21100:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "21100:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "21060:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "21060:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21066:30:7",
																		"nodeType": "YulLiteral",
																		"src": "21066:30:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "21057:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "21057:2:7"
																},
																"nativeSrc": "21057:40:7",
																"nodeType": "YulFunctionCall",
																"src": "21057:40:7"
															},
															"nativeSrc": "21054:66:7",
															"nodeType": "YulIf",
															"src": "21054:66:7"
														}
													]
												},
												"name": "checked_sub_t_uint112",
												"nativeSrc": "20904:223:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "20935:1:7",
														"nodeType": "YulTypedName",
														"src": "20935:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "20938:1:7",
														"nodeType": "YulTypedName",
														"src": "20938:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "20944:4:7",
														"nodeType": "YulTypedName",
														"src": "20944:4:7",
														"type": ""
													}
												],
												"src": "20904:223:7"
											},
											{
												"body": {
													"nativeSrc": "21177:176:7",
													"nodeType": "YulBlock",
													"src": "21177:176:7",
													"statements": [
														{
															"nativeSrc": "21187:25:7",
															"nodeType": "YulAssignment",
															"src": "21187:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "21210:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "21210:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint112",
																	"nativeSrc": "21192:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "21192:17:7"
																},
																"nativeSrc": "21192:20:7",
																"nodeType": "YulFunctionCall",
																"src": "21192:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "21187:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "21187:1:7"
																}
															]
														},
														{
															"nativeSrc": "21221:25:7",
															"nodeType": "YulAssignment",
															"src": "21221:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "21244:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "21244:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint112",
																	"nativeSrc": "21226:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "21226:17:7"
																},
																"nativeSrc": "21226:20:7",
																"nodeType": "YulFunctionCall",
																"src": "21226:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "21221:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "21221:1:7"
																}
															]
														},
														{
															"nativeSrc": "21255:16:7",
															"nodeType": "YulAssignment",
															"src": "21255:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "21266:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "21266:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "21269:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "21269:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21262:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "21262:3:7"
																},
																"nativeSrc": "21262:9:7",
																"nodeType": "YulFunctionCall",
																"src": "21262:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "21255:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "21255:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "21324:22:7",
																"nodeType": "YulBlock",
																"src": "21324:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "21326:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "21326:16:7"
																			},
																			"nativeSrc": "21326:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "21326:18:7"
																		},
																		"nativeSrc": "21326:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "21326:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "sum",
																		"nativeSrc": "21287:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "21287:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21292:30:7",
																		"nodeType": "YulLiteral",
																		"src": "21292:30:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "21284:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "21284:2:7"
																},
																"nativeSrc": "21284:39:7",
																"nodeType": "YulFunctionCall",
																"src": "21284:39:7"
															},
															"nativeSrc": "21281:65:7",
															"nodeType": "YulIf",
															"src": "21281:65:7"
														}
													]
												},
												"name": "checked_add_t_uint112",
												"nativeSrc": "21133:220:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "21164:1:7",
														"nodeType": "YulTypedName",
														"src": "21164:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "21167:1:7",
														"nodeType": "YulTypedName",
														"src": "21167:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "21173:3:7",
														"nodeType": "YulTypedName",
														"src": "21173:3:7",
														"type": ""
													}
												],
												"src": "21133:220:7"
											},
											{
												"body": {
													"nativeSrc": "21401:52:7",
													"nodeType": "YulBlock",
													"src": "21401:52:7",
													"statements": [
														{
															"nativeSrc": "21411:35:7",
															"nodeType": "YulAssignment",
															"src": "21411:35:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21436:2:7",
																		"nodeType": "YulLiteral",
																		"src": "21436:2:7",
																		"type": "",
																		"value": "96"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "21440:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "21440:5:7"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "21432:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "21432:3:7"
																},
																"nativeSrc": "21432:14:7",
																"nodeType": "YulFunctionCall",
																"src": "21432:14:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "21411:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "21411:8:7"
																}
															]
														}
													]
												},
												"name": "shift_left_96",
												"nativeSrc": "21359:94:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21382:5:7",
														"nodeType": "YulTypedName",
														"src": "21382:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "21392:8:7",
														"nodeType": "YulTypedName",
														"src": "21392:8:7",
														"type": ""
													}
												],
												"src": "21359:94:7"
											},
											{
												"body": {
													"nativeSrc": "21506:47:7",
													"nodeType": "YulBlock",
													"src": "21506:47:7",
													"statements": [
														{
															"nativeSrc": "21516:31:7",
															"nodeType": "YulAssignment",
															"src": "21516:31:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "21541:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "21541:5:7"
																	}
																],
																"functionName": {
																	"name": "shift_left_96",
																	"nativeSrc": "21527:13:7",
																	"nodeType": "YulIdentifier",
																	"src": "21527:13:7"
																},
																"nativeSrc": "21527:20:7",
																"nodeType": "YulFunctionCall",
																"src": "21527:20:7"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "21516:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "21516:7:7"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_uint160",
												"nativeSrc": "21459:94:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21488:5:7",
														"nodeType": "YulTypedName",
														"src": "21488:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "21498:7:7",
														"nodeType": "YulTypedName",
														"src": "21498:7:7",
														"type": ""
													}
												],
												"src": "21459:94:7"
											},
											{
												"body": {
													"nativeSrc": "21606:53:7",
													"nodeType": "YulBlock",
													"src": "21606:53:7",
													"statements": [
														{
															"nativeSrc": "21616:37:7",
															"nodeType": "YulAssignment",
															"src": "21616:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "21647:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "21647:5:7"
																	}
																],
																"functionName": {
																	"name": "leftAlign_t_uint160",
																	"nativeSrc": "21627:19:7",
																	"nodeType": "YulIdentifier",
																	"src": "21627:19:7"
																},
																"nativeSrc": "21627:26:7",
																"nodeType": "YulFunctionCall",
																"src": "21627:26:7"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "21616:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "21616:7:7"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_address",
												"nativeSrc": "21559:100:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21588:5:7",
														"nodeType": "YulTypedName",
														"src": "21588:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "21598:7:7",
														"nodeType": "YulTypedName",
														"src": "21598:7:7",
														"type": ""
													}
												],
												"src": "21559:100:7"
											},
											{
												"body": {
													"nativeSrc": "21748:74:7",
													"nodeType": "YulBlock",
													"src": "21748:74:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21765:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "21765:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "21808:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "21808:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "21790:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "21790:17:7"
																				},
																				"nativeSrc": "21790:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "21790:24:7"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_address",
																			"nativeSrc": "21770:19:7",
																			"nodeType": "YulIdentifier",
																			"src": "21770:19:7"
																		},
																		"nativeSrc": "21770:45:7",
																		"nodeType": "YulFunctionCall",
																		"src": "21770:45:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21758:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "21758:6:7"
																},
																"nativeSrc": "21758:58:7",
																"nodeType": "YulFunctionCall",
																"src": "21758:58:7"
															},
															"nativeSrc": "21758:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "21758:58:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
												"nativeSrc": "21665:157:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21736:5:7",
														"nodeType": "YulTypedName",
														"src": "21736:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "21743:3:7",
														"nodeType": "YulTypedName",
														"src": "21743:3:7",
														"type": ""
													}
												],
												"src": "21665:157:7"
											},
											{
												"body": {
													"nativeSrc": "21972:253:7",
													"nodeType": "YulBlock",
													"src": "21972:253:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "22045:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "22045:6:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "22054:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "22054:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
																	"nativeSrc": "21983:61:7",
																	"nodeType": "YulIdentifier",
																	"src": "21983:61:7"
																},
																"nativeSrc": "21983:75:7",
																"nodeType": "YulFunctionCall",
																"src": "21983:75:7"
															},
															"nativeSrc": "21983:75:7",
															"nodeType": "YulExpressionStatement",
															"src": "21983:75:7"
														},
														{
															"nativeSrc": "22067:19:7",
															"nodeType": "YulAssignment",
															"src": "22067:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22078:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "22078:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22083:2:7",
																		"nodeType": "YulLiteral",
																		"src": "22083:2:7",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22074:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "22074:3:7"
																},
																"nativeSrc": "22074:12:7",
																"nodeType": "YulFunctionCall",
																"src": "22074:12:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "22067:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "22067:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "22158:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "22158:6:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "22167:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "22167:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
																	"nativeSrc": "22096:61:7",
																	"nodeType": "YulIdentifier",
																	"src": "22096:61:7"
																},
																"nativeSrc": "22096:75:7",
																"nodeType": "YulFunctionCall",
																"src": "22096:75:7"
															},
															"nativeSrc": "22096:75:7",
															"nodeType": "YulExpressionStatement",
															"src": "22096:75:7"
														},
														{
															"nativeSrc": "22180:19:7",
															"nodeType": "YulAssignment",
															"src": "22180:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22191:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "22191:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22196:2:7",
																		"nodeType": "YulLiteral",
																		"src": "22196:2:7",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22187:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "22187:3:7"
																},
																"nativeSrc": "22187:12:7",
																"nodeType": "YulFunctionCall",
																"src": "22187:12:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "22180:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "22180:3:7"
																}
															]
														},
														{
															"nativeSrc": "22209:10:7",
															"nodeType": "YulAssignment",
															"src": "22209:10:7",
															"value": {
																"name": "pos",
																"nativeSrc": "22216:3:7",
																"nodeType": "YulIdentifier",
																"src": "22216:3:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "22209:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "22209:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "21828:397:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "21943:3:7",
														"nodeType": "YulTypedName",
														"src": "21943:3:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "21949:6:7",
														"nodeType": "YulTypedName",
														"src": "21949:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "21957:6:7",
														"nodeType": "YulTypedName",
														"src": "21957:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "21968:3:7",
														"nodeType": "YulTypedName",
														"src": "21968:3:7",
														"type": ""
													}
												],
												"src": "21828:397:7"
											},
											{
												"body": {
													"nativeSrc": "22296:53:7",
													"nodeType": "YulBlock",
													"src": "22296:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22313:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "22313:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "22336:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "22336:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "22318:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "22318:17:7"
																		},
																		"nativeSrc": "22318:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "22318:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22306:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "22306:6:7"
																},
																"nativeSrc": "22306:37:7",
																"nodeType": "YulFunctionCall",
																"src": "22306:37:7"
															},
															"nativeSrc": "22306:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "22306:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "22231:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "22284:5:7",
														"nodeType": "YulTypedName",
														"src": "22284:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "22291:3:7",
														"nodeType": "YulTypedName",
														"src": "22291:3:7",
														"type": ""
													}
												],
												"src": "22231:118:7"
											},
											{
												"body": {
													"nativeSrc": "22481:206:7",
													"nodeType": "YulBlock",
													"src": "22481:206:7",
													"statements": [
														{
															"nativeSrc": "22491:26:7",
															"nodeType": "YulAssignment",
															"src": "22491:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22503:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "22503:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22514:2:7",
																		"nodeType": "YulLiteral",
																		"src": "22514:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22499:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "22499:3:7"
																},
																"nativeSrc": "22499:18:7",
																"nodeType": "YulFunctionCall",
																"src": "22499:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22491:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "22491:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "22571:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "22571:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22584:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "22584:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22595:1:7",
																				"nodeType": "YulLiteral",
																				"src": "22595:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22580:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "22580:3:7"
																		},
																		"nativeSrc": "22580:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "22580:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "22527:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "22527:43:7"
																},
																"nativeSrc": "22527:71:7",
																"nodeType": "YulFunctionCall",
																"src": "22527:71:7"
															},
															"nativeSrc": "22527:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "22527:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "22652:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "22652:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22665:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "22665:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22676:2:7",
																				"nodeType": "YulLiteral",
																				"src": "22676:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22661:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "22661:3:7"
																		},
																		"nativeSrc": "22661:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "22661:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "22608:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "22608:43:7"
																},
																"nativeSrc": "22608:72:7",
																"nodeType": "YulFunctionCall",
																"src": "22608:72:7"
															},
															"nativeSrc": "22608:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "22608:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "22355:332:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22445:9:7",
														"nodeType": "YulTypedName",
														"src": "22445:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "22457:6:7",
														"nodeType": "YulTypedName",
														"src": "22457:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "22465:6:7",
														"nodeType": "YulTypedName",
														"src": "22465:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22476:4:7",
														"nodeType": "YulTypedName",
														"src": "22476:4:7",
														"type": ""
													}
												],
												"src": "22355:332:7"
											},
											{
												"body": {
													"nativeSrc": "22799:58:7",
													"nodeType": "YulBlock",
													"src": "22799:58:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "22821:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "22821:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22829:1:7",
																				"nodeType": "YulLiteral",
																				"src": "22829:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22817:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "22817:3:7"
																		},
																		"nativeSrc": "22817:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "22817:14:7"
																	},
																	{
																		"hexValue": "496e73756666696369656e742042",
																		"kind": "string",
																		"nativeSrc": "22833:16:7",
																		"nodeType": "YulLiteral",
																		"src": "22833:16:7",
																		"type": "",
																		"value": "Insufficient B"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22810:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "22810:6:7"
																},
																"nativeSrc": "22810:40:7",
																"nodeType": "YulFunctionCall",
																"src": "22810:40:7"
															},
															"nativeSrc": "22810:40:7",
															"nodeType": "YulExpressionStatement",
															"src": "22810:40:7"
														}
													]
												},
												"name": "store_literal_in_memory_28ee48a047f51c165a70ae36f179330afc265bf4c05f56e1a1f02c2668dcead2",
												"nativeSrc": "22693:164:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "22791:6:7",
														"nodeType": "YulTypedName",
														"src": "22791:6:7",
														"type": ""
													}
												],
												"src": "22693:164:7"
											},
											{
												"body": {
													"nativeSrc": "23009:220:7",
													"nodeType": "YulBlock",
													"src": "23009:220:7",
													"statements": [
														{
															"nativeSrc": "23019:74:7",
															"nodeType": "YulAssignment",
															"src": "23019:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23085:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "23085:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23090:2:7",
																		"nodeType": "YulLiteral",
																		"src": "23090:2:7",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23026:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "23026:58:7"
																},
																"nativeSrc": "23026:67:7",
																"nodeType": "YulFunctionCall",
																"src": "23026:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "23019:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "23019:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23191:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "23191:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_28ee48a047f51c165a70ae36f179330afc265bf4c05f56e1a1f02c2668dcead2",
																	"nativeSrc": "23102:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "23102:88:7"
																},
																"nativeSrc": "23102:93:7",
																"nodeType": "YulFunctionCall",
																"src": "23102:93:7"
															},
															"nativeSrc": "23102:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "23102:93:7"
														},
														{
															"nativeSrc": "23204:19:7",
															"nodeType": "YulAssignment",
															"src": "23204:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23215:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "23215:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23220:2:7",
																		"nodeType": "YulLiteral",
																		"src": "23220:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23211:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "23211:3:7"
																},
																"nativeSrc": "23211:12:7",
																"nodeType": "YulFunctionCall",
																"src": "23211:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "23204:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "23204:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_28ee48a047f51c165a70ae36f179330afc265bf4c05f56e1a1f02c2668dcead2_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "22863:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "22997:3:7",
														"nodeType": "YulTypedName",
														"src": "22997:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "23005:3:7",
														"nodeType": "YulTypedName",
														"src": "23005:3:7",
														"type": ""
													}
												],
												"src": "22863:366:7"
											},
											{
												"body": {
													"nativeSrc": "23406:248:7",
													"nodeType": "YulBlock",
													"src": "23406:248:7",
													"statements": [
														{
															"nativeSrc": "23416:26:7",
															"nodeType": "YulAssignment",
															"src": "23416:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23428:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "23428:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23439:2:7",
																		"nodeType": "YulLiteral",
																		"src": "23439:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23424:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "23424:3:7"
																},
																"nativeSrc": "23424:18:7",
																"nodeType": "YulFunctionCall",
																"src": "23424:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23416:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "23416:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23463:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "23463:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23474:1:7",
																				"nodeType": "YulLiteral",
																				"src": "23474:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23459:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "23459:3:7"
																		},
																		"nativeSrc": "23459:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "23459:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "23482:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "23482:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "23488:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "23488:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "23478:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "23478:3:7"
																		},
																		"nativeSrc": "23478:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "23478:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23452:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "23452:6:7"
																},
																"nativeSrc": "23452:47:7",
																"nodeType": "YulFunctionCall",
																"src": "23452:47:7"
															},
															"nativeSrc": "23452:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "23452:47:7"
														},
														{
															"nativeSrc": "23508:139:7",
															"nodeType": "YulAssignment",
															"src": "23508:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "23642:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "23642:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_28ee48a047f51c165a70ae36f179330afc265bf4c05f56e1a1f02c2668dcead2_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23516:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "23516:124:7"
																},
																"nativeSrc": "23516:131:7",
																"nodeType": "YulFunctionCall",
																"src": "23516:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23508:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "23508:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_28ee48a047f51c165a70ae36f179330afc265bf4c05f56e1a1f02c2668dcead2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "23235:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23386:9:7",
														"nodeType": "YulTypedName",
														"src": "23386:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23401:4:7",
														"nodeType": "YulTypedName",
														"src": "23401:4:7",
														"type": ""
													}
												],
												"src": "23235:419:7"
											},
											{
												"body": {
													"nativeSrc": "23766:58:7",
													"nodeType": "YulBlock",
													"src": "23766:58:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "23788:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "23788:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23796:1:7",
																				"nodeType": "YulLiteral",
																				"src": "23796:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23784:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "23784:3:7"
																		},
																		"nativeSrc": "23784:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "23784:14:7"
																	},
																	{
																		"hexValue": "496e73756666696369656e742041",
																		"kind": "string",
																		"nativeSrc": "23800:16:7",
																		"nodeType": "YulLiteral",
																		"src": "23800:16:7",
																		"type": "",
																		"value": "Insufficient A"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23777:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "23777:6:7"
																},
																"nativeSrc": "23777:40:7",
																"nodeType": "YulFunctionCall",
																"src": "23777:40:7"
															},
															"nativeSrc": "23777:40:7",
															"nodeType": "YulExpressionStatement",
															"src": "23777:40:7"
														}
													]
												},
												"name": "store_literal_in_memory_00c0664002c3a7ab9481655483f753aa6ee21854999370a38d90a0549f0cf8f4",
												"nativeSrc": "23660:164:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "23758:6:7",
														"nodeType": "YulTypedName",
														"src": "23758:6:7",
														"type": ""
													}
												],
												"src": "23660:164:7"
											},
											{
												"body": {
													"nativeSrc": "23976:220:7",
													"nodeType": "YulBlock",
													"src": "23976:220:7",
													"statements": [
														{
															"nativeSrc": "23986:74:7",
															"nodeType": "YulAssignment",
															"src": "23986:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24052:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "24052:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24057:2:7",
																		"nodeType": "YulLiteral",
																		"src": "24057:2:7",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23993:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "23993:58:7"
																},
																"nativeSrc": "23993:67:7",
																"nodeType": "YulFunctionCall",
																"src": "23993:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "23986:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "23986:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24158:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "24158:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_00c0664002c3a7ab9481655483f753aa6ee21854999370a38d90a0549f0cf8f4",
																	"nativeSrc": "24069:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "24069:88:7"
																},
																"nativeSrc": "24069:93:7",
																"nodeType": "YulFunctionCall",
																"src": "24069:93:7"
															},
															"nativeSrc": "24069:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "24069:93:7"
														},
														{
															"nativeSrc": "24171:19:7",
															"nodeType": "YulAssignment",
															"src": "24171:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24182:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "24182:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24187:2:7",
																		"nodeType": "YulLiteral",
																		"src": "24187:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24178:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "24178:3:7"
																},
																"nativeSrc": "24178:12:7",
																"nodeType": "YulFunctionCall",
																"src": "24178:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "24171:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "24171:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_00c0664002c3a7ab9481655483f753aa6ee21854999370a38d90a0549f0cf8f4_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "23830:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "23964:3:7",
														"nodeType": "YulTypedName",
														"src": "23964:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "23972:3:7",
														"nodeType": "YulTypedName",
														"src": "23972:3:7",
														"type": ""
													}
												],
												"src": "23830:366:7"
											},
											{
												"body": {
													"nativeSrc": "24373:248:7",
													"nodeType": "YulBlock",
													"src": "24373:248:7",
													"statements": [
														{
															"nativeSrc": "24383:26:7",
															"nodeType": "YulAssignment",
															"src": "24383:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "24395:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "24395:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24406:2:7",
																		"nodeType": "YulLiteral",
																		"src": "24406:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24391:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "24391:3:7"
																},
																"nativeSrc": "24391:18:7",
																"nodeType": "YulFunctionCall",
																"src": "24391:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24383:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "24383:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24430:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "24430:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24441:1:7",
																				"nodeType": "YulLiteral",
																				"src": "24441:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24426:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "24426:3:7"
																		},
																		"nativeSrc": "24426:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "24426:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "24449:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "24449:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "24455:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "24455:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "24445:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "24445:3:7"
																		},
																		"nativeSrc": "24445:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "24445:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24419:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "24419:6:7"
																},
																"nativeSrc": "24419:47:7",
																"nodeType": "YulFunctionCall",
																"src": "24419:47:7"
															},
															"nativeSrc": "24419:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "24419:47:7"
														},
														{
															"nativeSrc": "24475:139:7",
															"nodeType": "YulAssignment",
															"src": "24475:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "24609:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "24609:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_00c0664002c3a7ab9481655483f753aa6ee21854999370a38d90a0549f0cf8f4_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "24483:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "24483:124:7"
																},
																"nativeSrc": "24483:131:7",
																"nodeType": "YulFunctionCall",
																"src": "24483:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24475:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "24475:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_00c0664002c3a7ab9481655483f753aa6ee21854999370a38d90a0549f0cf8f4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "24202:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "24353:9:7",
														"nodeType": "YulTypedName",
														"src": "24353:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "24368:4:7",
														"nodeType": "YulTypedName",
														"src": "24368:4:7",
														"type": ""
													}
												],
												"src": "24202:419:7"
											},
											{
												"body": {
													"nativeSrc": "24781:288:7",
													"nodeType": "YulBlock",
													"src": "24781:288:7",
													"statements": [
														{
															"nativeSrc": "24791:26:7",
															"nodeType": "YulAssignment",
															"src": "24791:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "24803:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "24803:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24814:2:7",
																		"nodeType": "YulLiteral",
																		"src": "24814:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24799:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "24799:3:7"
																},
																"nativeSrc": "24799:18:7",
																"nodeType": "YulFunctionCall",
																"src": "24799:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24791:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "24791:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "24871:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "24871:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24884:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "24884:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24895:1:7",
																				"nodeType": "YulLiteral",
																				"src": "24895:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24880:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "24880:3:7"
																		},
																		"nativeSrc": "24880:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "24880:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "24827:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "24827:43:7"
																},
																"nativeSrc": "24827:71:7",
																"nodeType": "YulFunctionCall",
																"src": "24827:71:7"
															},
															"nativeSrc": "24827:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "24827:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "24952:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "24952:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24965:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "24965:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24976:2:7",
																				"nodeType": "YulLiteral",
																				"src": "24976:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24961:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "24961:3:7"
																		},
																		"nativeSrc": "24961:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "24961:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "24908:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "24908:43:7"
																},
																"nativeSrc": "24908:72:7",
																"nodeType": "YulFunctionCall",
																"src": "24908:72:7"
															},
															"nativeSrc": "24908:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "24908:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "25034:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "25034:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25047:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "25047:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25058:2:7",
																				"nodeType": "YulLiteral",
																				"src": "25058:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25043:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "25043:3:7"
																		},
																		"nativeSrc": "25043:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "25043:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "24990:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "24990:43:7"
																},
																"nativeSrc": "24990:72:7",
																"nodeType": "YulFunctionCall",
																"src": "24990:72:7"
															},
															"nativeSrc": "24990:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "24990:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "24627:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "24737:9:7",
														"nodeType": "YulTypedName",
														"src": "24737:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "24749:6:7",
														"nodeType": "YulTypedName",
														"src": "24749:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "24757:6:7",
														"nodeType": "YulTypedName",
														"src": "24757:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "24765:6:7",
														"nodeType": "YulTypedName",
														"src": "24765:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "24776:4:7",
														"nodeType": "YulTypedName",
														"src": "24776:4:7",
														"type": ""
													}
												],
												"src": "24627:442:7"
											},
											{
												"body": {
													"nativeSrc": "25173:124:7",
													"nodeType": "YulBlock",
													"src": "25173:124:7",
													"statements": [
														{
															"nativeSrc": "25183:26:7",
															"nodeType": "YulAssignment",
															"src": "25183:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "25195:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "25195:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25206:2:7",
																		"nodeType": "YulLiteral",
																		"src": "25206:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25191:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "25191:3:7"
																},
																"nativeSrc": "25191:18:7",
																"nodeType": "YulFunctionCall",
																"src": "25191:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25183:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "25183:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "25263:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "25263:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25276:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "25276:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25287:1:7",
																				"nodeType": "YulLiteral",
																				"src": "25287:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25272:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "25272:3:7"
																		},
																		"nativeSrc": "25272:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "25272:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "25219:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "25219:43:7"
																},
																"nativeSrc": "25219:71:7",
																"nodeType": "YulFunctionCall",
																"src": "25219:71:7"
															},
															"nativeSrc": "25219:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "25219:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "25075:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "25145:9:7",
														"nodeType": "YulTypedName",
														"src": "25145:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "25157:6:7",
														"nodeType": "YulTypedName",
														"src": "25157:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "25168:4:7",
														"nodeType": "YulTypedName",
														"src": "25168:4:7",
														"type": ""
													}
												],
												"src": "25075:222:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint112(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffff)\n    }\n\n    function abi_encode_t_uint112_to_t_uint112_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint112(value))\n    }\n\n    function abi_encode_tuple_t_uint112_t_uint112__to_t_uint112_t_uint112__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint112_to_t_uint112_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint112_to_t_uint112_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_array$_t_address_$dyn_calldata_ptrt_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_array$_t_address_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value4 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value5 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7 {\n        if slt(sub(dataEnd, headStart), 256) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 224\n\n            value7 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_185a9d5da6de3eebfb2e4ad4adad189f402b098c61f6e8e0c8d2b4a20a1faa2a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid reserves\")\n\n    }\n\n    function abi_encode_t_stringliteral_185a9d5da6de3eebfb2e4ad4adad189f402b098c61f6e8e0c8d2b4a20a1faa2a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_185a9d5da6de3eebfb2e4ad4adad189f402b098c61f6e8e0c8d2b4a20a1faa2a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_185a9d5da6de3eebfb2e4ad4adad189f402b098c61f6e8e0c8d2b4a20a1faa2a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_185a9d5da6de3eebfb2e4ad4adad189f402b098c61f6e8e0c8d2b4a20a1faa2a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_f183c8b0f89612f6f096bf1f0017061404d2019bd0580f7b18bddb8dcc0d7a13(memPtr) {\n\n        mstore(add(memPtr, 0), \"Expired\")\n\n    }\n\n    function abi_encode_t_stringliteral_f183c8b0f89612f6f096bf1f0017061404d2019bd0580f7b18bddb8dcc0d7a13_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 7)\n        store_literal_in_memory_f183c8b0f89612f6f096bf1f0017061404d2019bd0580f7b18bddb8dcc0d7a13(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f183c8b0f89612f6f096bf1f0017061404d2019bd0580f7b18bddb8dcc0d7a13__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f183c8b0f89612f6f096bf1f0017061404d2019bd0580f7b18bddb8dcc0d7a13_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1999f60f5526a13cb17eac3c04d030e47d1c41d4e55af8ccb43358373aec7eb8(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only 2-token path supported\")\n\n    }\n\n    function abi_encode_t_stringliteral_1999f60f5526a13cb17eac3c04d030e47d1c41d4e55af8ccb43358373aec7eb8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_1999f60f5526a13cb17eac3c04d030e47d1c41d4e55af8ccb43358373aec7eb8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1999f60f5526a13cb17eac3c04d030e47d1c41d4e55af8ccb43358373aec7eb8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1999f60f5526a13cb17eac3c04d030e47d1c41d4e55af8ccb43358373aec7eb8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_ffebb6789a62ed60836fc38e566e8cbcff27ebb3acadee53ee5da9825f1b14e1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient output\")\n\n    }\n\n    function abi_encode_t_stringliteral_ffebb6789a62ed60836fc38e566e8cbcff27ebb3acadee53ee5da9825f1b14e1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_ffebb6789a62ed60836fc38e566e8cbcff27ebb3acadee53ee5da9825f1b14e1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ffebb6789a62ed60836fc38e566e8cbcff27ebb3acadee53ee5da9825f1b14e1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ffebb6789a62ed60836fc38e566e8cbcff27ebb3acadee53ee5da9825f1b14e1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_f8d6698763d2d0ff1e31fa7f43b504a63f09c2932b87b9842c093ff74de4d766(memPtr) {\n\n        mstore(add(memPtr, 0), \"No reserves\")\n\n    }\n\n    function abi_encode_t_stringliteral_f8d6698763d2d0ff1e31fa7f43b504a63f09c2932b87b9842c093ff74de4d766_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 11)\n        store_literal_in_memory_f8d6698763d2d0ff1e31fa7f43b504a63f09c2932b87b9842c093ff74de4d766(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8d6698763d2d0ff1e31fa7f43b504a63f09c2932b87b9842c093ff74de4d766__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8d6698763d2d0ff1e31fa7f43b504a63f09c2932b87b9842c093ff74de4d766_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_379a432f00aa43993bfbf4e01492a8eab5138dcd2e395864ede728644390fc31(memPtr) {\n\n        mstore(add(memPtr, 0), \"No liquidity\")\n\n    }\n\n    function abi_encode_t_stringliteral_379a432f00aa43993bfbf4e01492a8eab5138dcd2e395864ede728644390fc31_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_379a432f00aa43993bfbf4e01492a8eab5138dcd2e395864ede728644390fc31(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_379a432f00aa43993bfbf4e01492a8eab5138dcd2e395864ede728644390fc31__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_379a432f00aa43993bfbf4e01492a8eab5138dcd2e395864ede728644390fc31_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_fb87c09e63b5ee5d76fa5ada5f7c2fd9de8980c2964f73a791eaef9c4602f114(memPtr) {\n\n        mstore(add(memPtr, 0), \"Slippage\")\n\n    }\n\n    function abi_encode_t_stringliteral_fb87c09e63b5ee5d76fa5ada5f7c2fd9de8980c2964f73a791eaef9c4602f114_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 8)\n        store_literal_in_memory_fb87c09e63b5ee5d76fa5ada5f7c2fd9de8980c2964f73a791eaef9c4602f114(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fb87c09e63b5ee5d76fa5ada5f7c2fd9de8980c2964f73a791eaef9c4602f114__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fb87c09e63b5ee5d76fa5ada5f7c2fd9de8980c2964f73a791eaef9c4602f114_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_sub_t_uint112(x, y) -> diff {\n        x := cleanup_t_uint112(x)\n        y := cleanup_t_uint112(y)\n        diff := sub(x, y)\n\n        if gt(diff, 0xffffffffffffffffffffffffffff) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint112(x, y) -> sum {\n        x := cleanup_t_uint112(x)\n        y := cleanup_t_uint112(y)\n        sum := add(x, y)\n\n        if gt(sum, 0xffffffffffffffffffffffffffff) { panic_error_0x11() }\n\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 20)\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 20)\n\n        end := pos\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_28ee48a047f51c165a70ae36f179330afc265bf4c05f56e1a1f02c2668dcead2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient B\")\n\n    }\n\n    function abi_encode_t_stringliteral_28ee48a047f51c165a70ae36f179330afc265bf4c05f56e1a1f02c2668dcead2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_28ee48a047f51c165a70ae36f179330afc265bf4c05f56e1a1f02c2668dcead2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_28ee48a047f51c165a70ae36f179330afc265bf4c05f56e1a1f02c2668dcead2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_28ee48a047f51c165a70ae36f179330afc265bf4c05f56e1a1f02c2668dcead2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_00c0664002c3a7ab9481655483f753aa6ee21854999370a38d90a0549f0cf8f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient A\")\n\n    }\n\n    function abi_encode_t_stringliteral_00c0664002c3a7ab9481655483f753aa6ee21854999370a38d90a0549f0cf8f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_00c0664002c3a7ab9481655483f753aa6ee21854999370a38d90a0549f0cf8f4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_00c0664002c3a7ab9481655483f753aa6ee21854999370a38d90a0549f0cf8f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_00c0664002c3a7ab9481655483f753aa6ee21854999370a38d90a0549f0cf8f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610085575f3560e01c8063ac41865a11610059578063ac41865a1461014a578063baa2abde1461017a578063bb521a30146101ab578063e8e33700146101db57610085565b8062bbf1e414610089578063054d50d4146100ba57806338ed1739146100ea57806354b7a8f71461011a575b5f5ffd5b6100a3600480360381019061009e91906113b5565b61020d565b6040516100b1929190611408565b60405180910390f35b6100d460048036038101906100cf9190611462565b61025e565b6040516100e191906114c1565b60405180910390f35b61010460048036038101906100ff9190611595565b61030b565b60405161011191906116e2565b60405180910390f35b610134600480360381019061012f91906113b5565b6104f1565b60405161014191906114c1565b60405180910390f35b610164600480360381019061015f9190611702565b610506565b60405161017191906114c1565b60405180910390f35b610194600480360381019061018f9190611740565b610640565b6040516101a29291906117dd565b60405180910390f35b6101c560048036038101906101c09190611804565b61097f565b6040516101d291906114c1565b60405180910390f35b6101f560048036038101906101f09190611842565b61099f565b604051610204939291906118f3565b60405180910390f35b5f602052805f5260405f205f91509050805f015f9054906101000a90046dffffffffffffffffffffffffffff1690805f01600e9054906101000a90046dffffffffffffffffffffffffffff16905082565b5f5f8411801561026d57505f83115b801561027857505f82115b6102b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ae90611982565b60405180910390fd5b5f6103e5856102c691906119cd565b90505f83826102d591906119cd565b90505f826103e8876102e791906119cd565b6102f19190611a0e565b905080826102ff9190611a6e565b93505050509392505050565b606081421115610350576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034790611ae8565b60405180910390fd5b60028585905014610396576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038d90611b50565b60405180910390fd5b5f85855f8181106103aa576103a9611b6e565b5b90506020020160208101906103bf9190611b9b565b90505f868660018181106103d6576103d5611b6e565b5b90506020020160208101906103eb9190611b9b565b90505f6103f98a8484610a7f565b90508881101561043e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043590611c10565b60405180910390fd5b61044b83838c848a610b59565b61045783838c84610bb8565b600267ffffffffffffffff81111561047257610471611c2e565b5b6040519080825280602002602001820160405280156104a05781602001602082028036833780820191505090505b50935089845f815181106104b7576104b6611b6e565b5b60200260200101818152505080846001815181106104d8576104d7611b6e565b5b6020026020010181815250505050509695505050505050565b6001602052805f5260405f205f915090505481565b5f5f6105128484610d90565b90505f5f5f8381526020019081526020015f206040518060400160405290815f82015f9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff1681526020015f8201600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff168152505090505f5f6105c4878785610e36565b915091505f821180156105d657505f81115b610615576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060c90611ca5565b60405180910390fd5b81670de0b6b3a76400008261062a91906119cd565b6106349190611a6e565b94505050505092915050565b5f5f82421115610685576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067c90611ae8565b60405180910390fd5b5f6106908a8a610d90565b90505f5f5f8381526020019081526020015f2090505f60015f8481526020019081526020015f205490505f81116106fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f390611d0d565b60405180910390fd5b808a835f015f9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff1661073591906119cd565b61073f9190611a6e565b9450808a835f01600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff1661077b91906119cd565b6107859190611a6e565b93508885101580156107975750878410155b6107d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107cd90611d75565b60405180910390fd5b8960025f8581526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546108319190611d93565b925050819055508960015f8581526020019081526020015f205f8282546108589190611d93565b9250508190555084825f015f8282829054906101000a90046dffffffffffffffffffffffffffff1661088a9190611dc6565b92506101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff16021790555083825f01600e8282829054906101000a90046dffffffffffffffffffffffffffff166108e89190611dc6565b92506101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff16021790555061094587868e73ffffffffffffffffffffffffffffffffffffffff16610eb59092919063ffffffff16565b61097087858d73ffffffffffffffffffffffffffffffffffffffff16610eb59092919063ffffffff16565b50505097509795505050505050565b6002602052815f5260405f20602052805f5260405f205f91509150505481565b5f5f5f834211156109e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109dc90611ae8565b60405180910390fd5b5f6109f08c8c610d90565b90505f5f5f8381526020019081526020015f209050610a4c815f015f9054906101000a90046dffffffffffffffffffffffffffff16825f01600e9054906101000a90046dffffffffffffffffffffffffffff168d8d8d8d610f34565b8095508196505050610a608d8d87876110a1565b610a6d8286868a85611101565b92505050985098509895505050505050565b5f5f610a8b8484610d90565b90505f5f5f8381526020019081526020015f206040518060400160405290815f82015f9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff1681526020015f8201600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff168152505090505f5f610b3d878785610e36565b91509150610b4c88838361025e565b9450505050509392505050565b610b863330858873ffffffffffffffffffffffffffffffffffffffff1661125d909392919063ffffffff16565b610bb181838673ffffffffffffffffffffffffffffffffffffffff16610eb59092919063ffffffff16565b5050505050565b5f610bc38585610d90565b90505f5f5f8381526020019081526020015f2090508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161015610ccc5783815f015f8282829054906101000a90046dffffffffffffffffffffffffffff16610c379190611e07565b92506101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff16021790555082815f01600e8282829054906101000a90046dffffffffffffffffffffffffffff16610c959190611dc6565b92506101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff160217905550610d88565b83815f01600e8282829054906101000a90046dffffffffffffffffffffffffffff16610cf89190611e07565b92506101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff16021790555082815f015f8282829054906101000a90046dffffffffffffffffffffffffffff16610d559190611dc6565b92506101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff1602179055505b505050505050565b5f8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1610610dca5781610dcc565b825b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1610610e055783610e07565b825b604051602001610e18929190611e8d565b60405160208183030381529060405280519060200120905092915050565b5f5f8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1610610e79578260200151835f0151610e83565b825f015183602001515b816dffffffffffffffffffffffffffff169150806dffffffffffffffffffffffffffff16905091509150935093915050565b610f2f838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610ee8929190611ec7565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506112df565b505050565b5f5f5f886dffffffffffffffffffffffffffff16148015610f6457505f876dffffffffffffffffffffffffffff16145b15610f785785858092508193505050611096565b5f886dffffffffffffffffffffffffffff16886dffffffffffffffffffffffffffff1688610fa691906119cd565b610fb09190611a6e565b905085811161100b5783811015610ffc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ff390611f38565b60405180910390fd5b86818093508194505050611094565b5f886dffffffffffffffffffffffffffff168a6dffffffffffffffffffffffffffff168861103991906119cd565b6110439190611a6e565b905085811015611088576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161107f90611fa0565b60405180910390fd5b80878094508195505050505b505b965096945050505050565b6110ce3330848773ffffffffffffffffffffffffffffffffffffffff1661125d909392919063ffffffff16565b6110fb3330838673ffffffffffffffffffffffffffffffffffffffff1661125d909392919063ffffffff16565b50505050565b5f838561110e9190611a0e565b90508060015f8881526020019081526020015f205f8282546111309190611a0e565b925050819055508060025f8881526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546111929190611a0e565b9250508190555084825f015f8282829054906101000a90046dffffffffffffffffffffffffffff166111c49190611e07565b92506101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff16021790555083825f01600e8282829054906101000a90046dffffffffffffffffffffffffffff166112229190611e07565b92506101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff16021790555095945050505050565b6112d9848573ffffffffffffffffffffffffffffffffffffffff166323b872dd86868660405160240161129293929190611fbe565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506112df565b50505050565b5f5f60205f8451602086015f885af1806112fe576040513d5f823e3d81fd5b3d92505f519150505f8214611317576001811415611332565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561137457836040517f5274afe700000000000000000000000000000000000000000000000000000000815260040161136b9190611ff3565b60405180910390fd5b50505050565b5f5ffd5b5f5ffd5b5f819050919050565b61139481611382565b811461139e575f5ffd5b50565b5f813590506113af8161138b565b92915050565b5f602082840312156113ca576113c961137a565b5b5f6113d7848285016113a1565b91505092915050565b5f6dffffffffffffffffffffffffffff82169050919050565b611402816113e0565b82525050565b5f60408201905061141b5f8301856113f9565b61142860208301846113f9565b9392505050565b5f819050919050565b6114418161142f565b811461144b575f5ffd5b50565b5f8135905061145c81611438565b92915050565b5f5f5f606084860312156114795761147861137a565b5b5f6114868682870161144e565b93505060206114978682870161144e565b92505060406114a88682870161144e565b9150509250925092565b6114bb8161142f565b82525050565b5f6020820190506114d45f8301846114b2565b92915050565b5f5ffd5b5f5ffd5b5f5ffd5b5f5f83601f8401126114fb576114fa6114da565b5b8235905067ffffffffffffffff811115611518576115176114de565b5b602083019150836020820283011115611534576115336114e2565b5b9250929050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6115648261153b565b9050919050565b6115748161155a565b811461157e575f5ffd5b50565b5f8135905061158f8161156b565b92915050565b5f5f5f5f5f5f60a087890312156115af576115ae61137a565b5b5f6115bc89828a0161144e565b96505060206115cd89828a0161144e565b955050604087013567ffffffffffffffff8111156115ee576115ed61137e565b5b6115fa89828a016114e6565b9450945050606061160d89828a01611581565b925050608061161e89828a0161144e565b9150509295509295509295565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b61165d8161142f565b82525050565b5f61166e8383611654565b60208301905092915050565b5f602082019050919050565b5f6116908261162b565b61169a8185611635565b93506116a583611645565b805f5b838110156116d55781516116bc8882611663565b97506116c78361167a565b9250506001810190506116a8565b5085935050505092915050565b5f6020820190508181035f8301526116fa8184611686565b905092915050565b5f5f604083850312156117185761171761137a565b5b5f61172585828601611581565b925050602061173685828601611581565b9150509250929050565b5f5f5f5f5f5f5f60e0888a03121561175b5761175a61137a565b5b5f6117688a828b01611581565b97505060206117798a828b01611581565b965050604061178a8a828b0161144e565b955050606061179b8a828b0161144e565b94505060806117ac8a828b0161144e565b93505060a06117bd8a828b01611581565b92505060c06117ce8a828b0161144e565b91505092959891949750929550565b5f6040820190506117f05f8301856114b2565b6117fd60208301846114b2565b9392505050565b5f5f6040838503121561181a5761181961137a565b5b5f611827858286016113a1565b925050602061183885828601611581565b9150509250929050565b5f5f5f5f5f5f5f5f610100898b03121561185f5761185e61137a565b5b5f61186c8b828c01611581565b985050602061187d8b828c01611581565b975050604061188e8b828c0161144e565b965050606061189f8b828c0161144e565b95505060806118b08b828c0161144e565b94505060a06118c18b828c0161144e565b93505060c06118d28b828c01611581565b92505060e06118e38b828c0161144e565b9150509295985092959890939650565b5f6060820190506119065f8301866114b2565b61191360208301856114b2565b61192060408301846114b2565b949350505050565b5f82825260208201905092915050565b7f496e76616c6964207265736572766573000000000000000000000000000000005f82015250565b5f61196c601083611928565b915061197782611938565b602082019050919050565b5f6020820190508181035f83015261199981611960565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6119d78261142f565b91506119e28361142f565b92508282026119f08161142f565b91508282048414831517611a0757611a066119a0565b5b5092915050565b5f611a188261142f565b9150611a238361142f565b9250828201905080821115611a3b57611a3a6119a0565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611a788261142f565b9150611a838361142f565b925082611a9357611a92611a41565b5b828204905092915050565b7f45787069726564000000000000000000000000000000000000000000000000005f82015250565b5f611ad2600783611928565b9150611add82611a9e565b602082019050919050565b5f6020820190508181035f830152611aff81611ac6565b9050919050565b7f4f6e6c7920322d746f6b656e207061746820737570706f7274656400000000005f82015250565b5f611b3a601b83611928565b9150611b4582611b06565b602082019050919050565b5f6020820190508181035f830152611b6781611b2e565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f60208284031215611bb057611baf61137a565b5b5f611bbd84828501611581565b91505092915050565b7f496e73756666696369656e74206f7574707574000000000000000000000000005f82015250565b5f611bfa601383611928565b9150611c0582611bc6565b602082019050919050565b5f6020820190508181035f830152611c2781611bee565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e6f2072657365727665730000000000000000000000000000000000000000005f82015250565b5f611c8f600b83611928565b9150611c9a82611c5b565b602082019050919050565b5f6020820190508181035f830152611cbc81611c83565b9050919050565b7f4e6f206c697175696469747900000000000000000000000000000000000000005f82015250565b5f611cf7600c83611928565b9150611d0282611cc3565b602082019050919050565b5f6020820190508181035f830152611d2481611ceb565b9050919050565b7f536c6970706167650000000000000000000000000000000000000000000000005f82015250565b5f611d5f600883611928565b9150611d6a82611d2b565b602082019050919050565b5f6020820190508181035f830152611d8c81611d53565b9050919050565b5f611d9d8261142f565b9150611da88361142f565b9250828203905081811115611dc057611dbf6119a0565b5b92915050565b5f611dd0826113e0565b9150611ddb836113e0565b925082820390506dffffffffffffffffffffffffffff811115611e0157611e006119a0565b5b92915050565b5f611e11826113e0565b9150611e1c836113e0565b925082820190506dffffffffffffffffffffffffffff811115611e4257611e416119a0565b5b92915050565b5f8160601b9050919050565b5f611e5e82611e48565b9050919050565b5f611e6f82611e54565b9050919050565b611e87611e828261155a565b611e65565b82525050565b5f611e988285611e76565b601482019150611ea88284611e76565b6014820191508190509392505050565b611ec18161155a565b82525050565b5f604082019050611eda5f830185611eb8565b611ee760208301846114b2565b9392505050565b7f496e73756666696369656e7420420000000000000000000000000000000000005f82015250565b5f611f22600e83611928565b9150611f2d82611eee565b602082019050919050565b5f6020820190508181035f830152611f4f81611f16565b9050919050565b7f496e73756666696369656e7420410000000000000000000000000000000000005f82015250565b5f611f8a600e83611928565b9150611f9582611f56565b602082019050919050565b5f6020820190508181035f830152611fb781611f7e565b9050919050565b5f606082019050611fd15f830186611eb8565b611fde6020830185611eb8565b611feb60408301846114b2565b949350505050565b5f6020820190506120065f830184611eb8565b9291505056fea2646970667358221220d5c5981ff7f4e4a2dff9b06db8dbc35c0ca45848e78e5fc82c8167a720ec43d664736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x85 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAC41865A GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xAC41865A EQ PUSH2 0x14A JUMPI DUP1 PUSH4 0xBAA2ABDE EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xBB521A30 EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0xE8E33700 EQ PUSH2 0x1DB JUMPI PUSH2 0x85 JUMP JUMPDEST DUP1 PUSH3 0xBBF1E4 EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0x54D50D4 EQ PUSH2 0xBA JUMPI DUP1 PUSH4 0x38ED1739 EQ PUSH2 0xEA JUMPI DUP1 PUSH4 0x54B7A8F7 EQ PUSH2 0x11A JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xA3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9E SWAP2 SWAP1 PUSH2 0x13B5 JUMP JUMPDEST PUSH2 0x20D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB1 SWAP3 SWAP2 SWAP1 PUSH2 0x1408 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCF SWAP2 SWAP1 PUSH2 0x1462 JUMP JUMPDEST PUSH2 0x25E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0x14C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFF SWAP2 SWAP1 PUSH2 0x1595 JUMP JUMPDEST PUSH2 0x30B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0x16E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0x13B5 JUMP JUMPDEST PUSH2 0x4F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0x14C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x164 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15F SWAP2 SWAP1 PUSH2 0x1702 JUMP JUMPDEST PUSH2 0x506 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x171 SWAP2 SWAP1 PUSH2 0x14C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x194 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18F SWAP2 SWAP1 PUSH2 0x1740 JUMP JUMPDEST PUSH2 0x640 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A2 SWAP3 SWAP2 SWAP1 PUSH2 0x17DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C0 SWAP2 SWAP1 PUSH2 0x1804 JUMP JUMPDEST PUSH2 0x97F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D2 SWAP2 SWAP1 PUSH2 0x14C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0x1842 JUMP JUMPDEST PUSH2 0x99F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x204 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x18F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH0 ADD PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 JUMP JUMPDEST PUSH0 PUSH0 DUP5 GT DUP1 ISZERO PUSH2 0x26D JUMPI POP PUSH0 DUP4 GT JUMPDEST DUP1 ISZERO PUSH2 0x278 JUMPI POP PUSH0 DUP3 GT JUMPDEST PUSH2 0x2B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2AE SWAP1 PUSH2 0x1982 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x3E5 DUP6 PUSH2 0x2C6 SWAP2 SWAP1 PUSH2 0x19CD JUMP JUMPDEST SWAP1 POP PUSH0 DUP4 DUP3 PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x19CD JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH2 0x3E8 DUP8 PUSH2 0x2E7 SWAP2 SWAP1 PUSH2 0x19CD JUMP JUMPDEST PUSH2 0x2F1 SWAP2 SWAP1 PUSH2 0x1A0E JUMP JUMPDEST SWAP1 POP DUP1 DUP3 PUSH2 0x2FF SWAP2 SWAP1 PUSH2 0x1A6E JUMP JUMPDEST SWAP4 POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 TIMESTAMP GT ISZERO PUSH2 0x350 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x347 SWAP1 PUSH2 0x1AE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP6 DUP6 SWAP1 POP EQ PUSH2 0x396 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38D SWAP1 PUSH2 0x1B50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP6 DUP6 PUSH0 DUP2 DUP2 LT PUSH2 0x3AA JUMPI PUSH2 0x3A9 PUSH2 0x1B6E JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x3BF SWAP2 SWAP1 PUSH2 0x1B9B JUMP JUMPDEST SWAP1 POP PUSH0 DUP7 DUP7 PUSH1 0x1 DUP2 DUP2 LT PUSH2 0x3D6 JUMPI PUSH2 0x3D5 PUSH2 0x1B6E JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x3EB SWAP2 SWAP1 PUSH2 0x1B9B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x3F9 DUP11 DUP5 DUP5 PUSH2 0xA7F JUMP JUMPDEST SWAP1 POP DUP9 DUP2 LT ISZERO PUSH2 0x43E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x435 SWAP1 PUSH2 0x1C10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x44B DUP4 DUP4 DUP13 DUP5 DUP11 PUSH2 0xB59 JUMP JUMPDEST PUSH2 0x457 DUP4 DUP4 DUP13 DUP5 PUSH2 0xBB8 JUMP JUMPDEST PUSH1 0x2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x472 JUMPI PUSH2 0x471 PUSH2 0x1C2E JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x4A0 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP4 POP DUP10 DUP5 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x4B7 JUMPI PUSH2 0x4B6 PUSH2 0x1B6E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP5 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x4D8 JUMPI PUSH2 0x4D7 PUSH2 0x1B6E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP POP POP POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x512 DUP5 DUP5 PUSH2 0xD90 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH0 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP3 ADD PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP PUSH0 PUSH0 PUSH2 0x5C4 DUP8 DUP8 DUP6 PUSH2 0xE36 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH0 DUP3 GT DUP1 ISZERO PUSH2 0x5D6 JUMPI POP PUSH0 DUP2 GT JUMPDEST PUSH2 0x615 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60C SWAP1 PUSH2 0x1CA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0x62A SWAP2 SWAP1 PUSH2 0x19CD JUMP JUMPDEST PUSH2 0x634 SWAP2 SWAP1 PUSH2 0x1A6E JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 TIMESTAMP GT ISZERO PUSH2 0x685 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67C SWAP1 PUSH2 0x1AE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x690 DUP11 DUP11 PUSH2 0xD90 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH0 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 PUSH1 0x1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0x6FC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F3 SWAP1 PUSH2 0x1D0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP11 DUP4 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x735 SWAP2 SWAP1 PUSH2 0x19CD JUMP JUMPDEST PUSH2 0x73F SWAP2 SWAP1 PUSH2 0x1A6E JUMP JUMPDEST SWAP5 POP DUP1 DUP11 DUP4 PUSH0 ADD PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x77B SWAP2 SWAP1 PUSH2 0x19CD JUMP JUMPDEST PUSH2 0x785 SWAP2 SWAP1 PUSH2 0x1A6E JUMP JUMPDEST SWAP4 POP DUP9 DUP6 LT ISZERO DUP1 ISZERO PUSH2 0x797 JUMPI POP DUP8 DUP5 LT ISZERO JUMPDEST PUSH2 0x7D6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CD SWAP1 PUSH2 0x1D75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP10 PUSH1 0x2 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x831 SWAP2 SWAP1 PUSH2 0x1D93 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP10 PUSH1 0x1 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x858 SWAP2 SWAP1 PUSH2 0x1D93 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP5 DUP3 PUSH0 ADD PUSH0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x88A SWAP2 SWAP1 PUSH2 0x1DC6 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP3 PUSH0 ADD PUSH1 0xE DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8E8 SWAP2 SWAP1 PUSH2 0x1DC6 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x945 DUP8 DUP7 DUP15 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xEB5 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x970 DUP8 DUP6 DUP14 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xEB5 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP SWAP8 POP SWAP8 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 TIMESTAMP GT ISZERO PUSH2 0x9E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9DC SWAP1 PUSH2 0x1AE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x9F0 DUP13 DUP13 PUSH2 0xD90 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH0 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH2 0xA4C DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH0 ADD PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP14 DUP14 DUP14 DUP14 PUSH2 0xF34 JUMP JUMPDEST DUP1 SWAP6 POP DUP2 SWAP7 POP POP POP PUSH2 0xA60 DUP14 DUP14 DUP8 DUP8 PUSH2 0x10A1 JUMP JUMPDEST PUSH2 0xA6D DUP3 DUP7 DUP7 DUP11 DUP6 PUSH2 0x1101 JUMP JUMPDEST SWAP3 POP POP POP SWAP9 POP SWAP9 POP SWAP9 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xA8B DUP5 DUP5 PUSH2 0xD90 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH0 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP3 ADD PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP PUSH0 PUSH0 PUSH2 0xB3D DUP8 DUP8 DUP6 PUSH2 0xE36 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xB4C DUP9 DUP4 DUP4 PUSH2 0x25E JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xB86 CALLER ADDRESS DUP6 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x125D SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xBB1 DUP2 DUP4 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xEB5 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xBC3 DUP6 DUP6 PUSH2 0xD90 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH0 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0xCCC JUMPI DUP4 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC37 SWAP2 SWAP1 PUSH2 0x1E07 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 DUP2 PUSH0 ADD PUSH1 0xE DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC95 SWAP2 SWAP1 PUSH2 0x1DC6 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0xD88 JUMP JUMPDEST DUP4 DUP2 PUSH0 ADD PUSH1 0xE DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCF8 SWAP2 SWAP1 PUSH2 0x1E07 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD55 SWAP2 SWAP1 PUSH2 0x1DC6 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT PUSH2 0xDCA JUMPI DUP2 PUSH2 0xDCC JUMP JUMPDEST DUP3 JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT PUSH2 0xE05 JUMPI DUP4 PUSH2 0xE07 JUMP JUMPDEST DUP3 JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xE18 SWAP3 SWAP2 SWAP1 PUSH2 0x1E8D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT PUSH2 0xE79 JUMPI DUP3 PUSH1 0x20 ADD MLOAD DUP4 PUSH0 ADD MLOAD PUSH2 0xE83 JUMP JUMPDEST DUP3 PUSH0 ADD MLOAD DUP4 PUSH1 0x20 ADD MLOAD JUMPDEST DUP2 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP DUP1 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 POP SWAP2 POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF2F DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xEE8 SWAP3 SWAP2 SWAP1 PUSH2 0x1EC7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x12DF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP9 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xF64 JUMPI POP PUSH0 DUP8 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0xF78 JUMPI DUP6 DUP6 DUP1 SWAP3 POP DUP2 SWAP4 POP POP POP PUSH2 0x1096 JUMP JUMPDEST PUSH0 DUP9 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH2 0xFA6 SWAP2 SWAP1 PUSH2 0x19CD JUMP JUMPDEST PUSH2 0xFB0 SWAP2 SWAP1 PUSH2 0x1A6E JUMP JUMPDEST SWAP1 POP DUP6 DUP2 GT PUSH2 0x100B JUMPI DUP4 DUP2 LT ISZERO PUSH2 0xFFC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFF3 SWAP1 PUSH2 0x1F38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 DUP2 DUP1 SWAP4 POP DUP2 SWAP5 POP POP POP PUSH2 0x1094 JUMP JUMPDEST PUSH0 DUP9 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP11 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH2 0x1039 SWAP2 SWAP1 PUSH2 0x19CD JUMP JUMPDEST PUSH2 0x1043 SWAP2 SWAP1 PUSH2 0x1A6E JUMP JUMPDEST SWAP1 POP DUP6 DUP2 LT ISZERO PUSH2 0x1088 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x107F SWAP1 PUSH2 0x1FA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP8 DUP1 SWAP5 POP DUP2 SWAP6 POP POP POP POP JUMPDEST POP JUMPDEST SWAP7 POP SWAP7 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x10CE CALLER ADDRESS DUP5 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x125D SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x10FB CALLER ADDRESS DUP4 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x125D SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP4 DUP6 PUSH2 0x110E SWAP2 SWAP1 PUSH2 0x1A0E JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1130 SWAP2 SWAP1 PUSH2 0x1A0E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1192 SWAP2 SWAP1 PUSH2 0x1A0E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP5 DUP3 PUSH0 ADD PUSH0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11C4 SWAP2 SWAP1 PUSH2 0x1E07 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP3 PUSH0 ADD PUSH1 0xE DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1222 SWAP2 SWAP1 PUSH2 0x1E07 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x12D9 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1292 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1FBE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x12DF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x12FE JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x1317 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x1332 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1374 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x136B SWAP2 SWAP1 PUSH2 0x1FF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1394 DUP2 PUSH2 0x1382 JUMP JUMPDEST DUP2 EQ PUSH2 0x139E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13AF DUP2 PUSH2 0x138B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13CA JUMPI PUSH2 0x13C9 PUSH2 0x137A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13D7 DUP5 DUP3 DUP6 ADD PUSH2 0x13A1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1402 DUP2 PUSH2 0x13E0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x141B PUSH0 DUP4 ADD DUP6 PUSH2 0x13F9 JUMP JUMPDEST PUSH2 0x1428 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x13F9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1441 DUP2 PUSH2 0x142F JUMP JUMPDEST DUP2 EQ PUSH2 0x144B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x145C DUP2 PUSH2 0x1438 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1479 JUMPI PUSH2 0x1478 PUSH2 0x137A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1486 DUP7 DUP3 DUP8 ADD PUSH2 0x144E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1497 DUP7 DUP3 DUP8 ADD PUSH2 0x144E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x14A8 DUP7 DUP3 DUP8 ADD PUSH2 0x144E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x14BB DUP2 PUSH2 0x142F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14D4 PUSH0 DUP4 ADD DUP5 PUSH2 0x14B2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x14FB JUMPI PUSH2 0x14FA PUSH2 0x14DA JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1518 JUMPI PUSH2 0x1517 PUSH2 0x14DE JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1534 JUMPI PUSH2 0x1533 PUSH2 0x14E2 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1564 DUP3 PUSH2 0x153B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1574 DUP2 PUSH2 0x155A JUMP JUMPDEST DUP2 EQ PUSH2 0x157E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x158F DUP2 PUSH2 0x156B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x15AF JUMPI PUSH2 0x15AE PUSH2 0x137A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15BC DUP10 DUP3 DUP11 ADD PUSH2 0x144E JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x15CD DUP10 DUP3 DUP11 ADD PUSH2 0x144E JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15EE JUMPI PUSH2 0x15ED PUSH2 0x137E JUMP JUMPDEST JUMPDEST PUSH2 0x15FA DUP10 DUP3 DUP11 ADD PUSH2 0x14E6 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x60 PUSH2 0x160D DUP10 DUP3 DUP11 ADD PUSH2 0x1581 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x161E DUP10 DUP3 DUP11 ADD PUSH2 0x144E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x165D DUP2 PUSH2 0x142F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x166E DUP4 DUP4 PUSH2 0x1654 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1690 DUP3 PUSH2 0x162B JUMP JUMPDEST PUSH2 0x169A DUP2 DUP6 PUSH2 0x1635 JUMP JUMPDEST SWAP4 POP PUSH2 0x16A5 DUP4 PUSH2 0x1645 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16D5 JUMPI DUP2 MLOAD PUSH2 0x16BC DUP9 DUP3 PUSH2 0x1663 JUMP JUMPDEST SWAP8 POP PUSH2 0x16C7 DUP4 PUSH2 0x167A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x16A8 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x16FA DUP2 DUP5 PUSH2 0x1686 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1718 JUMPI PUSH2 0x1717 PUSH2 0x137A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1725 DUP6 DUP3 DUP7 ADD PUSH2 0x1581 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1736 DUP6 DUP3 DUP7 ADD PUSH2 0x1581 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x175B JUMPI PUSH2 0x175A PUSH2 0x137A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1768 DUP11 DUP3 DUP12 ADD PUSH2 0x1581 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x1779 DUP11 DUP3 DUP12 ADD PUSH2 0x1581 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x178A DUP11 DUP3 DUP12 ADD PUSH2 0x144E JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x179B DUP11 DUP3 DUP12 ADD PUSH2 0x144E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x17AC DUP11 DUP3 DUP12 ADD PUSH2 0x144E JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x17BD DUP11 DUP3 DUP12 ADD PUSH2 0x1581 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x17CE DUP11 DUP3 DUP12 ADD PUSH2 0x144E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x17F0 PUSH0 DUP4 ADD DUP6 PUSH2 0x14B2 JUMP JUMPDEST PUSH2 0x17FD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x14B2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x181A JUMPI PUSH2 0x1819 PUSH2 0x137A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1827 DUP6 DUP3 DUP7 ADD PUSH2 0x13A1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1838 DUP6 DUP3 DUP7 ADD PUSH2 0x1581 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x185F JUMPI PUSH2 0x185E PUSH2 0x137A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x186C DUP12 DUP3 DUP13 ADD PUSH2 0x1581 JUMP JUMPDEST SWAP9 POP POP PUSH1 0x20 PUSH2 0x187D DUP12 DUP3 DUP13 ADD PUSH2 0x1581 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x40 PUSH2 0x188E DUP12 DUP3 DUP13 ADD PUSH2 0x144E JUMP JUMPDEST SWAP7 POP POP PUSH1 0x60 PUSH2 0x189F DUP12 DUP3 DUP13 ADD PUSH2 0x144E JUMP JUMPDEST SWAP6 POP POP PUSH1 0x80 PUSH2 0x18B0 DUP12 DUP3 DUP13 ADD PUSH2 0x144E JUMP JUMPDEST SWAP5 POP POP PUSH1 0xA0 PUSH2 0x18C1 DUP12 DUP3 DUP13 ADD PUSH2 0x144E JUMP JUMPDEST SWAP4 POP POP PUSH1 0xC0 PUSH2 0x18D2 DUP12 DUP3 DUP13 ADD PUSH2 0x1581 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xE0 PUSH2 0x18E3 DUP12 DUP3 DUP13 ADD PUSH2 0x144E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1906 PUSH0 DUP4 ADD DUP7 PUSH2 0x14B2 JUMP JUMPDEST PUSH2 0x1913 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x14B2 JUMP JUMPDEST PUSH2 0x1920 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x14B2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420726573657276657300000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x196C PUSH1 0x10 DUP4 PUSH2 0x1928 JUMP JUMPDEST SWAP2 POP PUSH2 0x1977 DUP3 PUSH2 0x1938 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1999 DUP2 PUSH2 0x1960 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x19D7 DUP3 PUSH2 0x142F JUMP JUMPDEST SWAP2 POP PUSH2 0x19E2 DUP4 PUSH2 0x142F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x19F0 DUP2 PUSH2 0x142F JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1A07 JUMPI PUSH2 0x1A06 PUSH2 0x19A0 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A18 DUP3 PUSH2 0x142F JUMP JUMPDEST SWAP2 POP PUSH2 0x1A23 DUP4 PUSH2 0x142F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1A3B JUMPI PUSH2 0x1A3A PUSH2 0x19A0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1A78 DUP3 PUSH2 0x142F JUMP JUMPDEST SWAP2 POP PUSH2 0x1A83 DUP4 PUSH2 0x142F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1A93 JUMPI PUSH2 0x1A92 PUSH2 0x1A41 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4578706972656400000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1AD2 PUSH1 0x7 DUP4 PUSH2 0x1928 JUMP JUMPDEST SWAP2 POP PUSH2 0x1ADD DUP3 PUSH2 0x1A9E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AFF DUP2 PUSH2 0x1AC6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C7920322D746F6B656E207061746820737570706F727465640000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B3A PUSH1 0x1B DUP4 PUSH2 0x1928 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B45 DUP3 PUSH2 0x1B06 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B67 DUP2 PUSH2 0x1B2E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BB0 JUMPI PUSH2 0x1BAF PUSH2 0x137A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BBD DUP5 DUP3 DUP6 ADD PUSH2 0x1581 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74206F757470757400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1BFA PUSH1 0x13 DUP4 PUSH2 0x1928 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C05 DUP3 PUSH2 0x1BC6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C27 DUP2 PUSH2 0x1BEE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E6F207265736572766573000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C8F PUSH1 0xB DUP4 PUSH2 0x1928 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C9A DUP3 PUSH2 0x1C5B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CBC DUP2 PUSH2 0x1C83 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F206C69717569646974790000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1CF7 PUSH1 0xC DUP4 PUSH2 0x1928 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D02 DUP3 PUSH2 0x1CC3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D24 DUP2 PUSH2 0x1CEB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x536C697070616765000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D5F PUSH1 0x8 DUP4 PUSH2 0x1928 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D6A DUP3 PUSH2 0x1D2B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D8C DUP2 PUSH2 0x1D53 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D9D DUP3 PUSH2 0x142F JUMP JUMPDEST SWAP2 POP PUSH2 0x1DA8 DUP4 PUSH2 0x142F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1DC0 JUMPI PUSH2 0x1DBF PUSH2 0x19A0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1DD0 DUP3 PUSH2 0x13E0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DDB DUP4 PUSH2 0x13E0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E01 JUMPI PUSH2 0x1E00 PUSH2 0x19A0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E11 DUP3 PUSH2 0x13E0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E1C DUP4 PUSH2 0x13E0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E42 JUMPI PUSH2 0x1E41 PUSH2 0x19A0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E5E DUP3 PUSH2 0x1E48 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E6F DUP3 PUSH2 0x1E54 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E87 PUSH2 0x1E82 DUP3 PUSH2 0x155A JUMP JUMPDEST PUSH2 0x1E65 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E98 DUP3 DUP6 PUSH2 0x1E76 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x1EA8 DUP3 DUP5 PUSH2 0x1E76 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1EC1 DUP2 PUSH2 0x155A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1EDA PUSH0 DUP4 ADD DUP6 PUSH2 0x1EB8 JUMP JUMPDEST PUSH2 0x1EE7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x14B2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742042000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F22 PUSH1 0xE DUP4 PUSH2 0x1928 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F2D DUP3 PUSH2 0x1EEE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F4F DUP2 PUSH2 0x1F16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742041000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F8A PUSH1 0xE DUP4 PUSH2 0x1928 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F95 DUP3 PUSH2 0x1F56 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1FB7 DUP2 PUSH2 0x1F7E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1FD1 PUSH0 DUP4 ADD DUP7 PUSH2 0x1EB8 JUMP JUMPDEST PUSH2 0x1FDE PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1EB8 JUMP JUMPDEST PUSH2 0x1FEB PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x14B2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2006 PUSH0 DUP4 ADD DUP5 PUSH2 0x1EB8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD5 0xC5 SWAP9 0x1F 0xF7 DELEGATECALL RETF LOG2 0xDF EXTDELEGATECALL 0xB0 PUSH14 0xB8DBC35C0CA45848E78E5FC82C81 PUSH8 0xA720EC43D664736F PUSH13 0x634300081E0033000000000000 ",
							"sourceMap": "544:10925:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;803:43;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;6879:423;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5060:937;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;920:46;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6208:389;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3513:1109;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1037:68;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1793:1152;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;803:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6879:423::-;6970:14;7015:1;7004:8;:12;:29;;;;;7032:1;7020:9;:13;7004:29;:47;;;;;7050:1;7037:10;:14;7004:47;6996:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;7083:20;7117:3;7106:8;:14;;;;:::i;:::-;7083:37;;7142:14;7177:10;7159:15;:28;;;;:::i;:::-;7142:45;;7197:16;7235:15;7228:4;7216:9;:16;;;;:::i;:::-;:34;;;;:::i;:::-;7197:53;;7284:11;7272:9;:23;;;;:::i;:::-;7260:35;;6986:316;;;6879:423;;;;;:::o;5060:937::-;5244:21;5304:8;5285:15;:27;;5277:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;5357:1;5342:4;;:11;;:16;5334:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;5401:15;5419:4;;5424:1;5419:7;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;5401:25;;5436:16;5455:4;;5460:1;5455:7;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;5436:26;;5512:14;5529:49;5550:8;5560:7;5569:8;5529:20;:49::i;:::-;5512:66;;5609:12;5596:9;:25;;5588:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;5690:65;5712:7;5721:8;5731;5741:9;5752:2;5690:21;:65::i;:::-;5793:64;5818:7;5827:8;5837;5847:9;5793:24;:64::i;:::-;5925:1;5914:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5904:23;;5950:8;5937:7;5945:1;5937:10;;;;;;;;:::i;:::-;;;;;;;:21;;;;;5981:9;5968:7;5976:1;5968:10;;;;;;;;:::i;:::-;;;;;;;:22;;;;;5267:730;;;5060:937;;;;;;;;:::o;920:46::-;;;;;;;;;;;;;;;;;:::o;6208:389::-;6281:10;6303:16;6322:28;6335:6;6343;6322:12;:28::i;:::-;6303:47;;6360:18;6381:8;:18;6390:8;6381:18;;;;;;;;;;;6360:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6411:13;6426;6443:39;6462:6;6470;6478:3;6443:18;:39::i;:::-;6410:72;;;;6511:1;6500:8;:12;:28;;;;;6527:1;6516:8;:12;6500:28;6492:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;6582:8;6574:4;6563:8;:15;;;;:::i;:::-;6562:28;;;;:::i;:::-;6554:36;;6293:304;;;;6208:389;;;;:::o;3513:1109::-;3727:12;3741;3792:8;3773:15;:27;;3765:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;3823:16;3842:28;3855:6;3863;3842:12;:28::i;:::-;3823:47;;3880:19;3902:8;:18;3911:8;3902:18;;;;;;;;;;;3880:40;;3930:10;3943:14;:24;3958:8;3943:24;;;;;;;;;;;;3930:37;;3993:1;3985:5;:9;3977:34;;;;;;;;;;;;:::i;:::-;;;;;;;;;4105:5;4093:9;4078:3;:12;;;;;;;;;;;;:24;;;;;;:::i;:::-;:32;;;;:::i;:::-;4068:42;;4157:5;4145:9;4130:3;:12;;;;;;;;;;;;:24;;;;;;:::i;:::-;:32;;;;:::i;:::-;4120:42;;4192:10;4181:7;:21;;:46;;;;;4217:10;4206:7;:21;;4181:46;4173:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;4338:9;4296:16;:26;4313:8;4296:26;;;;;;;;;;;:38;4323:10;4296:38;;;;;;;;;;;;;;;;:51;;;;;;;:::i;:::-;;;;;;;;4385:9;4357:14;:24;4372:8;4357:24;;;;;;;;;;;;:37;;;;;;;:::i;:::-;;;;;;;;4428:7;4404:3;:12;;;:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;4470:7;4446:3;:12;;;:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;4525:40;4553:2;4557:7;4532:6;4525:27;;;;:40;;;;;:::i;:::-;4575;4603:2;4607:7;4582:6;4575:27;;;;:40;;;;;:::i;:::-;3755:867;;;3513:1109;;;;;;;;;;:::o;1037:68::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1793:1152::-;2038:12;2052;2066:14;2119:8;2100:15;:27;;2092:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;2150:16;2169:28;2182:6;2190;2169:12;:28::i;:::-;2150:47;;2207:19;2229:8;:18;2238:8;2229:18;;;;;;;;;;;2207:40;;2418:192;2458:3;:12;;;;;;;;;;;;2484:3;:12;;;;;;;;;;;;2510:14;2538;2566:10;2590;2418:26;:192::i;:::-;2397:213;;;;;;;;2656:63;2686:6;2694;2702:7;2711;2656:29;:63::i;:::-;2870:68;2902:8;2912:7;2921;2930:2;2934:3;2870:31;:68::i;:::-;2858:80;;2082:863;;1793:1152;;;;;;;;;;;;:::o;9657:375::-;9760:4;9776:16;9795:31;9808:7;9817:8;9795:12;:31::i;:::-;9776:50;;9836:18;9857:8;:18;9866:8;9857:18;;;;;;;;;;;9836:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9886:14;9902:15;9921:42;9940:7;9949:8;9959:3;9921:18;:42::i;:::-;9885:78;;;;9980:45;9993:8;10003:9;10014:10;9980:12;:45::i;:::-;9973:52;;;;;;9657:375;;;;;:::o;10105:258::-;10233:69;10266:10;10286:4;10293:8;10240:7;10233:32;;;;:69;;;;;;:::i;:::-;10312:44;10342:2;10346:9;10319:8;10312:29;;;;:44;;;;;:::i;:::-;10105:258;;;;;:::o;10430:477::-;10549:16;10568:31;10581:7;10590:8;10568:12;:31::i;:::-;10549:50;;10609:19;10631:8;:18;10640:8;10631:18;;;;;;;;;;;10609:40;;10673:8;10663:18;;:7;:18;;;10659:242;;;10721:8;10697:3;:12;;;:33;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;10768:9;10744:3;:12;;;:34;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;10659:242;;;10833:8;10809:3;:12;;;:33;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;10880:9;10856:3;:12;;;:34;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;10659:242;10539:368;;10430:477;;;;:::o;10977:207::-;11054:7;11116:6;11107:15;;:6;:15;;;:33;;11134:6;11107:33;;;11125:6;11107:33;11151:6;11142:15;;:6;:15;;;:33;;11169:6;11142:33;;;11160:6;11142:33;11090:86;;;;;;;;;:::i;:::-;;;;;;;;;;;;;11080:97;;;;;;11073:104;;10977:207;;;;:::o;11251:216::-;11354:4;11360;11392:6;11383:15;;:6;:15;;;:77;;11433:3;:12;;;11447:3;:12;;;11383:77;;;11402:3;:12;;;11416:3;:12;;;11383:77;11376:84;;;;;;;;;;;;;;11251:216;;;;;;:::o;1219:160:4:-;1301:71;1321:5;1343;:14;;;1360:2;1364:5;1328:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1301:19;:71::i;:::-;1219:160;;;:::o;7447:1159:6:-;7686:22;7710;7767:1;7748:15;:20;;;:44;;;;;7791:1;7772:15;:20;;;7748:44;7744:856;;;7903:14;7919;7861:73;;;;;;;;7744:856;;;8012:19;8069:15;8034:50;;8051:15;8034:32;;:14;:32;;;;:::i;:::-;:50;;;;:::i;:::-;8012:72;;8120:14;8102;:32;8098:492;;8180:10;8162:14;:28;;8154:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;8269:14;8285;8227:73;;;;;;;;8098:492;;;8339:19;8396:15;8361:50;;8378:15;8361:32;;:14;:32;;;;:::i;:::-;:50;;;;:::i;:::-;8339:72;;8455:10;8437:14;:28;;8429:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;8544:14;8560;8502:73;;;;;;;;8321:269;8098:492;7951:649;7744:856;7447:1159;;;;;;;;;:::o;8675:307::-;8831:67;8863:10;8883:4;8890:7;8838:6;8831:31;;;;:67;;;;;;:::i;:::-;8908;8940:10;8960:4;8967:7;8915:6;8908:31;;;;:67;;;;;;:::i;:::-;8675:307;;;;:::o;9051:470::-;9274:14;9322:7;9312;:17;;;;:::i;:::-;9300:29;;9367:9;9339:14;:24;9354:8;9339:24;;;;;;;;;;;;:37;;;;;;;:::i;:::-;;;;;;;;9420:9;9386:16;:26;9403:8;9386:26;;;;;;;;;;;:30;9413:2;9386:30;;;;;;;;;;;;;;;;:43;;;;;;;:::i;:::-;;;;;;;;9464:7;9440:3;:12;;;:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;9506:7;9482:3;:12;;;:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;9051:470;;;;;;;:::o;1618:188:4:-;1718:81;1738:5;1760;:18;;;1781:4;1787:2;1791:5;1745:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1718:19;:81::i;:::-;1618:188;;;;:::o;8370:720::-;8450:18;8478:19;8616:4;8613:1;8606:4;8600:11;8593:4;8587;8583:15;8580:1;8573:5;8566;8561:60;8673:7;8663:176;;8717:4;8711:11;8762:16;8759:1;8754:3;8739:40;8808:16;8803:3;8796:29;8663:176;8866:16;8852:30;;8916:1;8910:8;8895:23;;8532:396;8956:1;8942:10;:15;:68;;9009:1;8994:11;:16;;8942:68;;;8990:1;8968:5;8960:26;;;:31;8942:68;8938:146;;;9066:5;9033:40;;;;;;;;;;;:::i;:::-;;;;;;;;8938:146;8440:650;;8370:720;;:::o;88:117:7:-;197:1;194;187:12;211:117;320:1;317;310:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:114::-;1062:7;1102:30;1095:5;1091:42;1080:53;;1025:114;;;:::o;1145:118::-;1232:24;1250:5;1232:24;:::i;:::-;1227:3;1220:37;1145:118;;:::o;1269:332::-;1390:4;1428:2;1417:9;1413:18;1405:26;;1441:71;1509:1;1498:9;1494:17;1485:6;1441:71;:::i;:::-;1522:72;1590:2;1579:9;1575:18;1566:6;1522:72;:::i;:::-;1269:332;;;;;:::o;1607:77::-;1644:7;1673:5;1662:16;;1607:77;;;:::o;1690:122::-;1763:24;1781:5;1763:24;:::i;:::-;1756:5;1753:35;1743:63;;1802:1;1799;1792:12;1743:63;1690:122;:::o;1818:139::-;1864:5;1902:6;1889:20;1880:29;;1918:33;1945:5;1918:33;:::i;:::-;1818:139;;;;:::o;1963:619::-;2040:6;2048;2056;2105:2;2093:9;2084:7;2080:23;2076:32;2073:119;;;2111:79;;:::i;:::-;2073:119;2231:1;2256:53;2301:7;2292:6;2281:9;2277:22;2256:53;:::i;:::-;2246:63;;2202:117;2358:2;2384:53;2429:7;2420:6;2409:9;2405:22;2384:53;:::i;:::-;2374:63;;2329:118;2486:2;2512:53;2557:7;2548:6;2537:9;2533:22;2512:53;:::i;:::-;2502:63;;2457:118;1963:619;;;;;:::o;2588:118::-;2675:24;2693:5;2675:24;:::i;:::-;2670:3;2663:37;2588:118;;:::o;2712:222::-;2805:4;2843:2;2832:9;2828:18;2820:26;;2856:71;2924:1;2913:9;2909:17;2900:6;2856:71;:::i;:::-;2712:222;;;;:::o;2940:117::-;3049:1;3046;3039:12;3063:117;3172:1;3169;3162:12;3186:117;3295:1;3292;3285:12;3326:568;3399:8;3409:6;3459:3;3452:4;3444:6;3440:17;3436:27;3426:122;;3467:79;;:::i;:::-;3426:122;3580:6;3567:20;3557:30;;3610:18;3602:6;3599:30;3596:117;;;3632:79;;:::i;:::-;3596:117;3746:4;3738:6;3734:17;3722:29;;3800:3;3792:4;3784:6;3780:17;3770:8;3766:32;3763:41;3760:128;;;3807:79;;:::i;:::-;3760:128;3326:568;;;;;:::o;3900:126::-;3937:7;3977:42;3970:5;3966:54;3955:65;;3900:126;;;:::o;4032:96::-;4069:7;4098:24;4116:5;4098:24;:::i;:::-;4087:35;;4032:96;;;:::o;4134:122::-;4207:24;4225:5;4207:24;:::i;:::-;4200:5;4197:35;4187:63;;4246:1;4243;4236:12;4187:63;4134:122;:::o;4262:139::-;4308:5;4346:6;4333:20;4324:29;;4362:33;4389:5;4362:33;:::i;:::-;4262:139;;;;:::o;4407:1141::-;4529:6;4537;4545;4553;4561;4569;4618:3;4606:9;4597:7;4593:23;4589:33;4586:120;;;4625:79;;:::i;:::-;4586:120;4745:1;4770:53;4815:7;4806:6;4795:9;4791:22;4770:53;:::i;:::-;4760:63;;4716:117;4872:2;4898:53;4943:7;4934:6;4923:9;4919:22;4898:53;:::i;:::-;4888:63;;4843:118;5028:2;5017:9;5013:18;5000:32;5059:18;5051:6;5048:30;5045:117;;;5081:79;;:::i;:::-;5045:117;5194:80;5266:7;5257:6;5246:9;5242:22;5194:80;:::i;:::-;5176:98;;;;4971:313;5323:2;5349:53;5394:7;5385:6;5374:9;5370:22;5349:53;:::i;:::-;5339:63;;5294:118;5451:3;5478:53;5523:7;5514:6;5503:9;5499:22;5478:53;:::i;:::-;5468:63;;5422:119;4407:1141;;;;;;;;:::o;5554:114::-;5621:6;5655:5;5649:12;5639:22;;5554:114;;;:::o;5674:184::-;5773:11;5807:6;5802:3;5795:19;5847:4;5842:3;5838:14;5823:29;;5674:184;;;;:::o;5864:132::-;5931:4;5954:3;5946:11;;5984:4;5979:3;5975:14;5967:22;;5864:132;;;:::o;6002:108::-;6079:24;6097:5;6079:24;:::i;:::-;6074:3;6067:37;6002:108;;:::o;6116:179::-;6185:10;6206:46;6248:3;6240:6;6206:46;:::i;:::-;6284:4;6279:3;6275:14;6261:28;;6116:179;;;;:::o;6301:113::-;6371:4;6403;6398:3;6394:14;6386:22;;6301:113;;;:::o;6450:732::-;6569:3;6598:54;6646:5;6598:54;:::i;:::-;6668:86;6747:6;6742:3;6668:86;:::i;:::-;6661:93;;6778:56;6828:5;6778:56;:::i;:::-;6857:7;6888:1;6873:284;6898:6;6895:1;6892:13;6873:284;;;6974:6;6968:13;7001:63;7060:3;7045:13;7001:63;:::i;:::-;6994:70;;7087:60;7140:6;7087:60;:::i;:::-;7077:70;;6933:224;6920:1;6917;6913:9;6908:14;;6873:284;;;6877:14;7173:3;7166:10;;6574:608;;;6450:732;;;;:::o;7188:373::-;7331:4;7369:2;7358:9;7354:18;7346:26;;7418:9;7412:4;7408:20;7404:1;7393:9;7389:17;7382:47;7446:108;7549:4;7540:6;7446:108;:::i;:::-;7438:116;;7188:373;;;;:::o;7567:474::-;7635:6;7643;7692:2;7680:9;7671:7;7667:23;7663:32;7660:119;;;7698:79;;:::i;:::-;7660:119;7818:1;7843:53;7888:7;7879:6;7868:9;7864:22;7843:53;:::i;:::-;7833:63;;7789:117;7945:2;7971:53;8016:7;8007:6;7996:9;7992:22;7971:53;:::i;:::-;7961:63;;7916:118;7567:474;;;;;:::o;8047:1203::-;8160:6;8168;8176;8184;8192;8200;8208;8257:3;8245:9;8236:7;8232:23;8228:33;8225:120;;;8264:79;;:::i;:::-;8225:120;8384:1;8409:53;8454:7;8445:6;8434:9;8430:22;8409:53;:::i;:::-;8399:63;;8355:117;8511:2;8537:53;8582:7;8573:6;8562:9;8558:22;8537:53;:::i;:::-;8527:63;;8482:118;8639:2;8665:53;8710:7;8701:6;8690:9;8686:22;8665:53;:::i;:::-;8655:63;;8610:118;8767:2;8793:53;8838:7;8829:6;8818:9;8814:22;8793:53;:::i;:::-;8783:63;;8738:118;8895:3;8922:53;8967:7;8958:6;8947:9;8943:22;8922:53;:::i;:::-;8912:63;;8866:119;9024:3;9051:53;9096:7;9087:6;9076:9;9072:22;9051:53;:::i;:::-;9041:63;;8995:119;9153:3;9180:53;9225:7;9216:6;9205:9;9201:22;9180:53;:::i;:::-;9170:63;;9124:119;8047:1203;;;;;;;;;;:::o;9256:332::-;9377:4;9415:2;9404:9;9400:18;9392:26;;9428:71;9496:1;9485:9;9481:17;9472:6;9428:71;:::i;:::-;9509:72;9577:2;9566:9;9562:18;9553:6;9509:72;:::i;:::-;9256:332;;;;;:::o;9594:474::-;9662:6;9670;9719:2;9707:9;9698:7;9694:23;9690:32;9687:119;;;9725:79;;:::i;:::-;9687:119;9845:1;9870:53;9915:7;9906:6;9895:9;9891:22;9870:53;:::i;:::-;9860:63;;9816:117;9972:2;9998:53;10043:7;10034:6;10023:9;10019:22;9998:53;:::i;:::-;9988:63;;9943:118;9594:474;;;;;:::o;10074:1349::-;10196:6;10204;10212;10220;10228;10236;10244;10252;10301:3;10289:9;10280:7;10276:23;10272:33;10269:120;;;10308:79;;:::i;:::-;10269:120;10428:1;10453:53;10498:7;10489:6;10478:9;10474:22;10453:53;:::i;:::-;10443:63;;10399:117;10555:2;10581:53;10626:7;10617:6;10606:9;10602:22;10581:53;:::i;:::-;10571:63;;10526:118;10683:2;10709:53;10754:7;10745:6;10734:9;10730:22;10709:53;:::i;:::-;10699:63;;10654:118;10811:2;10837:53;10882:7;10873:6;10862:9;10858:22;10837:53;:::i;:::-;10827:63;;10782:118;10939:3;10966:53;11011:7;11002:6;10991:9;10987:22;10966:53;:::i;:::-;10956:63;;10910:119;11068:3;11095:53;11140:7;11131:6;11120:9;11116:22;11095:53;:::i;:::-;11085:63;;11039:119;11197:3;11224:53;11269:7;11260:6;11249:9;11245:22;11224:53;:::i;:::-;11214:63;;11168:119;11326:3;11353:53;11398:7;11389:6;11378:9;11374:22;11353:53;:::i;:::-;11343:63;;11297:119;10074:1349;;;;;;;;;;;:::o;11429:442::-;11578:4;11616:2;11605:9;11601:18;11593:26;;11629:71;11697:1;11686:9;11682:17;11673:6;11629:71;:::i;:::-;11710:72;11778:2;11767:9;11763:18;11754:6;11710:72;:::i;:::-;11792;11860:2;11849:9;11845:18;11836:6;11792:72;:::i;:::-;11429:442;;;;;;:::o;11877:169::-;11961:11;11995:6;11990:3;11983:19;12035:4;12030:3;12026:14;12011:29;;11877:169;;;;:::o;12052:166::-;12192:18;12188:1;12180:6;12176:14;12169:42;12052:166;:::o;12224:366::-;12366:3;12387:67;12451:2;12446:3;12387:67;:::i;:::-;12380:74;;12463:93;12552:3;12463:93;:::i;:::-;12581:2;12576:3;12572:12;12565:19;;12224:366;;;:::o;12596:419::-;12762:4;12800:2;12789:9;12785:18;12777:26;;12849:9;12843:4;12839:20;12835:1;12824:9;12820:17;12813:47;12877:131;13003:4;12877:131;:::i;:::-;12869:139;;12596:419;;;:::o;13021:180::-;13069:77;13066:1;13059:88;13166:4;13163:1;13156:15;13190:4;13187:1;13180:15;13207:410;13247:7;13270:20;13288:1;13270:20;:::i;:::-;13265:25;;13304:20;13322:1;13304:20;:::i;:::-;13299:25;;13359:1;13356;13352:9;13381:30;13399:11;13381:30;:::i;:::-;13370:41;;13560:1;13551:7;13547:15;13544:1;13541:22;13521:1;13514:9;13494:83;13471:139;;13590:18;;:::i;:::-;13471:139;13255:362;13207:410;;;;:::o;13623:191::-;13663:3;13682:20;13700:1;13682:20;:::i;:::-;13677:25;;13716:20;13734:1;13716:20;:::i;:::-;13711:25;;13759:1;13756;13752:9;13745:16;;13780:3;13777:1;13774:10;13771:36;;;13787:18;;:::i;:::-;13771:36;13623:191;;;;:::o;13820:180::-;13868:77;13865:1;13858:88;13965:4;13962:1;13955:15;13989:4;13986:1;13979:15;14006:185;14046:1;14063:20;14081:1;14063:20;:::i;:::-;14058:25;;14097:20;14115:1;14097:20;:::i;:::-;14092:25;;14136:1;14126:35;;14141:18;;:::i;:::-;14126:35;14183:1;14180;14176:9;14171:14;;14006:185;;;;:::o;14197:157::-;14337:9;14333:1;14325:6;14321:14;14314:33;14197:157;:::o;14360:365::-;14502:3;14523:66;14587:1;14582:3;14523:66;:::i;:::-;14516:73;;14598:93;14687:3;14598:93;:::i;:::-;14716:2;14711:3;14707:12;14700:19;;14360:365;;;:::o;14731:419::-;14897:4;14935:2;14924:9;14920:18;14912:26;;14984:9;14978:4;14974:20;14970:1;14959:9;14955:17;14948:47;15012:131;15138:4;15012:131;:::i;:::-;15004:139;;14731:419;;;:::o;15156:177::-;15296:29;15292:1;15284:6;15280:14;15273:53;15156:177;:::o;15339:366::-;15481:3;15502:67;15566:2;15561:3;15502:67;:::i;:::-;15495:74;;15578:93;15667:3;15578:93;:::i;:::-;15696:2;15691:3;15687:12;15680:19;;15339:366;;;:::o;15711:419::-;15877:4;15915:2;15904:9;15900:18;15892:26;;15964:9;15958:4;15954:20;15950:1;15939:9;15935:17;15928:47;15992:131;16118:4;15992:131;:::i;:::-;15984:139;;15711:419;;;:::o;16136:180::-;16184:77;16181:1;16174:88;16281:4;16278:1;16271:15;16305:4;16302:1;16295:15;16322:329;16381:6;16430:2;16418:9;16409:7;16405:23;16401:32;16398:119;;;16436:79;;:::i;:::-;16398:119;16556:1;16581:53;16626:7;16617:6;16606:9;16602:22;16581:53;:::i;:::-;16571:63;;16527:117;16322:329;;;;:::o;16657:169::-;16797:21;16793:1;16785:6;16781:14;16774:45;16657:169;:::o;16832:366::-;16974:3;16995:67;17059:2;17054:3;16995:67;:::i;:::-;16988:74;;17071:93;17160:3;17071:93;:::i;:::-;17189:2;17184:3;17180:12;17173:19;;16832:366;;;:::o;17204:419::-;17370:4;17408:2;17397:9;17393:18;17385:26;;17457:9;17451:4;17447:20;17443:1;17432:9;17428:17;17421:47;17485:131;17611:4;17485:131;:::i;:::-;17477:139;;17204:419;;;:::o;17629:180::-;17677:77;17674:1;17667:88;17774:4;17771:1;17764:15;17798:4;17795:1;17788:15;17815:161;17955:13;17951:1;17943:6;17939:14;17932:37;17815:161;:::o;17982:366::-;18124:3;18145:67;18209:2;18204:3;18145:67;:::i;:::-;18138:74;;18221:93;18310:3;18221:93;:::i;:::-;18339:2;18334:3;18330:12;18323:19;;17982:366;;;:::o;18354:419::-;18520:4;18558:2;18547:9;18543:18;18535:26;;18607:9;18601:4;18597:20;18593:1;18582:9;18578:17;18571:47;18635:131;18761:4;18635:131;:::i;:::-;18627:139;;18354:419;;;:::o;18779:162::-;18919:14;18915:1;18907:6;18903:14;18896:38;18779:162;:::o;18947:366::-;19089:3;19110:67;19174:2;19169:3;19110:67;:::i;:::-;19103:74;;19186:93;19275:3;19186:93;:::i;:::-;19304:2;19299:3;19295:12;19288:19;;18947:366;;;:::o;19319:419::-;19485:4;19523:2;19512:9;19508:18;19500:26;;19572:9;19566:4;19562:20;19558:1;19547:9;19543:17;19536:47;19600:131;19726:4;19600:131;:::i;:::-;19592:139;;19319:419;;;:::o;19744:158::-;19884:10;19880:1;19872:6;19868:14;19861:34;19744:158;:::o;19908:365::-;20050:3;20071:66;20135:1;20130:3;20071:66;:::i;:::-;20064:73;;20146:93;20235:3;20146:93;:::i;:::-;20264:2;20259:3;20255:12;20248:19;;19908:365;;;:::o;20279:419::-;20445:4;20483:2;20472:9;20468:18;20460:26;;20532:9;20526:4;20522:20;20518:1;20507:9;20503:17;20496:47;20560:131;20686:4;20560:131;:::i;:::-;20552:139;;20279:419;;;:::o;20704:194::-;20744:4;20764:20;20782:1;20764:20;:::i;:::-;20759:25;;20798:20;20816:1;20798:20;:::i;:::-;20793:25;;20842:1;20839;20835:9;20827:17;;20866:1;20860:4;20857:11;20854:37;;;20871:18;;:::i;:::-;20854:37;20704:194;;;;:::o;20904:223::-;20944:4;20964:20;20982:1;20964:20;:::i;:::-;20959:25;;20998:20;21016:1;20998:20;:::i;:::-;20993:25;;21042:1;21039;21035:9;21027:17;;21066:30;21060:4;21057:40;21054:66;;;21100:18;;:::i;:::-;21054:66;20904:223;;;;:::o;21133:220::-;21173:3;21192:20;21210:1;21192:20;:::i;:::-;21187:25;;21226:20;21244:1;21226:20;:::i;:::-;21221:25;;21269:1;21266;21262:9;21255:16;;21292:30;21287:3;21284:39;21281:65;;;21326:18;;:::i;:::-;21281:65;21133:220;;;;:::o;21359:94::-;21392:8;21440:5;21436:2;21432:14;21411:35;;21359:94;;;:::o;21459:::-;21498:7;21527:20;21541:5;21527:20;:::i;:::-;21516:31;;21459:94;;;:::o;21559:100::-;21598:7;21627:26;21647:5;21627:26;:::i;:::-;21616:37;;21559:100;;;:::o;21665:157::-;21770:45;21790:24;21808:5;21790:24;:::i;:::-;21770:45;:::i;:::-;21765:3;21758:58;21665:157;;:::o;21828:397::-;21968:3;21983:75;22054:3;22045:6;21983:75;:::i;:::-;22083:2;22078:3;22074:12;22067:19;;22096:75;22167:3;22158:6;22096:75;:::i;:::-;22196:2;22191:3;22187:12;22180:19;;22216:3;22209:10;;21828:397;;;;;:::o;22231:118::-;22318:24;22336:5;22318:24;:::i;:::-;22313:3;22306:37;22231:118;;:::o;22355:332::-;22476:4;22514:2;22503:9;22499:18;22491:26;;22527:71;22595:1;22584:9;22580:17;22571:6;22527:71;:::i;:::-;22608:72;22676:2;22665:9;22661:18;22652:6;22608:72;:::i;:::-;22355:332;;;;;:::o;22693:164::-;22833:16;22829:1;22821:6;22817:14;22810:40;22693:164;:::o;22863:366::-;23005:3;23026:67;23090:2;23085:3;23026:67;:::i;:::-;23019:74;;23102:93;23191:3;23102:93;:::i;:::-;23220:2;23215:3;23211:12;23204:19;;22863:366;;;:::o;23235:419::-;23401:4;23439:2;23428:9;23424:18;23416:26;;23488:9;23482:4;23478:20;23474:1;23463:9;23459:17;23452:47;23516:131;23642:4;23516:131;:::i;:::-;23508:139;;23235:419;;;:::o;23660:164::-;23800:16;23796:1;23788:6;23784:14;23777:40;23660:164;:::o;23830:366::-;23972:3;23993:67;24057:2;24052:3;23993:67;:::i;:::-;23986:74;;24069:93;24158:3;24069:93;:::i;:::-;24187:2;24182:3;24178:12;24171:19;;23830:366;;;:::o;24202:419::-;24368:4;24406:2;24395:9;24391:18;24383:26;;24455:9;24449:4;24445:20;24441:1;24430:9;24426:17;24419:47;24483:131;24609:4;24483:131;:::i;:::-;24475:139;;24202:419;;;:::o;24627:442::-;24776:4;24814:2;24803:9;24799:18;24791:26;;24827:71;24895:1;24884:9;24880:17;24871:6;24827:71;:::i;:::-;24908:72;24976:2;24965:9;24961:18;24952:6;24908:72;:::i;:::-;24990;25058:2;25047:9;25043:18;25034:6;24990:72;:::i;:::-;24627:442;;;;;;:::o;25075:222::-;25168:4;25206:2;25195:9;25191:18;25183:26;;25219:71;25287:1;25276:9;25272:17;25263:6;25219:71;:::i;:::-;25075:222;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1651600",
								"executionCost": "1734",
								"totalCost": "1653334"
							},
							"external": {
								"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "infinite",
								"getAmountOut(uint256,uint256,uint256)": "infinite",
								"getPrice(address,address)": "infinite",
								"liquidityBalance(bytes32,address)": "3077",
								"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "infinite",
								"reserves(bytes32)": "infinite",
								"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "infinite",
								"totalLiquidity(bytes32)": "2821"
							},
							"internal": {
								"_calculateLiquidityAmounts(uint112,uint112,uint256,uint256,uint256,uint256)": "infinite",
								"_calculateSwapOutput(uint256,address,address)": "infinite",
								"_getPairHash(address,address)": "infinite",
								"_getSortedReserves(address,address,struct SimpleSwap.Reserve memory)": "infinite",
								"_mintLiquidityAndUpdateReserves(bytes32,uint256,uint256,address,struct SimpleSwap.Reserve storage pointer)": "infinite",
								"_performAddLiquidityTransfers(address,address,uint256,uint256)": "infinite",
								"_performSwapTransfers(address,address,uint256,uint256,address)": "infinite",
								"_updateReservesAfterSwap(address,address,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 544,
									"end": 11469,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 544,
									"end": 11469,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 544,
									"end": 11469,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 544,
									"end": 11469,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 544,
									"end": 11469,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 544,
									"end": 11469,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 544,
									"end": 11469,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 544,
									"end": 11469,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 544,
									"end": 11469,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 544,
									"end": 11469,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 544,
									"end": 11469,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 544,
									"end": 11469,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 544,
									"end": 11469,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 544,
									"end": 11469,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 544,
									"end": 11469,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 544,
									"end": 11469,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 544,
									"end": 11469,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 544,
									"end": 11469,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 544,
									"end": 11469,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 544,
									"end": 11469,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 544,
									"end": 11469,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d5c5981ff7f4e4a2dff9b06db8dbc35c0ca45848e78e5fc82c8167a720ec43d664736f6c634300081e0033",
									".code": [
										{
											"begin": 544,
											"end": 11469,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 544,
											"end": 11469,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 544,
											"end": 11469,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 544,
											"end": 11469,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 544,
											"end": 11469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 544,
											"end": 11469,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 544,
											"end": 11469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 544,
											"end": 11469,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 544,
											"end": 11469,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 544,
											"end": 11469,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 544,
											"end": 11469,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 544,
											"end": 11469,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 544,
											"end": 11469,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 544,
											"end": 11469,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 544,
											"end": 11469,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 544,
											"end": 11469,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 544,
											"end": 11469,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 544,
											"end": 11469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 544,
											"end": 11469,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 544,
											"end": 11469,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 544,
											"end": 11469,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 544,
											"end": 11469,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 544,
											"end": 11469,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 544,
											"end": 11469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 544,
											"end": 11469,
											"name": "PUSH",
											"source": 6,
											"value": "AC41865A"
										},
										{
											"begin": 544,
											"end": 11469,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 544,
											"end": 11469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 544,
											"end": 11469,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 544,
											"end": 11469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 544,
											"end": 11469,
											"name": "PUSH",
											"source": 6,
											"value": "AC41865A"
										},
										{
											"begin": 544,
											"end": 11469,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 544,
											"end": 11469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 544,
											"end": 11469,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 544,
											"end": 11469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 544,
											"end": 11469,
											"name": "PUSH",
											"source": 6,
											"value": "BAA2ABDE"
										},
										{
											"begin": 544,
											"end": 11469,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 544,
											"end": 11469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 544,
											"end": 11469,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 544,
											"end": 11469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 544,
											"end": 11469,
											"name": "PUSH",
											"source": 6,
											"value": "BB521A30"
										},
										{
											"begin": 544,
											"end": 11469,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 544,
											"end": 11469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 544,
											"end": 11469,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 544,
											"end": 11469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 544,
											"end": 11469,
											"name": "PUSH",
											"source": 6,
											"value": "E8E33700"
										},
										{
											"begin": 544,
											"end": 11469,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 544,
											"end": 11469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 544,
											"end": 11469,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 544,
											"end": 11469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 544,
											"end": 11469,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 544,
											"end": 11469,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 544,
											"end": 11469,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 544,
											"end": 11469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 544,
											"end": 11469,
											"name": "PUSH",
											"source": 6,
											"value": "BBF1E4"
										},
										{
											"begin": 544,
											"end": 11469,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 544,
											"end": 11469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 544,
											"end": 11469,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 544,
											"end": 11469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 544,
											"end": 11469,
											"name": "PUSH",
											"source": 6,
											"value": "54D50D4"
										},
										{
											"begin": 544,
											"end": 11469,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 544,
											"end": 11469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 544,
											"end": 11469,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 544,
											"end": 11469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 544,
											"end": 11469,
											"name": "PUSH",
											"source": 6,
											"value": "38ED1739"
										},
										{
											"begin": 544,
											"end": 11469,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 544,
											"end": 11469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 544,
											"end": 11469,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 544,
											"end": 11469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 544,
											"end": 11469,
											"name": "PUSH",
											"source": 6,
											"value": "54B7A8F7"
										},
										{
											"begin": 544,
											"end": 11469,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 544,
											"end": 11469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 544,
											"end": 11469,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 544,
											"end": 11469,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 544,
											"end": 11469,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 544,
											"end": 11469,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 544,
											"end": 11469,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 544,
											"end": 11469,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 803,
											"end": 846,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 803,
											"end": 846,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 803,
											"end": 846,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 803,
											"end": 846,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 803,
											"end": 846,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 803,
											"end": 846,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 803,
											"end": 846,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 803,
											"end": 846,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 803,
											"end": 846,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 803,
											"end": 846,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 803,
											"end": 846,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 803,
											"end": 846,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 803,
											"end": 846,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 803,
											"end": 846,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 803,
											"end": 846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 803,
											"end": 846,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 803,
											"end": 846,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 803,
											"end": 846,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 803,
											"end": 846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 803,
											"end": 846,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 803,
											"end": 846,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 803,
											"end": 846,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 803,
											"end": 846,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 803,
											"end": 846,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 803,
											"end": 846,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 803,
											"end": 846,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 803,
											"end": 846,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 803,
											"end": 846,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 803,
											"end": 846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 803,
											"end": 846,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 803,
											"end": 846,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 803,
											"end": 846,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 803,
											"end": 846,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 803,
											"end": 846,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 803,
											"end": 846,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 803,
											"end": 846,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 803,
											"end": 846,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 803,
											"end": 846,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 6879,
											"end": 7302,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6879,
											"end": 7302,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6879,
											"end": 7302,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 6879,
											"end": 7302,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6879,
											"end": 7302,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6879,
											"end": 7302,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 6879,
											"end": 7302,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6879,
											"end": 7302,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6879,
											"end": 7302,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6879,
											"end": 7302,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6879,
											"end": 7302,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 6879,
											"end": 7302,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6879,
											"end": 7302,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6879,
											"end": 7302,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6879,
											"end": 7302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6879,
											"end": 7302,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 6879,
											"end": 7302,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6879,
											"end": 7302,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 6879,
											"end": 7302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6879,
											"end": 7302,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 6879,
											"end": 7302,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6879,
											"end": 7302,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6879,
											"end": 7302,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6879,
											"end": 7302,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 6879,
											"end": 7302,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6879,
											"end": 7302,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6879,
											"end": 7302,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 6879,
											"end": 7302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6879,
											"end": 7302,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 6879,
											"end": 7302,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6879,
											"end": 7302,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6879,
											"end": 7302,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6879,
											"end": 7302,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6879,
											"end": 7302,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6879,
											"end": 7302,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6879,
											"end": 7302,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6879,
											"end": 7302,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 5060,
											"end": 5997,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 5060,
											"end": 5997,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5060,
											"end": 5997,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5060,
											"end": 5997,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5060,
											"end": 5997,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5060,
											"end": 5997,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 5060,
											"end": 5997,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5060,
											"end": 5997,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5060,
											"end": 5997,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5060,
											"end": 5997,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5060,
											"end": 5997,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 5060,
											"end": 5997,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5060,
											"end": 5997,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5060,
											"end": 5997,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 5060,
											"end": 5997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5060,
											"end": 5997,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 5060,
											"end": 5997,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5060,
											"end": 5997,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 5060,
											"end": 5997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5060,
											"end": 5997,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5060,
											"end": 5997,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5060,
											"end": 5997,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5060,
											"end": 5997,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5060,
											"end": 5997,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 5060,
											"end": 5997,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5060,
											"end": 5997,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5060,
											"end": 5997,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 5060,
											"end": 5997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5060,
											"end": 5997,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 5060,
											"end": 5997,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5060,
											"end": 5997,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5060,
											"end": 5997,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5060,
											"end": 5997,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5060,
											"end": 5997,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5060,
											"end": 5997,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5060,
											"end": 5997,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5060,
											"end": 5997,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 920,
											"end": 966,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 920,
											"end": 966,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 920,
											"end": 966,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 920,
											"end": 966,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 920,
											"end": 966,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 920,
											"end": 966,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 920,
											"end": 966,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 920,
											"end": 966,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 920,
											"end": 966,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 920,
											"end": 966,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 920,
											"end": 966,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 920,
											"end": 966,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 920,
											"end": 966,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 920,
											"end": 966,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 920,
											"end": 966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 920,
											"end": 966,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 920,
											"end": 966,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 920,
											"end": 966,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 920,
											"end": 966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 920,
											"end": 966,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 920,
											"end": 966,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 920,
											"end": 966,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 920,
											"end": 966,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 920,
											"end": 966,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 920,
											"end": 966,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 920,
											"end": 966,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 920,
											"end": 966,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 920,
											"end": 966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 920,
											"end": 966,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 920,
											"end": 966,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 920,
											"end": 966,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 920,
											"end": 966,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 920,
											"end": 966,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 920,
											"end": 966,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 920,
											"end": 966,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 920,
											"end": 966,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 920,
											"end": 966,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 6208,
											"end": 6597,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 6208,
											"end": 6597,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6208,
											"end": 6597,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 6208,
											"end": 6597,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6208,
											"end": 6597,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6208,
											"end": 6597,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 6208,
											"end": 6597,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6208,
											"end": 6597,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6208,
											"end": 6597,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6208,
											"end": 6597,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6208,
											"end": 6597,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 6208,
											"end": 6597,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6208,
											"end": 6597,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6208,
											"end": 6597,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 6208,
											"end": 6597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6208,
											"end": 6597,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 6208,
											"end": 6597,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6208,
											"end": 6597,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 6208,
											"end": 6597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6208,
											"end": 6597,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 6208,
											"end": 6597,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6208,
											"end": 6597,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6208,
											"end": 6597,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6208,
											"end": 6597,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 6208,
											"end": 6597,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6208,
											"end": 6597,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6208,
											"end": 6597,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 6208,
											"end": 6597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6208,
											"end": 6597,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 6208,
											"end": 6597,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6208,
											"end": 6597,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6208,
											"end": 6597,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6208,
											"end": 6597,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6208,
											"end": 6597,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6208,
											"end": 6597,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6208,
											"end": 6597,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6208,
											"end": 6597,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3513,
											"end": 4622,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 3513,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3513,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 3513,
											"end": 4622,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3513,
											"end": 4622,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3513,
											"end": 4622,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3513,
											"end": 4622,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3513,
											"end": 4622,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3513,
											"end": 4622,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3513,
											"end": 4622,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3513,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3513,
											"end": 4622,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3513,
											"end": 4622,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3513,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 3513,
											"end": 4622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3513,
											"end": 4622,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3513,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3513,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 3513,
											"end": 4622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3513,
											"end": 4622,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 3513,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3513,
											"end": 4622,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3513,
											"end": 4622,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3513,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 3513,
											"end": 4622,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3513,
											"end": 4622,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3513,
											"end": 4622,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3513,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3513,
											"end": 4622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3513,
											"end": 4622,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 3513,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3513,
											"end": 4622,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3513,
											"end": 4622,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3513,
											"end": 4622,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3513,
											"end": 4622,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3513,
											"end": 4622,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3513,
											"end": 4622,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3513,
											"end": 4622,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1037,
											"end": 1105,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 1037,
											"end": 1105,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1037,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 1037,
											"end": 1105,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1037,
											"end": 1105,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1037,
											"end": 1105,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1037,
											"end": 1105,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1037,
											"end": 1105,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1037,
											"end": 1105,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1037,
											"end": 1105,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1037,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1037,
											"end": 1105,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1037,
											"end": 1105,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1037,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 1037,
											"end": 1105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1037,
											"end": 1105,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1037,
											"end": 1105,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1037,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 1037,
											"end": 1105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1037,
											"end": 1105,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 1037,
											"end": 1105,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1037,
											"end": 1105,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1037,
											"end": 1105,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1037,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 1037,
											"end": 1105,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1037,
											"end": 1105,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1037,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 1037,
											"end": 1105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1037,
											"end": 1105,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 1037,
											"end": 1105,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1037,
											"end": 1105,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1037,
											"end": 1105,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1037,
											"end": 1105,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1037,
											"end": 1105,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1037,
											"end": 1105,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1037,
											"end": 1105,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1037,
											"end": 1105,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1793,
											"end": 2945,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 1793,
											"end": 2945,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1793,
											"end": 2945,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 1793,
											"end": 2945,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1793,
											"end": 2945,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1793,
											"end": 2945,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1793,
											"end": 2945,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1793,
											"end": 2945,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1793,
											"end": 2945,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1793,
											"end": 2945,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1793,
											"end": 2945,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 1793,
											"end": 2945,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1793,
											"end": 2945,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1793,
											"end": 2945,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 1793,
											"end": 2945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1793,
											"end": 2945,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 1793,
											"end": 2945,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1793,
											"end": 2945,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 1793,
											"end": 2945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1793,
											"end": 2945,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 1793,
											"end": 2945,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1793,
											"end": 2945,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1793,
											"end": 2945,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1793,
											"end": 2945,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 1793,
											"end": 2945,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1793,
											"end": 2945,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1793,
											"end": 2945,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1793,
											"end": 2945,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1793,
											"end": 2945,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 1793,
											"end": 2945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1793,
											"end": 2945,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 1793,
											"end": 2945,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1793,
											"end": 2945,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1793,
											"end": 2945,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1793,
											"end": 2945,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1793,
											"end": 2945,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1793,
											"end": 2945,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1793,
											"end": 2945,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1793,
											"end": 2945,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 803,
											"end": 846,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 803,
											"end": 846,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 803,
											"end": 846,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 803,
											"end": 846,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 803,
											"end": 846,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 803,
											"end": 846,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 803,
											"end": 846,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 803,
											"end": 846,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 803,
											"end": 846,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 803,
											"end": 846,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 803,
											"end": 846,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 803,
											"end": 846,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 803,
											"end": 846,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 803,
											"end": 846,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 803,
											"end": 846,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 803,
											"end": 846,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 803,
											"end": 846,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 803,
											"end": 846,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 803,
											"end": 846,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 803,
											"end": 846,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 803,
											"end": 846,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 803,
											"end": 846,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 803,
											"end": 846,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 803,
											"end": 846,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 803,
											"end": 846,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 803,
											"end": 846,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 803,
											"end": 846,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 803,
											"end": 846,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 803,
											"end": 846,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 803,
											"end": 846,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 803,
											"end": 846,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 803,
											"end": 846,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 803,
											"end": 846,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 803,
											"end": 846,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 803,
											"end": 846,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 803,
											"end": 846,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 803,
											"end": 846,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 803,
											"end": 846,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 803,
											"end": 846,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 803,
											"end": 846,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 803,
											"end": 846,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 803,
											"end": 846,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 803,
											"end": 846,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 803,
											"end": 846,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 803,
											"end": 846,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 803,
											"end": 846,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 803,
											"end": 846,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6879,
											"end": 7302,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 6879,
											"end": 7302,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6970,
											"end": 6984,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7015,
											"end": 7016,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7004,
											"end": 7012,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7004,
											"end": 7016,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 7004,
											"end": 7033,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7004,
											"end": 7033,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7004,
											"end": 7033,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 7004,
											"end": 7033,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7004,
											"end": 7033,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7032,
											"end": 7033,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7020,
											"end": 7029,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7020,
											"end": 7033,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 7004,
											"end": 7033,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 7004,
											"end": 7033,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7004,
											"end": 7051,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7004,
											"end": 7051,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7004,
											"end": 7051,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 7004,
											"end": 7051,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7004,
											"end": 7051,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7050,
											"end": 7051,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7037,
											"end": 7047,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7037,
											"end": 7051,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 7004,
											"end": 7051,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 7004,
											"end": 7051,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6996,
											"end": 7072,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 6996,
											"end": 7072,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6996,
											"end": 7072,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6996,
											"end": 7072,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6996,
											"end": 7072,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6996,
											"end": 7072,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6996,
											"end": 7072,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6996,
											"end": 7072,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6996,
											"end": 7072,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6996,
											"end": 7072,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 6996,
											"end": 7072,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6996,
											"end": 7072,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 6996,
											"end": 7072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6996,
											"end": 7072,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 6996,
											"end": 7072,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6996,
											"end": 7072,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6996,
											"end": 7072,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6996,
											"end": 7072,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6996,
											"end": 7072,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6996,
											"end": 7072,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6996,
											"end": 7072,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6996,
											"end": 7072,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6996,
											"end": 7072,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 6996,
											"end": 7072,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7083,
											"end": 7103,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7117,
											"end": 7120,
											"name": "PUSH",
											"source": 6,
											"value": "3E5"
										},
										{
											"begin": 7106,
											"end": 7114,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7106,
											"end": 7120,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 7106,
											"end": 7120,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7106,
											"end": 7120,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7106,
											"end": 7120,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 7106,
											"end": 7120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7106,
											"end": 7120,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 7106,
											"end": 7120,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7083,
											"end": 7120,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7083,
											"end": 7120,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7142,
											"end": 7156,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7177,
											"end": 7187,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7159,
											"end": 7174,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7159,
											"end": 7187,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 7159,
											"end": 7187,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7159,
											"end": 7187,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7159,
											"end": 7187,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 7159,
											"end": 7187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7159,
											"end": 7187,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 7159,
											"end": 7187,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7142,
											"end": 7187,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7142,
											"end": 7187,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7197,
											"end": 7213,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7235,
											"end": 7250,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7228,
											"end": 7232,
											"name": "PUSH",
											"source": 6,
											"value": "3E8"
										},
										{
											"begin": 7216,
											"end": 7225,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 7216,
											"end": 7232,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 7216,
											"end": 7232,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7216,
											"end": 7232,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7216,
											"end": 7232,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 7216,
											"end": 7232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7216,
											"end": 7232,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 7216,
											"end": 7232,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7216,
											"end": 7250,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 7216,
											"end": 7250,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7216,
											"end": 7250,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7216,
											"end": 7250,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 7216,
											"end": 7250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7216,
											"end": 7250,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 7216,
											"end": 7250,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7197,
											"end": 7250,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7197,
											"end": 7250,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7284,
											"end": 7295,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7272,
											"end": 7281,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7272,
											"end": 7295,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 7272,
											"end": 7295,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7272,
											"end": 7295,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7272,
											"end": 7295,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 7272,
											"end": 7295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7272,
											"end": 7295,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 7272,
											"end": 7295,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7260,
											"end": 7295,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 7260,
											"end": 7295,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6986,
											"end": 7302,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6986,
											"end": 7302,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6986,
											"end": 7302,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6879,
											"end": 7302,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6879,
											"end": 7302,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6879,
											"end": 7302,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6879,
											"end": 7302,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6879,
											"end": 7302,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6879,
											"end": 7302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5060,
											"end": 5997,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 5060,
											"end": 5997,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5244,
											"end": 5265,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5304,
											"end": 5312,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5285,
											"end": 5300,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 5285,
											"end": 5312,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5285,
											"end": 5312,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5277,
											"end": 5324,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 5277,
											"end": 5324,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5277,
											"end": 5324,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5277,
											"end": 5324,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5277,
											"end": 5324,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5277,
											"end": 5324,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5277,
											"end": 5324,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5277,
											"end": 5324,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5277,
											"end": 5324,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5277,
											"end": 5324,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 5277,
											"end": 5324,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5277,
											"end": 5324,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 5277,
											"end": 5324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5277,
											"end": 5324,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 5277,
											"end": 5324,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5277,
											"end": 5324,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5277,
											"end": 5324,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5277,
											"end": 5324,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5277,
											"end": 5324,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5277,
											"end": 5324,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5277,
											"end": 5324,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5277,
											"end": 5324,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5277,
											"end": 5324,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 5277,
											"end": 5324,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5357,
											"end": 5358,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 5342,
											"end": 5346,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5342,
											"end": 5346,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5342,
											"end": 5353,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5342,
											"end": 5353,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5342,
											"end": 5358,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 5334,
											"end": 5390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 5334,
											"end": 5390,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5334,
											"end": 5390,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5334,
											"end": 5390,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5334,
											"end": 5390,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5334,
											"end": 5390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5334,
											"end": 5390,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5334,
											"end": 5390,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5334,
											"end": 5390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5334,
											"end": 5390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 5334,
											"end": 5390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5334,
											"end": 5390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 5334,
											"end": 5390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5334,
											"end": 5390,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 5334,
											"end": 5390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5334,
											"end": 5390,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5334,
											"end": 5390,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5334,
											"end": 5390,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5334,
											"end": 5390,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5334,
											"end": 5390,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5334,
											"end": 5390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5334,
											"end": 5390,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5334,
											"end": 5390,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 5334,
											"end": 5390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5401,
											"end": 5416,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5419,
											"end": 5423,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5419,
											"end": 5423,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5424,
											"end": 5425,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5419,
											"end": 5426,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5419,
											"end": 5426,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5419,
											"end": 5426,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5419,
											"end": 5426,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 5419,
											"end": 5426,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5419,
											"end": 5426,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 5419,
											"end": 5426,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 5419,
											"end": 5426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5419,
											"end": 5426,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 5419,
											"end": 5426,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5419,
											"end": 5426,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 5419,
											"end": 5426,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5419,
											"end": 5426,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5419,
											"end": 5426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5419,
											"end": 5426,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5419,
											"end": 5426,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5419,
											"end": 5426,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5419,
											"end": 5426,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5419,
											"end": 5426,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5419,
											"end": 5426,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5419,
											"end": 5426,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5419,
											"end": 5426,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 5419,
											"end": 5426,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5419,
											"end": 5426,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5419,
											"end": 5426,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 5419,
											"end": 5426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5419,
											"end": 5426,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 5419,
											"end": 5426,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5401,
											"end": 5426,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5401,
											"end": 5426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5436,
											"end": 5452,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5455,
											"end": 5459,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5455,
											"end": 5459,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5460,
											"end": 5461,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5455,
											"end": 5462,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5455,
											"end": 5462,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5455,
											"end": 5462,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5455,
											"end": 5462,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 5455,
											"end": 5462,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5455,
											"end": 5462,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 5455,
											"end": 5462,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 5455,
											"end": 5462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5455,
											"end": 5462,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 5455,
											"end": 5462,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5455,
											"end": 5462,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 5455,
											"end": 5462,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5455,
											"end": 5462,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5455,
											"end": 5462,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5455,
											"end": 5462,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5455,
											"end": 5462,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5455,
											"end": 5462,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5455,
											"end": 5462,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5455,
											"end": 5462,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5455,
											"end": 5462,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5455,
											"end": 5462,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5455,
											"end": 5462,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 5455,
											"end": 5462,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5455,
											"end": 5462,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5455,
											"end": 5462,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 5455,
											"end": 5462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5455,
											"end": 5462,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 5455,
											"end": 5462,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5436,
											"end": 5462,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5436,
											"end": 5462,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5512,
											"end": 5526,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5529,
											"end": 5578,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 5550,
											"end": 5558,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 5560,
											"end": 5567,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5569,
											"end": 5577,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5529,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 5529,
											"end": 5578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5529,
											"end": 5578,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 5529,
											"end": 5578,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5512,
											"end": 5578,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5512,
											"end": 5578,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5609,
											"end": 5621,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 5596,
											"end": 5605,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5596,
											"end": 5621,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5596,
											"end": 5621,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5588,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 5588,
											"end": 5645,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5588,
											"end": 5645,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5588,
											"end": 5645,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5588,
											"end": 5645,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5588,
											"end": 5645,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5588,
											"end": 5645,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5588,
											"end": 5645,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5588,
											"end": 5645,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5588,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 5588,
											"end": 5645,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5588,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 5588,
											"end": 5645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5588,
											"end": 5645,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 5588,
											"end": 5645,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5588,
											"end": 5645,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5588,
											"end": 5645,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5588,
											"end": 5645,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5588,
											"end": 5645,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5588,
											"end": 5645,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5588,
											"end": 5645,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5588,
											"end": 5645,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5588,
											"end": 5645,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 5588,
											"end": 5645,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5690,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 5712,
											"end": 5719,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5721,
											"end": 5729,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5731,
											"end": 5739,
											"name": "DUP13",
											"source": 6
										},
										{
											"begin": 5741,
											"end": 5750,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5752,
											"end": 5754,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 5690,
											"end": 5711,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 5690,
											"end": 5755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5690,
											"end": 5755,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 5690,
											"end": 5755,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5793,
											"end": 5857,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 5818,
											"end": 5825,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5827,
											"end": 5835,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5837,
											"end": 5845,
											"name": "DUP13",
											"source": 6
										},
										{
											"begin": 5847,
											"end": 5856,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5793,
											"end": 5817,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 5793,
											"end": 5857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5793,
											"end": 5857,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 5793,
											"end": 5857,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5925,
											"end": 5926,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 5914,
											"end": 5927,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5914,
											"end": 5927,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5914,
											"end": 5927,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5914,
											"end": 5927,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5914,
											"end": 5927,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 5914,
											"end": 5927,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5914,
											"end": 5927,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 5914,
											"end": 5927,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 5914,
											"end": 5927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5914,
											"end": 5927,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 5914,
											"end": 5927,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5914,
											"end": 5927,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 5914,
											"end": 5927,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5914,
											"end": 5927,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5914,
											"end": 5927,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5914,
											"end": 5927,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5914,
											"end": 5927,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5914,
											"end": 5927,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5914,
											"end": 5927,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5914,
											"end": 5927,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5914,
											"end": 5927,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5914,
											"end": 5927,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5914,
											"end": 5927,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5914,
											"end": 5927,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5914,
											"end": 5927,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5914,
											"end": 5927,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5914,
											"end": 5927,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5914,
											"end": 5927,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5914,
											"end": 5927,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5914,
											"end": 5927,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5914,
											"end": 5927,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 5914,
											"end": 5927,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5914,
											"end": 5927,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5914,
											"end": 5927,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5914,
											"end": 5927,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5914,
											"end": 5927,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5914,
											"end": 5927,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5914,
											"end": 5927,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5914,
											"end": 5927,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5914,
											"end": 5927,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 5914,
											"end": 5927,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5914,
											"end": 5927,
											"name": "CALLDATACOPY",
											"source": 6
										},
										{
											"begin": 5914,
											"end": 5927,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5914,
											"end": 5927,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5914,
											"end": 5927,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5914,
											"end": 5927,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5914,
											"end": 5927,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5914,
											"end": 5927,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5914,
											"end": 5927,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5914,
											"end": 5927,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5914,
											"end": 5927,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 5914,
											"end": 5927,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5914,
											"end": 5927,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5904,
											"end": 5927,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5904,
											"end": 5927,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5950,
											"end": 5958,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 5937,
											"end": 5944,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5945,
											"end": 5946,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5937,
											"end": 5947,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5937,
											"end": 5947,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5937,
											"end": 5947,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5937,
											"end": 5947,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5937,
											"end": 5947,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 5937,
											"end": 5947,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5937,
											"end": 5947,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 5937,
											"end": 5947,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 5937,
											"end": 5947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5937,
											"end": 5947,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 5937,
											"end": 5947,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5937,
											"end": 5947,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 5937,
											"end": 5947,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5937,
											"end": 5947,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5937,
											"end": 5947,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5937,
											"end": 5947,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5937,
											"end": 5947,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5937,
											"end": 5947,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5937,
											"end": 5958,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5937,
											"end": 5958,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5937,
											"end": 5958,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5937,
											"end": 5958,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5937,
											"end": 5958,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5981,
											"end": 5990,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5968,
											"end": 5975,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5976,
											"end": 5977,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5968,
											"end": 5978,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5968,
											"end": 5978,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5968,
											"end": 5978,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5968,
											"end": 5978,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5968,
											"end": 5978,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 5968,
											"end": 5978,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5968,
											"end": 5978,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 5968,
											"end": 5978,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 5968,
											"end": 5978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5968,
											"end": 5978,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 5968,
											"end": 5978,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5968,
											"end": 5978,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 5968,
											"end": 5978,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5968,
											"end": 5978,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5968,
											"end": 5978,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5968,
											"end": 5978,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5968,
											"end": 5978,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5968,
											"end": 5978,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5968,
											"end": 5990,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5968,
											"end": 5990,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5968,
											"end": 5990,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5968,
											"end": 5990,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5968,
											"end": 5990,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5267,
											"end": 5997,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5267,
											"end": 5997,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5267,
											"end": 5997,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5060,
											"end": 5997,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 5060,
											"end": 5997,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 5060,
											"end": 5997,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5060,
											"end": 5997,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5060,
											"end": 5997,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5060,
											"end": 5997,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5060,
											"end": 5997,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5060,
											"end": 5997,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5060,
											"end": 5997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 920,
											"end": 966,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 920,
											"end": 966,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 920,
											"end": 966,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 920,
											"end": 966,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 920,
											"end": 966,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 920,
											"end": 966,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 920,
											"end": 966,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 920,
											"end": 966,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 920,
											"end": 966,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 920,
											"end": 966,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 920,
											"end": 966,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 920,
											"end": 966,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 920,
											"end": 966,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 920,
											"end": 966,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 920,
											"end": 966,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 920,
											"end": 966,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 920,
											"end": 966,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 920,
											"end": 966,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 920,
											"end": 966,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6208,
											"end": 6597,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 6208,
											"end": 6597,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6281,
											"end": 6291,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6303,
											"end": 6319,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6322,
											"end": 6350,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 6335,
											"end": 6341,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6343,
											"end": 6349,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6322,
											"end": 6334,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 6322,
											"end": 6350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6322,
											"end": 6350,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 6322,
											"end": 6350,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6303,
											"end": 6350,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6303,
											"end": 6350,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6381,
											"end": 6389,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6381,
											"end": 6399,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6390,
											"end": 6398,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6381,
											"end": 6399,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6381,
											"end": 6399,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6381,
											"end": 6399,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6381,
											"end": 6399,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6381,
											"end": 6399,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6381,
											"end": 6399,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6381,
											"end": 6399,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6381,
											"end": 6399,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6381,
											"end": 6399,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6381,
											"end": 6399,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6381,
											"end": 6399,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6360,
											"end": 6399,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6360,
											"end": 6399,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6360,
											"end": 6399,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6360,
											"end": 6399,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6360,
											"end": 6399,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6360,
											"end": 6399,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6360,
											"end": 6399,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6360,
											"end": 6399,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6360,
											"end": 6399,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6360,
											"end": 6399,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6360,
											"end": 6399,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6360,
											"end": 6399,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6360,
											"end": 6399,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6360,
											"end": 6399,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6360,
											"end": 6399,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6360,
											"end": 6399,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6360,
											"end": 6399,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 6360,
											"end": 6399,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 6360,
											"end": 6399,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6360,
											"end": 6399,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 6360,
											"end": 6399,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6399,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6360,
											"end": 6399,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6399,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6360,
											"end": 6399,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6399,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6360,
											"end": 6399,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6360,
											"end": 6399,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6360,
											"end": 6399,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6360,
											"end": 6399,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6360,
											"end": 6399,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6360,
											"end": 6399,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6360,
											"end": 6399,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6360,
											"end": 6399,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 6360,
											"end": 6399,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6360,
											"end": 6399,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6360,
											"end": 6399,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6360,
											"end": 6399,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 6360,
											"end": 6399,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 6360,
											"end": 6399,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6360,
											"end": 6399,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 6360,
											"end": 6399,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6399,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6360,
											"end": 6399,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6399,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6360,
											"end": 6399,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6399,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6360,
											"end": 6399,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6360,
											"end": 6399,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6360,
											"end": 6399,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6360,
											"end": 6399,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6360,
											"end": 6399,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6360,
											"end": 6399,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6411,
											"end": 6424,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6426,
											"end": 6439,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6443,
											"end": 6482,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 6462,
											"end": 6468,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 6470,
											"end": 6476,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 6478,
											"end": 6481,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6443,
											"end": 6461,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 6443,
											"end": 6482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6443,
											"end": 6482,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 6443,
											"end": 6482,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6410,
											"end": 6482,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6410,
											"end": 6482,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6410,
											"end": 6482,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6410,
											"end": 6482,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6511,
											"end": 6512,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6500,
											"end": 6508,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6500,
											"end": 6512,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6500,
											"end": 6528,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6500,
											"end": 6528,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6500,
											"end": 6528,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 6500,
											"end": 6528,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6500,
											"end": 6528,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6527,
											"end": 6528,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6516,
											"end": 6524,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6516,
											"end": 6528,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6500,
											"end": 6528,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 6500,
											"end": 6528,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6492,
											"end": 6544,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 6492,
											"end": 6544,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6492,
											"end": 6544,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6492,
											"end": 6544,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6492,
											"end": 6544,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6492,
											"end": 6544,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6492,
											"end": 6544,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6492,
											"end": 6544,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6492,
											"end": 6544,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6492,
											"end": 6544,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 6492,
											"end": 6544,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6492,
											"end": 6544,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 6492,
											"end": 6544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6492,
											"end": 6544,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 6492,
											"end": 6544,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6492,
											"end": 6544,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6492,
											"end": 6544,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6492,
											"end": 6544,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6492,
											"end": 6544,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6492,
											"end": 6544,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6492,
											"end": 6544,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6492,
											"end": 6544,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6492,
											"end": 6544,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 6492,
											"end": 6544,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6582,
											"end": 6590,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6574,
											"end": 6578,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 6563,
											"end": 6571,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6563,
											"end": 6578,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 6563,
											"end": 6578,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6563,
											"end": 6578,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6563,
											"end": 6578,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 6563,
											"end": 6578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6563,
											"end": 6578,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 6563,
											"end": 6578,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6562,
											"end": 6590,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 6562,
											"end": 6590,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6562,
											"end": 6590,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6562,
											"end": 6590,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 6562,
											"end": 6590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6562,
											"end": 6590,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 6562,
											"end": 6590,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6554,
											"end": 6590,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 6554,
											"end": 6590,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6293,
											"end": 6597,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6293,
											"end": 6597,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6293,
											"end": 6597,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6293,
											"end": 6597,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6208,
											"end": 6597,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6208,
											"end": 6597,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6208,
											"end": 6597,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6208,
											"end": 6597,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6208,
											"end": 6597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3513,
											"end": 4622,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 3513,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3727,
											"end": 3739,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3741,
											"end": 3753,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3792,
											"end": 3800,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3773,
											"end": 3788,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 3773,
											"end": 3800,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3773,
											"end": 3800,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3765,
											"end": 3812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 3765,
											"end": 3812,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3765,
											"end": 3812,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3765,
											"end": 3812,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3765,
											"end": 3812,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3765,
											"end": 3812,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3765,
											"end": 3812,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3765,
											"end": 3812,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3765,
											"end": 3812,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3765,
											"end": 3812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 3765,
											"end": 3812,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3765,
											"end": 3812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 3765,
											"end": 3812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3765,
											"end": 3812,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 3765,
											"end": 3812,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3765,
											"end": 3812,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3765,
											"end": 3812,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3765,
											"end": 3812,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3765,
											"end": 3812,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3765,
											"end": 3812,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3765,
											"end": 3812,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3765,
											"end": 3812,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3765,
											"end": 3812,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 3765,
											"end": 3812,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3823,
											"end": 3839,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3842,
											"end": 3870,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 3855,
											"end": 3861,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 3863,
											"end": 3869,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 3842,
											"end": 3854,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 3842,
											"end": 3870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3842,
											"end": 3870,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 3842,
											"end": 3870,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3823,
											"end": 3870,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3823,
											"end": 3870,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3880,
											"end": 3899,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3902,
											"end": 3910,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3902,
											"end": 3920,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3911,
											"end": 3919,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3902,
											"end": 3920,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3902,
											"end": 3920,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3902,
											"end": 3920,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3902,
											"end": 3920,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3902,
											"end": 3920,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3902,
											"end": 3920,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3902,
											"end": 3920,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3902,
											"end": 3920,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3902,
											"end": 3920,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3902,
											"end": 3920,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3902,
											"end": 3920,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3880,
											"end": 3920,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3880,
											"end": 3920,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3930,
											"end": 3940,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3943,
											"end": 3957,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3943,
											"end": 3967,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3958,
											"end": 3966,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3943,
											"end": 3967,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3943,
											"end": 3967,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3943,
											"end": 3967,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3943,
											"end": 3967,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3943,
											"end": 3967,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3943,
											"end": 3967,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3943,
											"end": 3967,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3943,
											"end": 3967,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3943,
											"end": 3967,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3943,
											"end": 3967,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3943,
											"end": 3967,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3943,
											"end": 3967,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3930,
											"end": 3967,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3930,
											"end": 3967,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3993,
											"end": 3994,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3985,
											"end": 3990,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3985,
											"end": 3994,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3977,
											"end": 4011,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 3977,
											"end": 4011,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3977,
											"end": 4011,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3977,
											"end": 4011,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3977,
											"end": 4011,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3977,
											"end": 4011,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3977,
											"end": 4011,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3977,
											"end": 4011,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3977,
											"end": 4011,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3977,
											"end": 4011,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 3977,
											"end": 4011,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3977,
											"end": 4011,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 3977,
											"end": 4011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3977,
											"end": 4011,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 3977,
											"end": 4011,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3977,
											"end": 4011,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3977,
											"end": 4011,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3977,
											"end": 4011,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3977,
											"end": 4011,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3977,
											"end": 4011,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3977,
											"end": 4011,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3977,
											"end": 4011,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3977,
											"end": 4011,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 3977,
											"end": 4011,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4105,
											"end": 4110,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4102,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 4078,
											"end": 4081,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4078,
											"end": 4090,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4078,
											"end": 4090,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4078,
											"end": 4090,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4078,
											"end": 4090,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4078,
											"end": 4090,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4078,
											"end": 4090,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4078,
											"end": 4090,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4078,
											"end": 4090,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4078,
											"end": 4090,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4078,
											"end": 4090,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4078,
											"end": 4090,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4078,
											"end": 4090,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4078,
											"end": 4102,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4078,
											"end": 4102,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4078,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 4078,
											"end": 4102,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4078,
											"end": 4102,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4078,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 4078,
											"end": 4102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4078,
											"end": 4102,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 4078,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4078,
											"end": 4110,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 4078,
											"end": 4110,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4078,
											"end": 4110,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4078,
											"end": 4110,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 4078,
											"end": 4110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4078,
											"end": 4110,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 4078,
											"end": 4110,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4068,
											"end": 4110,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 4068,
											"end": 4110,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4157,
											"end": 4162,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4145,
											"end": 4154,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 4130,
											"end": 4133,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4130,
											"end": 4142,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4130,
											"end": 4142,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4130,
											"end": 4142,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 4130,
											"end": 4142,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4130,
											"end": 4142,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4130,
											"end": 4142,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4130,
											"end": 4142,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4130,
											"end": 4142,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4130,
											"end": 4142,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4130,
											"end": 4142,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4130,
											"end": 4142,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4130,
											"end": 4142,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4130,
											"end": 4154,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4130,
											"end": 4154,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4130,
											"end": 4154,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 4130,
											"end": 4154,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4130,
											"end": 4154,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4130,
											"end": 4154,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 4130,
											"end": 4154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4130,
											"end": 4154,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 4130,
											"end": 4154,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4130,
											"end": 4162,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 4130,
											"end": 4162,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4130,
											"end": 4162,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4130,
											"end": 4162,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 4130,
											"end": 4162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4130,
											"end": 4162,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 4130,
											"end": 4162,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4120,
											"end": 4162,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4120,
											"end": 4162,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4192,
											"end": 4202,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 4181,
											"end": 4188,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4181,
											"end": 4202,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4181,
											"end": 4202,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4181,
											"end": 4227,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4181,
											"end": 4227,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4181,
											"end": 4227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 4181,
											"end": 4227,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4181,
											"end": 4227,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4217,
											"end": 4227,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4206,
											"end": 4213,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4206,
											"end": 4227,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4206,
											"end": 4227,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4181,
											"end": 4227,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 4181,
											"end": 4227,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4173,
											"end": 4240,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 4173,
											"end": 4240,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4173,
											"end": 4240,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4173,
											"end": 4240,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4173,
											"end": 4240,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4173,
											"end": 4240,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4173,
											"end": 4240,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4173,
											"end": 4240,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4173,
											"end": 4240,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4173,
											"end": 4240,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 4173,
											"end": 4240,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4173,
											"end": 4240,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 4173,
											"end": 4240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4173,
											"end": 4240,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 4173,
											"end": 4240,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4173,
											"end": 4240,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4173,
											"end": 4240,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4173,
											"end": 4240,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4173,
											"end": 4240,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4173,
											"end": 4240,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4173,
											"end": 4240,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4173,
											"end": 4240,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4173,
											"end": 4240,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 4173,
											"end": 4240,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4338,
											"end": 4347,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 4296,
											"end": 4312,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 4296,
											"end": 4322,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4313,
											"end": 4321,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4296,
											"end": 4322,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4296,
											"end": 4322,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4296,
											"end": 4322,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4296,
											"end": 4322,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4296,
											"end": 4322,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4296,
											"end": 4322,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4296,
											"end": 4322,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4296,
											"end": 4322,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4296,
											"end": 4322,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4296,
											"end": 4322,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4296,
											"end": 4322,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4296,
											"end": 4334,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4323,
											"end": 4333,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4296,
											"end": 4334,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4296,
											"end": 4334,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4296,
											"end": 4334,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4296,
											"end": 4334,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4296,
											"end": 4334,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4296,
											"end": 4334,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4296,
											"end": 4334,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4296,
											"end": 4334,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4296,
											"end": 4334,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4296,
											"end": 4334,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4296,
											"end": 4334,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4296,
											"end": 4334,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4296,
											"end": 4334,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4296,
											"end": 4334,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4296,
											"end": 4334,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4296,
											"end": 4334,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4296,
											"end": 4347,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4296,
											"end": 4347,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4296,
											"end": 4347,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4296,
											"end": 4347,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 4296,
											"end": 4347,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4296,
											"end": 4347,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4296,
											"end": 4347,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 4296,
											"end": 4347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4296,
											"end": 4347,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 4296,
											"end": 4347,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4296,
											"end": 4347,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4296,
											"end": 4347,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4296,
											"end": 4347,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4296,
											"end": 4347,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4296,
											"end": 4347,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4296,
											"end": 4347,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4296,
											"end": 4347,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4385,
											"end": 4394,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 4357,
											"end": 4371,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4357,
											"end": 4381,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4372,
											"end": 4380,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4357,
											"end": 4381,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4357,
											"end": 4381,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4357,
											"end": 4381,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4357,
											"end": 4381,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4357,
											"end": 4381,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4357,
											"end": 4381,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4357,
											"end": 4381,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4357,
											"end": 4381,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4357,
											"end": 4381,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4357,
											"end": 4381,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4357,
											"end": 4381,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4357,
											"end": 4381,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4357,
											"end": 4394,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4357,
											"end": 4394,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4357,
											"end": 4394,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4357,
											"end": 4394,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 4357,
											"end": 4394,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4357,
											"end": 4394,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4357,
											"end": 4394,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 4357,
											"end": 4394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4357,
											"end": 4394,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 4357,
											"end": 4394,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4357,
											"end": 4394,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4357,
											"end": 4394,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4357,
											"end": 4394,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4357,
											"end": 4394,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4357,
											"end": 4394,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4357,
											"end": 4394,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4357,
											"end": 4394,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4435,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4404,
											"end": 4407,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4404,
											"end": 4416,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4404,
											"end": 4416,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4404,
											"end": 4416,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4404,
											"end": 4436,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4404,
											"end": 4436,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4404,
											"end": 4436,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4404,
											"end": 4436,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4404,
											"end": 4436,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4404,
											"end": 4436,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4404,
											"end": 4436,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4404,
											"end": 4436,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4404,
											"end": 4436,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4404,
											"end": 4436,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4404,
											"end": 4436,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4404,
											"end": 4436,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4404,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 4404,
											"end": 4436,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4404,
											"end": 4436,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4404,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 4404,
											"end": 4436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4404,
											"end": 4436,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 4404,
											"end": 4436,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4404,
											"end": 4436,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4404,
											"end": 4436,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4404,
											"end": 4436,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4404,
											"end": 4436,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4404,
											"end": 4436,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4404,
											"end": 4436,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4404,
											"end": 4436,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4404,
											"end": 4436,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4404,
											"end": 4436,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4404,
											"end": 4436,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 4404,
											"end": 4436,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4404,
											"end": 4436,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4404,
											"end": 4436,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4404,
											"end": 4436,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4404,
											"end": 4436,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4404,
											"end": 4436,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4404,
											"end": 4436,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 4404,
											"end": 4436,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4404,
											"end": 4436,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4404,
											"end": 4436,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4470,
											"end": 4477,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4446,
											"end": 4449,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4446,
											"end": 4458,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4446,
											"end": 4458,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4446,
											"end": 4458,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 4446,
											"end": 4478,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4446,
											"end": 4478,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4446,
											"end": 4478,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4446,
											"end": 4478,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4446,
											"end": 4478,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4446,
											"end": 4478,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4446,
											"end": 4478,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4446,
											"end": 4478,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4446,
											"end": 4478,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4446,
											"end": 4478,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4446,
											"end": 4478,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4446,
											"end": 4478,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4446,
											"end": 4478,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 4446,
											"end": 4478,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4446,
											"end": 4478,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4446,
											"end": 4478,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 4446,
											"end": 4478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4446,
											"end": 4478,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 4446,
											"end": 4478,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4446,
											"end": 4478,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4446,
											"end": 4478,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4446,
											"end": 4478,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4446,
											"end": 4478,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4446,
											"end": 4478,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4446,
											"end": 4478,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4446,
											"end": 4478,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4446,
											"end": 4478,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4446,
											"end": 4478,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4446,
											"end": 4478,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 4446,
											"end": 4478,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4446,
											"end": 4478,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4446,
											"end": 4478,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4446,
											"end": 4478,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4446,
											"end": 4478,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4446,
											"end": 4478,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4446,
											"end": 4478,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 4446,
											"end": 4478,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4446,
											"end": 4478,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4446,
											"end": 4478,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4525,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 4553,
											"end": 4555,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4557,
											"end": 4564,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4532,
											"end": 4538,
											"name": "DUP15",
											"source": 6
										},
										{
											"begin": 4525,
											"end": 4552,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4525,
											"end": 4552,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4525,
											"end": 4552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 4525,
											"end": 4552,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4525,
											"end": 4565,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4525,
											"end": 4565,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4525,
											"end": 4565,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4525,
											"end": 4565,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4525,
											"end": 4565,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4525,
											"end": 4565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4525,
											"end": 4565,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 4525,
											"end": 4565,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4575,
											"end": 4615,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 4603,
											"end": 4605,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4607,
											"end": 4614,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4582,
											"end": 4588,
											"name": "DUP14",
											"source": 6
										},
										{
											"begin": 4575,
											"end": 4602,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4575,
											"end": 4602,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4575,
											"end": 4602,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 4575,
											"end": 4602,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4575,
											"end": 4615,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4575,
											"end": 4615,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4575,
											"end": 4615,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4575,
											"end": 4615,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4575,
											"end": 4615,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4575,
											"end": 4615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4575,
											"end": 4615,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 4575,
											"end": 4615,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3755,
											"end": 4622,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3755,
											"end": 4622,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3755,
											"end": 4622,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3513,
											"end": 4622,
											"name": "SWAP8",
											"source": 6
										},
										{
											"begin": 3513,
											"end": 4622,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3513,
											"end": 4622,
											"name": "SWAP8",
											"source": 6
										},
										{
											"begin": 3513,
											"end": 4622,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 3513,
											"end": 4622,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3513,
											"end": 4622,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3513,
											"end": 4622,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3513,
											"end": 4622,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3513,
											"end": 4622,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3513,
											"end": 4622,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3513,
											"end": 4622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1037,
											"end": 1105,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 1037,
											"end": 1105,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1037,
											"end": 1105,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1037,
											"end": 1105,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1037,
											"end": 1105,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1037,
											"end": 1105,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1037,
											"end": 1105,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1037,
											"end": 1105,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1037,
											"end": 1105,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1037,
											"end": 1105,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1037,
											"end": 1105,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1037,
											"end": 1105,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1037,
											"end": 1105,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1037,
											"end": 1105,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1037,
											"end": 1105,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1037,
											"end": 1105,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1037,
											"end": 1105,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1037,
											"end": 1105,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1037,
											"end": 1105,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1037,
											"end": 1105,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1037,
											"end": 1105,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1037,
											"end": 1105,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1037,
											"end": 1105,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1037,
											"end": 1105,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1037,
											"end": 1105,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1037,
											"end": 1105,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1037,
											"end": 1105,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1037,
											"end": 1105,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1793,
											"end": 2945,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 1793,
											"end": 2945,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2050,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2052,
											"end": 2064,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2066,
											"end": 2080,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2119,
											"end": 2127,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2100,
											"end": 2115,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 2100,
											"end": 2127,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2100,
											"end": 2127,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2092,
											"end": 2139,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 2092,
											"end": 2139,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2092,
											"end": 2139,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2092,
											"end": 2139,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2092,
											"end": 2139,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2092,
											"end": 2139,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2092,
											"end": 2139,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2092,
											"end": 2139,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2092,
											"end": 2139,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2092,
											"end": 2139,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 2092,
											"end": 2139,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2092,
											"end": 2139,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 2092,
											"end": 2139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2092,
											"end": 2139,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 2092,
											"end": 2139,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2092,
											"end": 2139,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2092,
											"end": 2139,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2092,
											"end": 2139,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2092,
											"end": 2139,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2092,
											"end": 2139,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2092,
											"end": 2139,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2092,
											"end": 2139,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2092,
											"end": 2139,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 2092,
											"end": 2139,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2150,
											"end": 2166,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2197,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 2182,
											"end": 2188,
											"name": "DUP13",
											"source": 6
										},
										{
											"begin": 2190,
											"end": 2196,
											"name": "DUP13",
											"source": 6
										},
										{
											"begin": 2169,
											"end": 2181,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 2169,
											"end": 2197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2169,
											"end": 2197,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 2169,
											"end": 2197,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2150,
											"end": 2197,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2150,
											"end": 2197,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2207,
											"end": 2226,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2229,
											"end": 2237,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2229,
											"end": 2247,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2238,
											"end": 2246,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2229,
											"end": 2247,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2229,
											"end": 2247,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2229,
											"end": 2247,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2229,
											"end": 2247,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2229,
											"end": 2247,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2229,
											"end": 2247,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2229,
											"end": 2247,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2229,
											"end": 2247,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2229,
											"end": 2247,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2229,
											"end": 2247,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2229,
											"end": 2247,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2207,
											"end": 2247,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2207,
											"end": 2247,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2418,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 2458,
											"end": 2461,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2458,
											"end": 2470,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2458,
											"end": 2470,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2458,
											"end": 2470,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2458,
											"end": 2470,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2458,
											"end": 2470,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2458,
											"end": 2470,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2458,
											"end": 2470,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2458,
											"end": 2470,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2458,
											"end": 2470,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2458,
											"end": 2470,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2458,
											"end": 2470,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2458,
											"end": 2470,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2487,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2496,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2484,
											"end": 2496,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2496,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 2484,
											"end": 2496,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2496,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2496,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2496,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2484,
											"end": 2496,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2496,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2496,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2496,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2484,
											"end": 2496,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2510,
											"end": 2524,
											"name": "DUP14",
											"source": 6
										},
										{
											"begin": 2538,
											"end": 2552,
											"name": "DUP14",
											"source": 6
										},
										{
											"begin": 2566,
											"end": 2576,
											"name": "DUP14",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2600,
											"name": "DUP14",
											"source": 6
										},
										{
											"begin": 2418,
											"end": 2444,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 2418,
											"end": 2610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2418,
											"end": 2610,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 2418,
											"end": 2610,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2397,
											"end": 2610,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2397,
											"end": 2610,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 2397,
											"end": 2610,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2397,
											"end": 2610,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2397,
											"end": 2610,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 2397,
											"end": 2610,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2397,
											"end": 2610,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2397,
											"end": 2610,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2656,
											"end": 2719,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 2686,
											"end": 2692,
											"name": "DUP14",
											"source": 6
										},
										{
											"begin": 2694,
											"end": 2700,
											"name": "DUP14",
											"source": 6
										},
										{
											"begin": 2702,
											"end": 2709,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2711,
											"end": 2718,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2656,
											"end": 2685,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 2656,
											"end": 2719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2656,
											"end": 2719,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 2656,
											"end": 2719,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2870,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 2902,
											"end": 2910,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 2919,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2921,
											"end": 2928,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2930,
											"end": 2932,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2870,
											"end": 2901,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 2870,
											"end": 2938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2870,
											"end": 2938,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 2870,
											"end": 2938,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2858,
											"end": 2938,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2858,
											"end": 2938,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2082,
											"end": 2945,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2082,
											"end": 2945,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1793,
											"end": 2945,
											"name": "SWAP9",
											"source": 6
										},
										{
											"begin": 1793,
											"end": 2945,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1793,
											"end": 2945,
											"name": "SWAP9",
											"source": 6
										},
										{
											"begin": 1793,
											"end": 2945,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1793,
											"end": 2945,
											"name": "SWAP9",
											"source": 6
										},
										{
											"begin": 1793,
											"end": 2945,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 1793,
											"end": 2945,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1793,
											"end": 2945,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1793,
											"end": 2945,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1793,
											"end": 2945,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1793,
											"end": 2945,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1793,
											"end": 2945,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1793,
											"end": 2945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9657,
											"end": 10032,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 9657,
											"end": 10032,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9760,
											"end": 9764,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9776,
											"end": 9792,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9795,
											"end": 9826,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 9808,
											"end": 9815,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9817,
											"end": 9825,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9795,
											"end": 9807,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 9795,
											"end": 9826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9795,
											"end": 9826,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 9795,
											"end": 9826,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9776,
											"end": 9826,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9776,
											"end": 9826,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9836,
											"end": 9854,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9857,
											"end": 9865,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9857,
											"end": 9875,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9866,
											"end": 9874,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9857,
											"end": 9875,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9857,
											"end": 9875,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9857,
											"end": 9875,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9857,
											"end": 9875,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9857,
											"end": 9875,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9857,
											"end": 9875,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9857,
											"end": 9875,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9857,
											"end": 9875,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9857,
											"end": 9875,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9857,
											"end": 9875,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9857,
											"end": 9875,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 9836,
											"end": 9875,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9836,
											"end": 9875,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9836,
											"end": 9875,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9836,
											"end": 9875,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9836,
											"end": 9875,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9836,
											"end": 9875,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9836,
											"end": 9875,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9836,
											"end": 9875,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9836,
											"end": 9875,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9836,
											"end": 9875,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9836,
											"end": 9875,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9836,
											"end": 9875,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9836,
											"end": 9875,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9836,
											"end": 9875,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9836,
											"end": 9875,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9836,
											"end": 9875,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9836,
											"end": 9875,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 9836,
											"end": 9875,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 9836,
											"end": 9875,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9836,
											"end": 9875,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 9836,
											"end": 9875,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9836,
											"end": 9875,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9836,
											"end": 9875,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9836,
											"end": 9875,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9836,
											"end": 9875,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9836,
											"end": 9875,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9836,
											"end": 9875,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9836,
											"end": 9875,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9836,
											"end": 9875,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9836,
											"end": 9875,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9836,
											"end": 9875,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9836,
											"end": 9875,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9836,
											"end": 9875,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9836,
											"end": 9875,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 9836,
											"end": 9875,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9836,
											"end": 9875,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9836,
											"end": 9875,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9836,
											"end": 9875,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 9836,
											"end": 9875,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 9836,
											"end": 9875,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9836,
											"end": 9875,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 9836,
											"end": 9875,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9836,
											"end": 9875,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9836,
											"end": 9875,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9836,
											"end": 9875,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9836,
											"end": 9875,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9836,
											"end": 9875,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9836,
											"end": 9875,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9836,
											"end": 9875,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9836,
											"end": 9875,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9836,
											"end": 9875,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9836,
											"end": 9875,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9836,
											"end": 9875,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9886,
											"end": 9900,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9902,
											"end": 9917,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9921,
											"end": 9963,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 9940,
											"end": 9947,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 9949,
											"end": 9957,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 9959,
											"end": 9962,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9921,
											"end": 9939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 9921,
											"end": 9963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9921,
											"end": 9963,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 9921,
											"end": 9963,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9885,
											"end": 9963,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9885,
											"end": 9963,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9885,
											"end": 9963,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9885,
											"end": 9963,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9980,
											"end": 10025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 9993,
											"end": 10001,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 10003,
											"end": 10012,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10014,
											"end": 10024,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9980,
											"end": 9992,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 9980,
											"end": 10025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9980,
											"end": 10025,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 9980,
											"end": 10025,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9973,
											"end": 10025,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 9973,
											"end": 10025,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9973,
											"end": 10025,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9973,
											"end": 10025,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9973,
											"end": 10025,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9973,
											"end": 10025,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9657,
											"end": 10032,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 9657,
											"end": 10032,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9657,
											"end": 10032,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9657,
											"end": 10032,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9657,
											"end": 10032,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9657,
											"end": 10032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10105,
											"end": 10363,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 10105,
											"end": 10363,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10233,
											"end": 10302,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 10266,
											"end": 10276,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 10286,
											"end": 10290,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 10293,
											"end": 10301,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 10240,
											"end": 10247,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 10233,
											"end": 10265,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10233,
											"end": 10265,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10233,
											"end": 10265,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 10233,
											"end": 10265,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10233,
											"end": 10302,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 10233,
											"end": 10302,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10233,
											"end": 10302,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10233,
											"end": 10302,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10233,
											"end": 10302,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10233,
											"end": 10302,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10233,
											"end": 10302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10233,
											"end": 10302,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 10233,
											"end": 10302,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10312,
											"end": 10356,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 10342,
											"end": 10344,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10346,
											"end": 10355,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10319,
											"end": 10327,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 10312,
											"end": 10341,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10312,
											"end": 10341,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10312,
											"end": 10341,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 10312,
											"end": 10341,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10312,
											"end": 10356,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10312,
											"end": 10356,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10312,
											"end": 10356,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10312,
											"end": 10356,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10312,
											"end": 10356,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10312,
											"end": 10356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10312,
											"end": 10356,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 10312,
											"end": 10356,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10105,
											"end": 10363,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10105,
											"end": 10363,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10105,
											"end": 10363,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10105,
											"end": 10363,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10105,
											"end": 10363,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10105,
											"end": 10363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10430,
											"end": 10907,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 10430,
											"end": 10907,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10565,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10568,
											"end": 10599,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 10581,
											"end": 10588,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 10590,
											"end": 10598,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 10568,
											"end": 10580,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 10568,
											"end": 10599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10568,
											"end": 10599,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 10568,
											"end": 10599,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10599,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10599,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10609,
											"end": 10628,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10631,
											"end": 10639,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10631,
											"end": 10649,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10640,
											"end": 10648,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10631,
											"end": 10649,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10631,
											"end": 10649,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10631,
											"end": 10649,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10631,
											"end": 10649,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10631,
											"end": 10649,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10631,
											"end": 10649,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10631,
											"end": 10649,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10631,
											"end": 10649,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10631,
											"end": 10649,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10631,
											"end": 10649,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10631,
											"end": 10649,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 10609,
											"end": 10649,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10609,
											"end": 10649,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10673,
											"end": 10681,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10663,
											"end": 10681,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10663,
											"end": 10681,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10663,
											"end": 10670,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 10663,
											"end": 10681,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10663,
											"end": 10681,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10663,
											"end": 10681,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10659,
											"end": 10901,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10659,
											"end": 10901,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 10659,
											"end": 10901,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10721,
											"end": 10729,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10697,
											"end": 10700,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10697,
											"end": 10709,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10697,
											"end": 10709,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10697,
											"end": 10709,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10697,
											"end": 10730,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10697,
											"end": 10730,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10697,
											"end": 10730,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10697,
											"end": 10730,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10697,
											"end": 10730,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10697,
											"end": 10730,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10697,
											"end": 10730,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 10697,
											"end": 10730,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 10697,
											"end": 10730,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10697,
											"end": 10730,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 10697,
											"end": 10730,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10697,
											"end": 10730,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10697,
											"end": 10730,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 10697,
											"end": 10730,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10697,
											"end": 10730,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10697,
											"end": 10730,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 10697,
											"end": 10730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10697,
											"end": 10730,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 10697,
											"end": 10730,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10697,
											"end": 10730,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10697,
											"end": 10730,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10697,
											"end": 10730,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 10697,
											"end": 10730,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 10697,
											"end": 10730,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10697,
											"end": 10730,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10697,
											"end": 10730,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10697,
											"end": 10730,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10697,
											"end": 10730,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 10697,
											"end": 10730,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 10697,
											"end": 10730,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10697,
											"end": 10730,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10697,
											"end": 10730,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10697,
											"end": 10730,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10697,
											"end": 10730,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10697,
											"end": 10730,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 10697,
											"end": 10730,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 10697,
											"end": 10730,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10697,
											"end": 10730,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 10697,
											"end": 10730,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10768,
											"end": 10777,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10744,
											"end": 10747,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10744,
											"end": 10756,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10744,
											"end": 10756,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10744,
											"end": 10756,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 10744,
											"end": 10778,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10744,
											"end": 10778,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10744,
											"end": 10778,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10744,
											"end": 10778,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10744,
											"end": 10778,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10744,
											"end": 10778,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10744,
											"end": 10778,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 10744,
											"end": 10778,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 10744,
											"end": 10778,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10744,
											"end": 10778,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 10744,
											"end": 10778,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10744,
											"end": 10778,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10744,
											"end": 10778,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 10744,
											"end": 10778,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10744,
											"end": 10778,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10744,
											"end": 10778,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 10744,
											"end": 10778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10744,
											"end": 10778,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 10744,
											"end": 10778,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10744,
											"end": 10778,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10744,
											"end": 10778,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10744,
											"end": 10778,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 10744,
											"end": 10778,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 10744,
											"end": 10778,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10744,
											"end": 10778,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10744,
											"end": 10778,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10744,
											"end": 10778,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10744,
											"end": 10778,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 10744,
											"end": 10778,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 10744,
											"end": 10778,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10744,
											"end": 10778,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10744,
											"end": 10778,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10744,
											"end": 10778,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10744,
											"end": 10778,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10744,
											"end": 10778,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 10744,
											"end": 10778,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 10744,
											"end": 10778,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10744,
											"end": 10778,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 10744,
											"end": 10778,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10659,
											"end": 10901,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 10659,
											"end": 10901,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10659,
											"end": 10901,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 10659,
											"end": 10901,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10833,
											"end": 10841,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10809,
											"end": 10812,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10809,
											"end": 10821,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10809,
											"end": 10821,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10809,
											"end": 10821,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 10809,
											"end": 10842,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10809,
											"end": 10842,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10809,
											"end": 10842,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10809,
											"end": 10842,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10809,
											"end": 10842,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10809,
											"end": 10842,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10809,
											"end": 10842,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 10809,
											"end": 10842,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 10809,
											"end": 10842,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10809,
											"end": 10842,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 10809,
											"end": 10842,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10809,
											"end": 10842,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10809,
											"end": 10842,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 10809,
											"end": 10842,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10809,
											"end": 10842,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10809,
											"end": 10842,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 10809,
											"end": 10842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10809,
											"end": 10842,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 10809,
											"end": 10842,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10809,
											"end": 10842,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10809,
											"end": 10842,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10809,
											"end": 10842,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 10809,
											"end": 10842,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 10809,
											"end": 10842,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10809,
											"end": 10842,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10809,
											"end": 10842,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10809,
											"end": 10842,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10809,
											"end": 10842,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 10809,
											"end": 10842,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 10809,
											"end": 10842,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10809,
											"end": 10842,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10809,
											"end": 10842,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10809,
											"end": 10842,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10809,
											"end": 10842,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10809,
											"end": 10842,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 10809,
											"end": 10842,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 10809,
											"end": 10842,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10809,
											"end": 10842,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 10809,
											"end": 10842,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10880,
											"end": 10889,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10856,
											"end": 10859,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10856,
											"end": 10868,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10856,
											"end": 10868,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10856,
											"end": 10868,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10856,
											"end": 10890,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10856,
											"end": 10890,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10856,
											"end": 10890,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10856,
											"end": 10890,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10856,
											"end": 10890,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10856,
											"end": 10890,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10856,
											"end": 10890,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 10856,
											"end": 10890,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 10856,
											"end": 10890,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10856,
											"end": 10890,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 10856,
											"end": 10890,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10856,
											"end": 10890,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10856,
											"end": 10890,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 10856,
											"end": 10890,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10856,
											"end": 10890,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10856,
											"end": 10890,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 10856,
											"end": 10890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10856,
											"end": 10890,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 10856,
											"end": 10890,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10856,
											"end": 10890,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10856,
											"end": 10890,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10856,
											"end": 10890,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 10856,
											"end": 10890,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 10856,
											"end": 10890,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10856,
											"end": 10890,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10856,
											"end": 10890,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10856,
											"end": 10890,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10856,
											"end": 10890,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 10856,
											"end": 10890,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 10856,
											"end": 10890,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10856,
											"end": 10890,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10856,
											"end": 10890,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10856,
											"end": 10890,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10856,
											"end": 10890,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10856,
											"end": 10890,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 10856,
											"end": 10890,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 10856,
											"end": 10890,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10856,
											"end": 10890,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 10856,
											"end": 10890,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10659,
											"end": 10901,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 10659,
											"end": 10901,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10539,
											"end": 10907,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10539,
											"end": 10907,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10430,
											"end": 10907,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10430,
											"end": 10907,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10430,
											"end": 10907,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10430,
											"end": 10907,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10430,
											"end": 10907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10977,
											"end": 11184,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 10977,
											"end": 11184,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11054,
											"end": 11061,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11116,
											"end": 11122,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11107,
											"end": 11122,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11107,
											"end": 11122,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11107,
											"end": 11113,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11107,
											"end": 11122,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11107,
											"end": 11122,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11107,
											"end": 11122,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 11107,
											"end": 11140,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 11107,
											"end": 11140,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11134,
											"end": 11140,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11107,
											"end": 11140,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 11107,
											"end": 11140,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11107,
											"end": 11140,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 11107,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11125,
											"end": 11131,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11107,
											"end": 11140,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 11107,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11151,
											"end": 11157,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11142,
											"end": 11157,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11142,
											"end": 11157,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11142,
											"end": 11148,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 11142,
											"end": 11157,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11142,
											"end": 11157,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11142,
											"end": 11157,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 11142,
											"end": 11175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 11142,
											"end": 11175,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11169,
											"end": 11175,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11142,
											"end": 11175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 11142,
											"end": 11175,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11142,
											"end": 11175,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 11142,
											"end": 11175,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11160,
											"end": 11166,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11142,
											"end": 11175,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 11142,
											"end": 11175,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11090,
											"end": 11176,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11090,
											"end": 11176,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11090,
											"end": 11176,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11090,
											"end": 11176,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11090,
											"end": 11176,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 11090,
											"end": 11176,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11090,
											"end": 11176,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11090,
											"end": 11176,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11090,
											"end": 11176,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 11090,
											"end": 11176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11090,
											"end": 11176,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 11090,
											"end": 11176,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11090,
											"end": 11176,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11090,
											"end": 11176,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11090,
											"end": 11176,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11090,
											"end": 11176,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11090,
											"end": 11176,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11090,
											"end": 11176,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11090,
											"end": 11176,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11090,
											"end": 11176,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11090,
											"end": 11176,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11090,
											"end": 11176,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11090,
											"end": 11176,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11090,
											"end": 11176,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11080,
											"end": 11177,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11080,
											"end": 11177,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11080,
											"end": 11177,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11080,
											"end": 11177,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11080,
											"end": 11177,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11080,
											"end": 11177,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 11073,
											"end": 11177,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11073,
											"end": 11177,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10977,
											"end": 11184,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10977,
											"end": 11184,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10977,
											"end": 11184,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10977,
											"end": 11184,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10977,
											"end": 11184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11251,
											"end": 11467,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 11251,
											"end": 11467,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11354,
											"end": 11358,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11360,
											"end": 11364,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11392,
											"end": 11398,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11383,
											"end": 11398,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11383,
											"end": 11398,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11383,
											"end": 11389,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 11383,
											"end": 11398,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11383,
											"end": 11398,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11383,
											"end": 11398,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 11383,
											"end": 11460,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 11383,
											"end": 11460,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11433,
											"end": 11436,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11433,
											"end": 11445,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11433,
											"end": 11445,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11433,
											"end": 11445,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11447,
											"end": 11450,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11447,
											"end": 11459,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11447,
											"end": 11459,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11447,
											"end": 11459,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11383,
											"end": 11460,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 11383,
											"end": 11460,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11383,
											"end": 11460,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 11383,
											"end": 11460,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11402,
											"end": 11405,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11402,
											"end": 11414,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11402,
											"end": 11414,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11402,
											"end": 11414,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11416,
											"end": 11419,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11416,
											"end": 11428,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11416,
											"end": 11428,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11416,
											"end": 11428,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11383,
											"end": 11460,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 11383,
											"end": 11460,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11376,
											"end": 11460,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11376,
											"end": 11460,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11376,
											"end": 11460,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11376,
											"end": 11460,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11376,
											"end": 11460,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11376,
											"end": 11460,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11376,
											"end": 11460,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11376,
											"end": 11460,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11376,
											"end": 11460,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11376,
											"end": 11460,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11376,
											"end": 11460,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11376,
											"end": 11460,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11376,
											"end": 11460,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11376,
											"end": 11460,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11251,
											"end": 11467,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 11251,
											"end": 11467,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11251,
											"end": 11467,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 11251,
											"end": 11467,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11251,
											"end": 11467,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11251,
											"end": 11467,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11251,
											"end": 11467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 1321,
											"end": 1326,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1343,
											"end": 1348,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 1360,
											"end": 1362,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 1328,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 1301,
											"end": 1372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1219,
											"end": 1379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7447,
											"end": 8606,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 7447,
											"end": 8606,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7686,
											"end": 7708,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7710,
											"end": 7732,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7767,
											"end": 7768,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7748,
											"end": 7763,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 7748,
											"end": 7768,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7748,
											"end": 7768,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7748,
											"end": 7768,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 7748,
											"end": 7792,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7748,
											"end": 7792,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7748,
											"end": 7792,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 7748,
											"end": 7792,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7748,
											"end": 7792,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7791,
											"end": 7792,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7772,
											"end": 7787,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 7772,
											"end": 7792,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7772,
											"end": 7792,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7772,
											"end": 7792,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 7748,
											"end": 7792,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 7748,
											"end": 7792,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7744,
											"end": 8600,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7744,
											"end": 8600,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 7744,
											"end": 8600,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7903,
											"end": 7917,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7919,
											"end": 7933,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7861,
											"end": 7934,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7861,
											"end": 7934,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7861,
											"end": 7934,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7861,
											"end": 7934,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7861,
											"end": 7934,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 7861,
											"end": 7934,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7861,
											"end": 7934,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7861,
											"end": 7934,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7744,
											"end": 8600,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 7744,
											"end": 8600,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7744,
											"end": 8600,
											"name": "tag",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 7744,
											"end": 8600,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8012,
											"end": 8031,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8069,
											"end": 8084,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 8034,
											"end": 8084,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8034,
											"end": 8084,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8051,
											"end": 8066,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 8034,
											"end": 8066,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8034,
											"end": 8066,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8034,
											"end": 8048,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 8034,
											"end": 8066,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 8034,
											"end": 8066,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8034,
											"end": 8066,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8034,
											"end": 8066,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 8034,
											"end": 8066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8034,
											"end": 8066,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 8034,
											"end": 8066,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8034,
											"end": 8084,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 8034,
											"end": 8084,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8034,
											"end": 8084,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8034,
											"end": 8084,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 8034,
											"end": 8084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8034,
											"end": 8084,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 8034,
											"end": 8084,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8012,
											"end": 8084,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8012,
											"end": 8084,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8120,
											"end": 8134,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8102,
											"end": 8116,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8102,
											"end": 8134,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 8098,
											"end": 8590,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 8098,
											"end": 8590,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8180,
											"end": 8190,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8162,
											"end": 8176,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8162,
											"end": 8190,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 8162,
											"end": 8190,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8154,
											"end": 8209,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 8154,
											"end": 8209,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8154,
											"end": 8209,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8154,
											"end": 8209,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8154,
											"end": 8209,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8154,
											"end": 8209,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8154,
											"end": 8209,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8154,
											"end": 8209,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8154,
											"end": 8209,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8154,
											"end": 8209,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 8154,
											"end": 8209,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8154,
											"end": 8209,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 8154,
											"end": 8209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8154,
											"end": 8209,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 8154,
											"end": 8209,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8154,
											"end": 8209,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8154,
											"end": 8209,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8154,
											"end": 8209,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8154,
											"end": 8209,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8154,
											"end": 8209,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8154,
											"end": 8209,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8154,
											"end": 8209,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8154,
											"end": 8209,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 8154,
											"end": 8209,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8269,
											"end": 8283,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8285,
											"end": 8299,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8227,
											"end": 8300,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8227,
											"end": 8300,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 8227,
											"end": 8300,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8227,
											"end": 8300,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8227,
											"end": 8300,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 8227,
											"end": 8300,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8227,
											"end": 8300,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8227,
											"end": 8300,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8098,
											"end": 8590,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 8098,
											"end": 8590,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8098,
											"end": 8590,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 8098,
											"end": 8590,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8339,
											"end": 8358,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8396,
											"end": 8411,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 8361,
											"end": 8411,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8361,
											"end": 8411,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8378,
											"end": 8393,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 8361,
											"end": 8393,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8361,
											"end": 8393,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8361,
											"end": 8375,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 8361,
											"end": 8393,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 8361,
											"end": 8393,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8361,
											"end": 8393,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8361,
											"end": 8393,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 8361,
											"end": 8393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8361,
											"end": 8393,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 8361,
											"end": 8393,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8361,
											"end": 8411,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 8361,
											"end": 8411,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8361,
											"end": 8411,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8361,
											"end": 8411,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 8361,
											"end": 8411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8361,
											"end": 8411,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 8361,
											"end": 8411,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8339,
											"end": 8411,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8339,
											"end": 8411,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8455,
											"end": 8465,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8437,
											"end": 8451,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8437,
											"end": 8465,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 8437,
											"end": 8465,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8429,
											"end": 8484,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 8429,
											"end": 8484,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8429,
											"end": 8484,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8429,
											"end": 8484,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8429,
											"end": 8484,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8429,
											"end": 8484,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8429,
											"end": 8484,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8429,
											"end": 8484,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8429,
											"end": 8484,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8429,
											"end": 8484,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 8429,
											"end": 8484,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8429,
											"end": 8484,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 8429,
											"end": 8484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8429,
											"end": 8484,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 8429,
											"end": 8484,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8429,
											"end": 8484,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8429,
											"end": 8484,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8429,
											"end": 8484,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8429,
											"end": 8484,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8429,
											"end": 8484,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8429,
											"end": 8484,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8429,
											"end": 8484,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8429,
											"end": 8484,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 8429,
											"end": 8484,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8544,
											"end": 8558,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8560,
											"end": 8574,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 8502,
											"end": 8575,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8502,
											"end": 8575,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 8502,
											"end": 8575,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8502,
											"end": 8575,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8502,
											"end": 8575,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 8502,
											"end": 8575,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8502,
											"end": 8575,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8502,
											"end": 8575,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8321,
											"end": 8590,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8098,
											"end": 8590,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 8098,
											"end": 8590,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7951,
											"end": 8600,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7744,
											"end": 8600,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 7744,
											"end": 8600,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7447,
											"end": 8606,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 7447,
											"end": 8606,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7447,
											"end": 8606,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 7447,
											"end": 8606,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 7447,
											"end": 8606,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7447,
											"end": 8606,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7447,
											"end": 8606,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7447,
											"end": 8606,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7447,
											"end": 8606,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7447,
											"end": 8606,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8675,
											"end": 8982,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 8675,
											"end": 8982,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8831,
											"end": 8898,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 8863,
											"end": 8873,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 8883,
											"end": 8887,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 8890,
											"end": 8897,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8838,
											"end": 8844,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 8831,
											"end": 8862,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8831,
											"end": 8862,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8831,
											"end": 8862,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 8831,
											"end": 8862,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8831,
											"end": 8898,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 8831,
											"end": 8898,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8831,
											"end": 8898,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8831,
											"end": 8898,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8831,
											"end": 8898,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8831,
											"end": 8898,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8831,
											"end": 8898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8831,
											"end": 8898,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 8831,
											"end": 8898,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8908,
											"end": 8975,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 8940,
											"end": 8950,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 8960,
											"end": 8964,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 8967,
											"end": 8974,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8915,
											"end": 8921,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8908,
											"end": 8939,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8908,
											"end": 8939,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8908,
											"end": 8939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 8908,
											"end": 8939,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8908,
											"end": 8975,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 8908,
											"end": 8975,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8908,
											"end": 8975,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8908,
											"end": 8975,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8908,
											"end": 8975,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8908,
											"end": 8975,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8908,
											"end": 8975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8908,
											"end": 8975,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 8908,
											"end": 8975,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8675,
											"end": 8982,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8675,
											"end": 8982,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8675,
											"end": 8982,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8675,
											"end": 8982,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8675,
											"end": 8982,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9051,
											"end": 9521,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 9051,
											"end": 9521,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9274,
											"end": 9288,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9322,
											"end": 9329,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9312,
											"end": 9319,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9312,
											"end": 9329,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 9312,
											"end": 9329,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9312,
											"end": 9329,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9312,
											"end": 9329,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 9312,
											"end": 9329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9312,
											"end": 9329,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 9312,
											"end": 9329,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9300,
											"end": 9329,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9300,
											"end": 9329,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9367,
											"end": 9376,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9339,
											"end": 9353,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 9339,
											"end": 9363,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9354,
											"end": 9362,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 9339,
											"end": 9363,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9339,
											"end": 9363,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9339,
											"end": 9363,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9339,
											"end": 9363,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9339,
											"end": 9363,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9339,
											"end": 9363,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9339,
											"end": 9363,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9339,
											"end": 9363,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9339,
											"end": 9363,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9339,
											"end": 9363,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9339,
											"end": 9363,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 9339,
											"end": 9363,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9339,
											"end": 9376,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9339,
											"end": 9376,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9339,
											"end": 9376,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9339,
											"end": 9376,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 9339,
											"end": 9376,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9339,
											"end": 9376,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9339,
											"end": 9376,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 9339,
											"end": 9376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9339,
											"end": 9376,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 9339,
											"end": 9376,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9339,
											"end": 9376,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9339,
											"end": 9376,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9339,
											"end": 9376,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9339,
											"end": 9376,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9339,
											"end": 9376,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9339,
											"end": 9376,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 9339,
											"end": 9376,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9420,
											"end": 9429,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9386,
											"end": 9402,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 9386,
											"end": 9412,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9403,
											"end": 9411,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 9386,
											"end": 9412,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9386,
											"end": 9412,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9386,
											"end": 9412,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9386,
											"end": 9412,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9386,
											"end": 9412,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9386,
											"end": 9412,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9386,
											"end": 9412,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9386,
											"end": 9412,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9386,
											"end": 9412,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9386,
											"end": 9412,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9386,
											"end": 9412,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 9386,
											"end": 9416,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9413,
											"end": 9415,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9386,
											"end": 9416,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9386,
											"end": 9416,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9386,
											"end": 9416,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9386,
											"end": 9416,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9386,
											"end": 9416,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9386,
											"end": 9416,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9386,
											"end": 9416,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9386,
											"end": 9416,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9386,
											"end": 9416,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9386,
											"end": 9416,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9386,
											"end": 9416,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9386,
											"end": 9416,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9386,
											"end": 9416,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9386,
											"end": 9416,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9386,
											"end": 9416,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 9386,
											"end": 9416,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9386,
											"end": 9429,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9386,
											"end": 9429,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9386,
											"end": 9429,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9386,
											"end": 9429,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 9386,
											"end": 9429,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9386,
											"end": 9429,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9386,
											"end": 9429,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 9386,
											"end": 9429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9386,
											"end": 9429,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 9386,
											"end": 9429,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9386,
											"end": 9429,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9386,
											"end": 9429,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9386,
											"end": 9429,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9386,
											"end": 9429,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9386,
											"end": 9429,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9386,
											"end": 9429,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 9386,
											"end": 9429,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9464,
											"end": 9471,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9440,
											"end": 9443,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9440,
											"end": 9452,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9440,
											"end": 9452,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9440,
											"end": 9452,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9440,
											"end": 9472,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9440,
											"end": 9472,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9440,
											"end": 9472,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9440,
											"end": 9472,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9440,
											"end": 9472,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9440,
											"end": 9472,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9440,
											"end": 9472,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 9440,
											"end": 9472,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 9440,
											"end": 9472,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9440,
											"end": 9472,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 9440,
											"end": 9472,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9440,
											"end": 9472,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9440,
											"end": 9472,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 9440,
											"end": 9472,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9440,
											"end": 9472,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9440,
											"end": 9472,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 9440,
											"end": 9472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9440,
											"end": 9472,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 9440,
											"end": 9472,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9440,
											"end": 9472,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9440,
											"end": 9472,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9440,
											"end": 9472,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 9440,
											"end": 9472,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 9440,
											"end": 9472,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9440,
											"end": 9472,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9440,
											"end": 9472,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9440,
											"end": 9472,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9440,
											"end": 9472,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 9440,
											"end": 9472,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 9440,
											"end": 9472,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9440,
											"end": 9472,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9440,
											"end": 9472,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9440,
											"end": 9472,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9440,
											"end": 9472,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9440,
											"end": 9472,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 9440,
											"end": 9472,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 9440,
											"end": 9472,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9440,
											"end": 9472,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 9440,
											"end": 9472,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9506,
											"end": 9513,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9482,
											"end": 9485,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9482,
											"end": 9494,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9482,
											"end": 9494,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9482,
											"end": 9494,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 9482,
											"end": 9514,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9482,
											"end": 9514,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9482,
											"end": 9514,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9482,
											"end": 9514,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9482,
											"end": 9514,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9482,
											"end": 9514,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9482,
											"end": 9514,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 9482,
											"end": 9514,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 9482,
											"end": 9514,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9482,
											"end": 9514,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 9482,
											"end": 9514,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9482,
											"end": 9514,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9482,
											"end": 9514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 9482,
											"end": 9514,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9482,
											"end": 9514,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9482,
											"end": 9514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 9482,
											"end": 9514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9482,
											"end": 9514,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 9482,
											"end": 9514,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9482,
											"end": 9514,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9482,
											"end": 9514,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9482,
											"end": 9514,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 9482,
											"end": 9514,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 9482,
											"end": 9514,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9482,
											"end": 9514,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9482,
											"end": 9514,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9482,
											"end": 9514,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9482,
											"end": 9514,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 9482,
											"end": 9514,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 9482,
											"end": 9514,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9482,
											"end": 9514,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9482,
											"end": 9514,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9482,
											"end": 9514,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9482,
											"end": 9514,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9482,
											"end": 9514,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 9482,
											"end": 9514,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 9482,
											"end": 9514,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9482,
											"end": 9514,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 9482,
											"end": 9514,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9051,
											"end": 9521,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 9051,
											"end": 9521,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 9051,
											"end": 9521,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9051,
											"end": 9521,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9051,
											"end": 9521,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9051,
											"end": 9521,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9051,
											"end": 9521,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9051,
											"end": 9521,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1765,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1787,
											"end": 1789,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1796,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 1745,
											"end": 1798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "tag",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1718,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 1718,
											"end": 1799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "tag",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1618,
											"end": 1806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8450,
											"end": 8468,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8478,
											"end": 8497,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8616,
											"end": 8620,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8613,
											"end": 8614,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8606,
											"end": 8610,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8600,
											"end": 8611,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8593,
											"end": 8597,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8587,
											"end": 8591,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 8583,
											"end": 8598,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8580,
											"end": 8581,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8573,
											"end": 8578,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 8566,
											"end": 8571,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 8561,
											"end": 8621,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 8673,
											"end": 8680,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8717,
											"end": 8721,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8711,
											"end": 8722,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8762,
											"end": 8778,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 8759,
											"end": 8760,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8754,
											"end": 8757,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8739,
											"end": 8779,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 8808,
											"end": 8824,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 8803,
											"end": 8806,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8796,
											"end": 8825,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "tag",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8866,
											"end": 8882,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 8852,
											"end": 8882,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8852,
											"end": 8882,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8916,
											"end": 8917,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8910,
											"end": 8918,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8895,
											"end": 8918,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8895,
											"end": 8918,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8532,
											"end": 8928,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8956,
											"end": 8957,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8942,
											"end": 8952,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9009,
											"end": 9010,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8994,
											"end": 9005,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8990,
											"end": 8991,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8968,
											"end": 8973,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 8960,
											"end": 8991,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9066,
											"end": 9071,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 4,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 9033,
											"end": 9073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "tag",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "tag",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8440,
											"end": 9090,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8440,
											"end": 9090,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8370,
											"end": 9090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1025,
											"end": 1139,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 1025,
											"end": 1139,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1062,
											"end": 1069,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1102,
											"end": 1132,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1095,
											"end": 1100,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1091,
											"end": 1133,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1080,
											"end": 1133,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1080,
											"end": 1133,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1025,
											"end": 1139,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1025,
											"end": 1139,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1025,
											"end": 1139,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1025,
											"end": 1139,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1145,
											"end": 1263,
											"name": "tag",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 1145,
											"end": 1263,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1232,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 1250,
											"end": 1255,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1232,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 1232,
											"end": 1256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1232,
											"end": 1256,
											"name": "tag",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 1232,
											"end": 1256,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1227,
											"end": 1230,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1220,
											"end": 1257,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1145,
											"end": 1263,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1145,
											"end": 1263,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1145,
											"end": 1263,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1269,
											"end": 1601,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 1269,
											"end": 1601,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1390,
											"end": 1394,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1428,
											"end": 1430,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1417,
											"end": 1426,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1413,
											"end": 1431,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1405,
											"end": 1431,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1405,
											"end": 1431,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1441,
											"end": 1512,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 1509,
											"end": 1510,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1494,
											"end": 1511,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1485,
											"end": 1491,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1441,
											"end": 1512,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 1441,
											"end": 1512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1441,
											"end": 1512,
											"name": "tag",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 1441,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1522,
											"end": 1594,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 1590,
											"end": 1592,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1579,
											"end": 1588,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1575,
											"end": 1593,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1566,
											"end": 1572,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1522,
											"end": 1594,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 1522,
											"end": 1594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1522,
											"end": 1594,
											"name": "tag",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 1522,
											"end": 1594,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1269,
											"end": 1601,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1269,
											"end": 1601,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1269,
											"end": 1601,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1269,
											"end": 1601,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1269,
											"end": 1601,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1269,
											"end": 1601,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1607,
											"end": 1684,
											"name": "tag",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 1607,
											"end": 1684,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1644,
											"end": 1651,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1673,
											"end": 1678,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1678,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1678,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1607,
											"end": 1684,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1607,
											"end": 1684,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1607,
											"end": 1684,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1607,
											"end": 1684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1690,
											"end": 1812,
											"name": "tag",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 1690,
											"end": 1812,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1763,
											"end": 1787,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 1781,
											"end": 1786,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1763,
											"end": 1787,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 1763,
											"end": 1787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1763,
											"end": 1787,
											"name": "tag",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 1763,
											"end": 1787,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1756,
											"end": 1761,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1753,
											"end": 1788,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1743,
											"end": 1806,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 1743,
											"end": 1806,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1802,
											"end": 1803,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1799,
											"end": 1800,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1792,
											"end": 1804,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1743,
											"end": 1806,
											"name": "tag",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 1743,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1690,
											"end": 1812,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1690,
											"end": 1812,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1818,
											"end": 1957,
											"name": "tag",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 1818,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1864,
											"end": 1869,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1902,
											"end": 1908,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1889,
											"end": 1909,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1880,
											"end": 1909,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1880,
											"end": 1909,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1918,
											"end": 1951,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 1945,
											"end": 1950,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1918,
											"end": 1951,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 1918,
											"end": 1951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1918,
											"end": 1951,
											"name": "tag",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 1918,
											"end": 1951,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1818,
											"end": 1957,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1818,
											"end": 1957,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1818,
											"end": 1957,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1818,
											"end": 1957,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1818,
											"end": 1957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2582,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1963,
											"end": 2582,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2040,
											"end": 2046,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2048,
											"end": 2054,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2056,
											"end": 2062,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2107,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2093,
											"end": 2102,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2084,
											"end": 2091,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2080,
											"end": 2103,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2108,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2073,
											"end": 2192,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2073,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 2073,
											"end": 2192,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2111,
											"end": 2190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 2111,
											"end": 2190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 2111,
											"end": 2190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2111,
											"end": 2190,
											"name": "tag",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 2111,
											"end": 2190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2073,
											"end": 2192,
											"name": "tag",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 2073,
											"end": 2192,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2231,
											"end": 2232,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2256,
											"end": 2309,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 2301,
											"end": 2308,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2292,
											"end": 2298,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2290,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2277,
											"end": 2299,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2256,
											"end": 2309,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 2256,
											"end": 2309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2256,
											"end": 2309,
											"name": "tag",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 2256,
											"end": 2309,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2246,
											"end": 2309,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2246,
											"end": 2309,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2202,
											"end": 2319,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2358,
											"end": 2360,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2384,
											"end": 2437,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 2429,
											"end": 2436,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2420,
											"end": 2426,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2409,
											"end": 2418,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2427,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2384,
											"end": 2437,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 2384,
											"end": 2437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2384,
											"end": 2437,
											"name": "tag",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 2384,
											"end": 2437,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2374,
											"end": 2437,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2374,
											"end": 2437,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2329,
											"end": 2447,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2488,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2512,
											"end": 2565,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 2557,
											"end": 2564,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2548,
											"end": 2554,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2537,
											"end": 2546,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2533,
											"end": 2555,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2512,
											"end": 2565,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 2512,
											"end": 2565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2512,
											"end": 2565,
											"name": "tag",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 2512,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2502,
											"end": 2565,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2502,
											"end": 2565,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2457,
											"end": 2575,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2582,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2582,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2582,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2582,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2582,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2588,
											"end": 2706,
											"name": "tag",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 2588,
											"end": 2706,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2675,
											"end": 2699,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 2693,
											"end": 2698,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2675,
											"end": 2699,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 2675,
											"end": 2699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2675,
											"end": 2699,
											"name": "tag",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 2675,
											"end": 2699,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2670,
											"end": 2673,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2663,
											"end": 2700,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2588,
											"end": 2706,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2588,
											"end": 2706,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2588,
											"end": 2706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2712,
											"end": 2934,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 2712,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2805,
											"end": 2809,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2845,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2832,
											"end": 2841,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2828,
											"end": 2846,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2820,
											"end": 2846,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2820,
											"end": 2846,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2856,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 2924,
											"end": 2925,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2913,
											"end": 2922,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2909,
											"end": 2926,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2900,
											"end": 2906,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2856,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 2856,
											"end": 2927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2856,
											"end": 2927,
											"name": "tag",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 2856,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2712,
											"end": 2934,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2712,
											"end": 2934,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2712,
											"end": 2934,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2712,
											"end": 2934,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2712,
											"end": 2934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2940,
											"end": 3057,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 2940,
											"end": 3057,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3049,
											"end": 3050,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3046,
											"end": 3047,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3039,
											"end": 3051,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3063,
											"end": 3180,
											"name": "tag",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 3063,
											"end": 3180,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3172,
											"end": 3173,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3169,
											"end": 3170,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3162,
											"end": 3174,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3186,
											"end": 3303,
											"name": "tag",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 3186,
											"end": 3303,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3295,
											"end": 3296,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3292,
											"end": 3293,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3285,
											"end": 3297,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3326,
											"end": 3894,
											"name": "tag",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 3326,
											"end": 3894,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3407,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3409,
											"end": 3415,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3459,
											"end": 3462,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3452,
											"end": 3456,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3444,
											"end": 3450,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3440,
											"end": 3457,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3436,
											"end": 3463,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3426,
											"end": 3548,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 3426,
											"end": 3548,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3467,
											"end": 3546,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 3467,
											"end": 3546,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 3467,
											"end": 3546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3467,
											"end": 3546,
											"name": "tag",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 3467,
											"end": 3546,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3426,
											"end": 3548,
											"name": "tag",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 3426,
											"end": 3548,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3580,
											"end": 3586,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3567,
											"end": 3587,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3557,
											"end": 3587,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3557,
											"end": 3587,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3610,
											"end": 3628,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3602,
											"end": 3608,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3599,
											"end": 3629,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3596,
											"end": 3713,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3596,
											"end": 3713,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 3596,
											"end": 3713,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3632,
											"end": 3711,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 3632,
											"end": 3711,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 3632,
											"end": 3711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3632,
											"end": 3711,
											"name": "tag",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 3632,
											"end": 3711,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3596,
											"end": 3713,
											"name": "tag",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 3596,
											"end": 3713,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3746,
											"end": 3750,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3738,
											"end": 3744,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3734,
											"end": 3751,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3722,
											"end": 3751,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3722,
											"end": 3751,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3800,
											"end": 3803,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3792,
											"end": 3796,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3780,
											"end": 3797,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3770,
											"end": 3778,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3766,
											"end": 3798,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3763,
											"end": 3804,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3760,
											"end": 3888,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3760,
											"end": 3888,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 3760,
											"end": 3888,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3807,
											"end": 3886,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 3807,
											"end": 3886,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 3807,
											"end": 3886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3807,
											"end": 3886,
											"name": "tag",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 3807,
											"end": 3886,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3760,
											"end": 3888,
											"name": "tag",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 3760,
											"end": 3888,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3326,
											"end": 3894,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3326,
											"end": 3894,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3326,
											"end": 3894,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3326,
											"end": 3894,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3326,
											"end": 3894,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3326,
											"end": 3894,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3900,
											"end": 4026,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 3900,
											"end": 4026,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3937,
											"end": 3944,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3977,
											"end": 4019,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3970,
											"end": 3975,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3966,
											"end": 4020,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3955,
											"end": 4020,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3955,
											"end": 4020,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3900,
											"end": 4026,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3900,
											"end": 4026,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3900,
											"end": 4026,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3900,
											"end": 4026,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4032,
											"end": 4128,
											"name": "tag",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 4032,
											"end": 4128,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4069,
											"end": 4076,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4098,
											"end": 4122,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 4116,
											"end": 4121,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4098,
											"end": 4122,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 4098,
											"end": 4122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4098,
											"end": 4122,
											"name": "tag",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 4098,
											"end": 4122,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4087,
											"end": 4122,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4087,
											"end": 4122,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4032,
											"end": 4128,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4032,
											"end": 4128,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4032,
											"end": 4128,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4032,
											"end": 4128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4134,
											"end": 4256,
											"name": "tag",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 4134,
											"end": 4256,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4207,
											"end": 4231,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 4225,
											"end": 4230,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4207,
											"end": 4231,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 4207,
											"end": 4231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4207,
											"end": 4231,
											"name": "tag",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 4207,
											"end": 4231,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4200,
											"end": 4205,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4197,
											"end": 4232,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4187,
											"end": 4250,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 4187,
											"end": 4250,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4246,
											"end": 4247,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4243,
											"end": 4244,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4236,
											"end": 4248,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4187,
											"end": 4250,
											"name": "tag",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 4187,
											"end": 4250,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4134,
											"end": 4256,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4134,
											"end": 4256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4262,
											"end": 4401,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 4262,
											"end": 4401,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4308,
											"end": 4313,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4346,
											"end": 4352,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4333,
											"end": 4353,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 4324,
											"end": 4353,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4324,
											"end": 4353,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4362,
											"end": 4395,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 4389,
											"end": 4394,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4362,
											"end": 4395,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 4362,
											"end": 4395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4362,
											"end": 4395,
											"name": "tag",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 4362,
											"end": 4395,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4262,
											"end": 4401,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4262,
											"end": 4401,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4262,
											"end": 4401,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4262,
											"end": 4401,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4262,
											"end": 4401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4407,
											"end": 5548,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 4407,
											"end": 5548,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4529,
											"end": 4535,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4537,
											"end": 4543,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4545,
											"end": 4551,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4553,
											"end": 4559,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4561,
											"end": 4567,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4569,
											"end": 4575,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4618,
											"end": 4621,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 4606,
											"end": 4615,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4597,
											"end": 4604,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 4593,
											"end": 4616,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4589,
											"end": 4622,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4586,
											"end": 4706,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4586,
											"end": 4706,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 4586,
											"end": 4706,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4625,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 4625,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 4625,
											"end": 4704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4625,
											"end": 4704,
											"name": "tag",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 4625,
											"end": 4704,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4586,
											"end": 4706,
											"name": "tag",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 4586,
											"end": 4706,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4745,
											"end": 4746,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4770,
											"end": 4823,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 4815,
											"end": 4822,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 4806,
											"end": 4812,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4795,
											"end": 4804,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 4791,
											"end": 4813,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4770,
											"end": 4823,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 4770,
											"end": 4823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4770,
											"end": 4823,
											"name": "tag",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 4770,
											"end": 4823,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4760,
											"end": 4823,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 4760,
											"end": 4823,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4716,
											"end": 4833,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4872,
											"end": 4874,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4898,
											"end": 4951,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 4943,
											"end": 4950,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 4934,
											"end": 4940,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4923,
											"end": 4932,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 4919,
											"end": 4941,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4898,
											"end": 4951,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 4898,
											"end": 4951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4898,
											"end": 4951,
											"name": "tag",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 4898,
											"end": 4951,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4888,
											"end": 4951,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 4888,
											"end": 4951,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4843,
											"end": 4961,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5028,
											"end": 5030,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5017,
											"end": 5026,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5013,
											"end": 5031,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5000,
											"end": 5032,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 5059,
											"end": 5077,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5051,
											"end": 5057,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5048,
											"end": 5078,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5045,
											"end": 5162,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5045,
											"end": 5162,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 5045,
											"end": 5162,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 5081,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 5081,
											"end": 5160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5160,
											"name": "tag",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 5081,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5045,
											"end": 5162,
											"name": "tag",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 5045,
											"end": 5162,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5194,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 5266,
											"end": 5273,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 5257,
											"end": 5263,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5246,
											"end": 5255,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 5242,
											"end": 5264,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5194,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 5194,
											"end": 5274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5194,
											"end": 5274,
											"name": "tag",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 5194,
											"end": 5274,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5176,
											"end": 5274,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 5176,
											"end": 5274,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5176,
											"end": 5274,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 5176,
											"end": 5274,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4971,
											"end": 5284,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5323,
											"end": 5325,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 5349,
											"end": 5402,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 5394,
											"end": 5401,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 5385,
											"end": 5391,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5374,
											"end": 5383,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 5370,
											"end": 5392,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5349,
											"end": 5402,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 5349,
											"end": 5402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5349,
											"end": 5402,
											"name": "tag",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 5349,
											"end": 5402,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5339,
											"end": 5402,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5339,
											"end": 5402,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5294,
											"end": 5412,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5451,
											"end": 5454,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 5478,
											"end": 5531,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 5523,
											"end": 5530,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 5514,
											"end": 5520,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5503,
											"end": 5512,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 5499,
											"end": 5521,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5478,
											"end": 5531,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 5478,
											"end": 5531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5478,
											"end": 5531,
											"name": "tag",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 5478,
											"end": 5531,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5468,
											"end": 5531,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5468,
											"end": 5531,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5422,
											"end": 5541,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4407,
											"end": 5548,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4407,
											"end": 5548,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 4407,
											"end": 5548,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4407,
											"end": 5548,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4407,
											"end": 5548,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 4407,
											"end": 5548,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4407,
											"end": 5548,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4407,
											"end": 5548,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 4407,
											"end": 5548,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5554,
											"end": 5668,
											"name": "tag",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 5554,
											"end": 5668,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5621,
											"end": 5627,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5655,
											"end": 5660,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5649,
											"end": 5661,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5639,
											"end": 5661,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5639,
											"end": 5661,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5554,
											"end": 5668,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5554,
											"end": 5668,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5554,
											"end": 5668,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5554,
											"end": 5668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5674,
											"end": 5858,
											"name": "tag",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 5674,
											"end": 5858,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5773,
											"end": 5784,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5807,
											"end": 5813,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5802,
											"end": 5805,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5795,
											"end": 5814,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5847,
											"end": 5851,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5842,
											"end": 5845,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5838,
											"end": 5852,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5823,
											"end": 5852,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5823,
											"end": 5852,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5674,
											"end": 5858,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5674,
											"end": 5858,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5674,
											"end": 5858,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5674,
											"end": 5858,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5674,
											"end": 5858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5864,
											"end": 5996,
											"name": "tag",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 5864,
											"end": 5996,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5931,
											"end": 5935,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5954,
											"end": 5957,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5946,
											"end": 5957,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5946,
											"end": 5957,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5984,
											"end": 5988,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5979,
											"end": 5982,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5975,
											"end": 5989,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5967,
											"end": 5989,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5967,
											"end": 5989,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5864,
											"end": 5996,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5864,
											"end": 5996,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5864,
											"end": 5996,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5864,
											"end": 5996,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6002,
											"end": 6110,
											"name": "tag",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 6002,
											"end": 6110,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6079,
											"end": 6103,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 6097,
											"end": 6102,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6079,
											"end": 6103,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 6079,
											"end": 6103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6079,
											"end": 6103,
											"name": "tag",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 6079,
											"end": 6103,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6074,
											"end": 6077,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6067,
											"end": 6104,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6002,
											"end": 6110,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6002,
											"end": 6110,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6002,
											"end": 6110,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6116,
											"end": 6295,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 6116,
											"end": 6295,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6185,
											"end": 6195,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6206,
											"end": 6252,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 6248,
											"end": 6251,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6240,
											"end": 6246,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6206,
											"end": 6252,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 6206,
											"end": 6252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6206,
											"end": 6252,
											"name": "tag",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 6206,
											"end": 6252,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6284,
											"end": 6288,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6279,
											"end": 6282,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6275,
											"end": 6289,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6261,
											"end": 6289,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6261,
											"end": 6289,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6116,
											"end": 6295,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6116,
											"end": 6295,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6116,
											"end": 6295,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6116,
											"end": 6295,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6116,
											"end": 6295,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6301,
											"end": 6414,
											"name": "tag",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 6301,
											"end": 6414,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6371,
											"end": 6375,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6403,
											"end": 6407,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6398,
											"end": 6401,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6394,
											"end": 6408,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6386,
											"end": 6408,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6386,
											"end": 6408,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6301,
											"end": 6414,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6301,
											"end": 6414,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6301,
											"end": 6414,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6301,
											"end": 6414,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6450,
											"end": 7182,
											"name": "tag",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 6450,
											"end": 7182,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6569,
											"end": 6572,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6598,
											"end": 6652,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 6646,
											"end": 6651,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6598,
											"end": 6652,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 6598,
											"end": 6652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6598,
											"end": 6652,
											"name": "tag",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 6598,
											"end": 6652,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6668,
											"end": 6754,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 6747,
											"end": 6753,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6742,
											"end": 6745,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6668,
											"end": 6754,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 6668,
											"end": 6754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6668,
											"end": 6754,
											"name": "tag",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 6668,
											"end": 6754,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6661,
											"end": 6754,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6661,
											"end": 6754,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6834,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 6828,
											"end": 6833,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6834,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 6778,
											"end": 6834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6834,
											"name": "tag",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 6778,
											"end": 6834,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6857,
											"end": 6864,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6888,
											"end": 6889,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6873,
											"end": 7157,
											"name": "tag",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 6873,
											"end": 7157,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6898,
											"end": 6904,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6895,
											"end": 6896,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6892,
											"end": 6905,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 6873,
											"end": 7157,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6873,
											"end": 7157,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 6873,
											"end": 7157,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6974,
											"end": 6980,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6968,
											"end": 6981,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7001,
											"end": 7064,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 7060,
											"end": 7063,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 7045,
											"end": 7058,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7001,
											"end": 7064,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 7001,
											"end": 7064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7001,
											"end": 7064,
											"name": "tag",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 7001,
											"end": 7064,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6994,
											"end": 7064,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 6994,
											"end": 7064,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7087,
											"end": 7147,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 7140,
											"end": 7146,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7087,
											"end": 7147,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 7087,
											"end": 7147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7087,
											"end": 7147,
											"name": "tag",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 7087,
											"end": 7147,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7077,
											"end": 7147,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7077,
											"end": 7147,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6933,
											"end": 7157,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6920,
											"end": 6921,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6917,
											"end": 6918,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6913,
											"end": 6922,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6908,
											"end": 6922,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6908,
											"end": 6922,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6873,
											"end": 7157,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 6873,
											"end": 7157,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6873,
											"end": 7157,
											"name": "tag",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 6873,
											"end": 7157,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6877,
											"end": 6891,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7173,
											"end": 7176,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7166,
											"end": 7176,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7166,
											"end": 7176,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6574,
											"end": 7182,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6574,
											"end": 7182,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6574,
											"end": 7182,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6450,
											"end": 7182,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6450,
											"end": 7182,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6450,
											"end": 7182,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6450,
											"end": 7182,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6450,
											"end": 7182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7188,
											"end": 7561,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 7188,
											"end": 7561,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7331,
											"end": 7335,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7369,
											"end": 7371,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7358,
											"end": 7367,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7354,
											"end": 7372,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7346,
											"end": 7372,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7346,
											"end": 7372,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7418,
											"end": 7427,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7412,
											"end": 7416,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7408,
											"end": 7428,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7404,
											"end": 7405,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7393,
											"end": 7402,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7389,
											"end": 7406,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7382,
											"end": 7429,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7446,
											"end": 7554,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 7549,
											"end": 7553,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7540,
											"end": 7546,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7446,
											"end": 7554,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 7446,
											"end": 7554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7446,
											"end": 7554,
											"name": "tag",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 7446,
											"end": 7554,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7438,
											"end": 7554,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7438,
											"end": 7554,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7188,
											"end": 7561,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7188,
											"end": 7561,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7188,
											"end": 7561,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7188,
											"end": 7561,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7188,
											"end": 7561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7567,
											"end": 8041,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 7567,
											"end": 8041,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7635,
											"end": 7641,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7643,
											"end": 7649,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7692,
											"end": 7694,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7680,
											"end": 7689,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7671,
											"end": 7678,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7667,
											"end": 7690,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7663,
											"end": 7695,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 7660,
											"end": 7779,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7660,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 7660,
											"end": 7779,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7698,
											"end": 7777,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 7698,
											"end": 7777,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 7698,
											"end": 7777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7698,
											"end": 7777,
											"name": "tag",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 7698,
											"end": 7777,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7660,
											"end": 7779,
											"name": "tag",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 7660,
											"end": 7779,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7818,
											"end": 7819,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7843,
											"end": 7896,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 7888,
											"end": 7895,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7879,
											"end": 7885,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 7877,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7864,
											"end": 7886,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7843,
											"end": 7896,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 7843,
											"end": 7896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7843,
											"end": 7896,
											"name": "tag",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 7843,
											"end": 7896,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7833,
											"end": 7896,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7833,
											"end": 7896,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7789,
											"end": 7906,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7945,
											"end": 7947,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7971,
											"end": 8024,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 8016,
											"end": 8023,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8007,
											"end": 8013,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7996,
											"end": 8005,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7992,
											"end": 8014,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7971,
											"end": 8024,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 7971,
											"end": 8024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7971,
											"end": 8024,
											"name": "tag",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 7971,
											"end": 8024,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7961,
											"end": 8024,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7961,
											"end": 8024,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7916,
											"end": 8034,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7567,
											"end": 8041,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7567,
											"end": 8041,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7567,
											"end": 8041,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7567,
											"end": 8041,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7567,
											"end": 8041,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7567,
											"end": 8041,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8047,
											"end": 9250,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 8047,
											"end": 9250,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8160,
											"end": 8166,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8168,
											"end": 8174,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8176,
											"end": 8182,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8184,
											"end": 8190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8192,
											"end": 8198,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8200,
											"end": 8206,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8208,
											"end": 8214,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8257,
											"end": 8260,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 8245,
											"end": 8254,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 8236,
											"end": 8243,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 8232,
											"end": 8255,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8228,
											"end": 8261,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 8225,
											"end": 8345,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8225,
											"end": 8345,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 8225,
											"end": 8345,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8264,
											"end": 8343,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 8264,
											"end": 8343,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 8264,
											"end": 8343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8264,
											"end": 8343,
											"name": "tag",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 8264,
											"end": 8343,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8225,
											"end": 8345,
											"name": "tag",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 8225,
											"end": 8345,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8384,
											"end": 8385,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8409,
											"end": 8462,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 8454,
											"end": 8461,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 8445,
											"end": 8451,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8434,
											"end": 8443,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 8430,
											"end": 8452,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8409,
											"end": 8462,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 8409,
											"end": 8462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8409,
											"end": 8462,
											"name": "tag",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 8409,
											"end": 8462,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8399,
											"end": 8462,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 8399,
											"end": 8462,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8355,
											"end": 8472,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8511,
											"end": 8513,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8537,
											"end": 8590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 8582,
											"end": 8589,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 8573,
											"end": 8579,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8562,
											"end": 8571,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 8558,
											"end": 8580,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8537,
											"end": 8590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 8537,
											"end": 8590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8537,
											"end": 8590,
											"name": "tag",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 8537,
											"end": 8590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8527,
											"end": 8590,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 8527,
											"end": 8590,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8482,
											"end": 8600,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8639,
											"end": 8641,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8665,
											"end": 8718,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 8710,
											"end": 8717,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 8701,
											"end": 8707,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8690,
											"end": 8699,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 8686,
											"end": 8708,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8665,
											"end": 8718,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 8665,
											"end": 8718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8665,
											"end": 8718,
											"name": "tag",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 8665,
											"end": 8718,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8655,
											"end": 8718,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 8655,
											"end": 8718,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8610,
											"end": 8728,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8767,
											"end": 8769,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 8793,
											"end": 8846,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 8838,
											"end": 8845,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 8829,
											"end": 8835,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8818,
											"end": 8827,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 8814,
											"end": 8836,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8793,
											"end": 8846,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 8793,
											"end": 8846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8793,
											"end": 8846,
											"name": "tag",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 8793,
											"end": 8846,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8783,
											"end": 8846,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 8783,
											"end": 8846,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8738,
											"end": 8856,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8895,
											"end": 8898,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 8922,
											"end": 8975,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 8967,
											"end": 8974,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 8958,
											"end": 8964,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8947,
											"end": 8956,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 8943,
											"end": 8965,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8922,
											"end": 8975,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 8922,
											"end": 8975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8922,
											"end": 8975,
											"name": "tag",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 8922,
											"end": 8975,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8912,
											"end": 8975,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 8912,
											"end": 8975,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8866,
											"end": 8985,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9024,
											"end": 9027,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 9051,
											"end": 9104,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 9096,
											"end": 9103,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 9087,
											"end": 9093,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9076,
											"end": 9085,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 9072,
											"end": 9094,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9051,
											"end": 9104,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 9051,
											"end": 9104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9051,
											"end": 9104,
											"name": "tag",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 9051,
											"end": 9104,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9041,
											"end": 9104,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9041,
											"end": 9104,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8995,
											"end": 9114,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9153,
											"end": 9156,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 9180,
											"end": 9233,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 9225,
											"end": 9232,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 9216,
											"end": 9222,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9205,
											"end": 9214,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 9201,
											"end": 9223,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9180,
											"end": 9233,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 9180,
											"end": 9233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9180,
											"end": 9233,
											"name": "tag",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 9180,
											"end": 9233,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9170,
											"end": 9233,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9170,
											"end": 9233,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9124,
											"end": 9243,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8047,
											"end": 9250,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8047,
											"end": 9250,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 8047,
											"end": 9250,
											"name": "SWAP9",
											"source": 7
										},
										{
											"begin": 8047,
											"end": 9250,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8047,
											"end": 9250,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 8047,
											"end": 9250,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 8047,
											"end": 9250,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8047,
											"end": 9250,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8047,
											"end": 9250,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 8047,
											"end": 9250,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8047,
											"end": 9250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9256,
											"end": 9588,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 9256,
											"end": 9588,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9377,
											"end": 9381,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9415,
											"end": 9417,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9404,
											"end": 9413,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9400,
											"end": 9418,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9392,
											"end": 9418,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9392,
											"end": 9418,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9428,
											"end": 9499,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 9496,
											"end": 9497,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9485,
											"end": 9494,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9481,
											"end": 9498,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9472,
											"end": 9478,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9428,
											"end": 9499,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 9428,
											"end": 9499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9428,
											"end": 9499,
											"name": "tag",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 9428,
											"end": 9499,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9509,
											"end": 9581,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 9577,
											"end": 9579,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9566,
											"end": 9575,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9562,
											"end": 9580,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9553,
											"end": 9559,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9509,
											"end": 9581,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 9509,
											"end": 9581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9509,
											"end": 9581,
											"name": "tag",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 9509,
											"end": 9581,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9256,
											"end": 9588,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 9256,
											"end": 9588,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9256,
											"end": 9588,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9256,
											"end": 9588,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9256,
											"end": 9588,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9256,
											"end": 9588,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9594,
											"end": 10068,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 9594,
											"end": 10068,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9662,
											"end": 9668,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9670,
											"end": 9676,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9719,
											"end": 9721,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9707,
											"end": 9716,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9698,
											"end": 9705,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9694,
											"end": 9717,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9690,
											"end": 9722,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 9687,
											"end": 9806,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9687,
											"end": 9806,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 9687,
											"end": 9806,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9725,
											"end": 9804,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 9725,
											"end": 9804,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 9725,
											"end": 9804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9725,
											"end": 9804,
											"name": "tag",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 9725,
											"end": 9804,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9687,
											"end": 9806,
											"name": "tag",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 9687,
											"end": 9806,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9845,
											"end": 9846,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9870,
											"end": 9923,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 9915,
											"end": 9922,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9906,
											"end": 9912,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9895,
											"end": 9904,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 9891,
											"end": 9913,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9870,
											"end": 9923,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 9870,
											"end": 9923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9870,
											"end": 9923,
											"name": "tag",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 9870,
											"end": 9923,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9860,
											"end": 9923,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9860,
											"end": 9923,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9816,
											"end": 9933,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9972,
											"end": 9974,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9998,
											"end": 10051,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 10043,
											"end": 10050,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 10034,
											"end": 10040,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10023,
											"end": 10032,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 10019,
											"end": 10041,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9998,
											"end": 10051,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 9998,
											"end": 10051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9998,
											"end": 10051,
											"name": "tag",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 9998,
											"end": 10051,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9988,
											"end": 10051,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9988,
											"end": 10051,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9943,
											"end": 10061,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9594,
											"end": 10068,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9594,
											"end": 10068,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9594,
											"end": 10068,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9594,
											"end": 10068,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9594,
											"end": 10068,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9594,
											"end": 10068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10074,
											"end": 11423,
											"name": "tag",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 10074,
											"end": 11423,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10196,
											"end": 10202,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10204,
											"end": 10210,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10212,
											"end": 10218,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10220,
											"end": 10226,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10228,
											"end": 10234,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10236,
											"end": 10242,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10244,
											"end": 10250,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10252,
											"end": 10258,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10301,
											"end": 10304,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 10289,
											"end": 10298,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 10280,
											"end": 10287,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 10276,
											"end": 10299,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10272,
											"end": 10305,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 10269,
											"end": 10389,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10269,
											"end": 10389,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 10269,
											"end": 10389,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10308,
											"end": 10387,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 10308,
											"end": 10387,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 10308,
											"end": 10387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10308,
											"end": 10387,
											"name": "tag",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 10308,
											"end": 10387,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10269,
											"end": 10389,
											"name": "tag",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 10269,
											"end": 10389,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10428,
											"end": 10429,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10453,
											"end": 10506,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "377"
										},
										{
											"begin": 10498,
											"end": 10505,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 10489,
											"end": 10495,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10478,
											"end": 10487,
											"name": "DUP13",
											"source": 7
										},
										{
											"begin": 10474,
											"end": 10496,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10453,
											"end": 10506,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 10453,
											"end": 10506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10453,
											"end": 10506,
											"name": "tag",
											"source": 7,
											"value": "377"
										},
										{
											"begin": 10453,
											"end": 10506,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10443,
											"end": 10506,
											"name": "SWAP9",
											"source": 7
										},
										{
											"begin": 10443,
											"end": 10506,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10399,
											"end": 10516,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10555,
											"end": 10557,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10581,
											"end": 10634,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 10626,
											"end": 10633,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 10617,
											"end": 10623,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10606,
											"end": 10615,
											"name": "DUP13",
											"source": 7
										},
										{
											"begin": 10602,
											"end": 10624,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10581,
											"end": 10634,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 10581,
											"end": 10634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10581,
											"end": 10634,
											"name": "tag",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 10581,
											"end": 10634,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10571,
											"end": 10634,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 10571,
											"end": 10634,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10526,
											"end": 10644,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10683,
											"end": 10685,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10709,
											"end": 10762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 10754,
											"end": 10761,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 10745,
											"end": 10751,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10734,
											"end": 10743,
											"name": "DUP13",
											"source": 7
										},
										{
											"begin": 10730,
											"end": 10752,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10709,
											"end": 10762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 10709,
											"end": 10762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10709,
											"end": 10762,
											"name": "tag",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 10709,
											"end": 10762,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10699,
											"end": 10762,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 10699,
											"end": 10762,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10654,
											"end": 10772,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10811,
											"end": 10813,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 10837,
											"end": 10890,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 10882,
											"end": 10889,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 10873,
											"end": 10879,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10862,
											"end": 10871,
											"name": "DUP13",
											"source": 7
										},
										{
											"begin": 10858,
											"end": 10880,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10837,
											"end": 10890,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 10837,
											"end": 10890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10837,
											"end": 10890,
											"name": "tag",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 10837,
											"end": 10890,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10827,
											"end": 10890,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 10827,
											"end": 10890,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10782,
											"end": 10900,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10939,
											"end": 10942,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 10966,
											"end": 11019,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 11011,
											"end": 11018,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 11002,
											"end": 11008,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10991,
											"end": 11000,
											"name": "DUP13",
											"source": 7
										},
										{
											"begin": 10987,
											"end": 11009,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10966,
											"end": 11019,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 10966,
											"end": 11019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10966,
											"end": 11019,
											"name": "tag",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 10966,
											"end": 11019,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10956,
											"end": 11019,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 10956,
											"end": 11019,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10910,
											"end": 11029,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11068,
											"end": 11071,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 11095,
											"end": 11148,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "382"
										},
										{
											"begin": 11140,
											"end": 11147,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 11131,
											"end": 11137,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11120,
											"end": 11129,
											"name": "DUP13",
											"source": 7
										},
										{
											"begin": 11116,
											"end": 11138,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11095,
											"end": 11148,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 11095,
											"end": 11148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11095,
											"end": 11148,
											"name": "tag",
											"source": 7,
											"value": "382"
										},
										{
											"begin": 11095,
											"end": 11148,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11085,
											"end": 11148,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 11085,
											"end": 11148,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11039,
											"end": 11158,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11197,
											"end": 11200,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 11224,
											"end": 11277,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 11269,
											"end": 11276,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 11260,
											"end": 11266,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11249,
											"end": 11258,
											"name": "DUP13",
											"source": 7
										},
										{
											"begin": 11245,
											"end": 11267,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11224,
											"end": 11277,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 11224,
											"end": 11277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11224,
											"end": 11277,
											"name": "tag",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 11224,
											"end": 11277,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11214,
											"end": 11277,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11214,
											"end": 11277,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11168,
											"end": 11287,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11326,
											"end": 11329,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 11353,
											"end": 11406,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 11398,
											"end": 11405,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 11389,
											"end": 11395,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11378,
											"end": 11387,
											"name": "DUP13",
											"source": 7
										},
										{
											"begin": 11374,
											"end": 11396,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11353,
											"end": 11406,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 11353,
											"end": 11406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11353,
											"end": 11406,
											"name": "tag",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 11353,
											"end": 11406,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11343,
											"end": 11406,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11343,
											"end": 11406,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11297,
											"end": 11416,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10074,
											"end": 11423,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10074,
											"end": 11423,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 10074,
											"end": 11423,
											"name": "SWAP9",
											"source": 7
										},
										{
											"begin": 10074,
											"end": 11423,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10074,
											"end": 11423,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10074,
											"end": 11423,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 10074,
											"end": 11423,
											"name": "SWAP9",
											"source": 7
										},
										{
											"begin": 10074,
											"end": 11423,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10074,
											"end": 11423,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 10074,
											"end": 11423,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 10074,
											"end": 11423,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10074,
											"end": 11423,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11429,
											"end": 11871,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 11429,
											"end": 11871,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11578,
											"end": 11582,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11616,
											"end": 11618,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 11605,
											"end": 11614,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11601,
											"end": 11619,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11593,
											"end": 11619,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11593,
											"end": 11619,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11629,
											"end": 11700,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 11697,
											"end": 11698,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11686,
											"end": 11695,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11682,
											"end": 11699,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11673,
											"end": 11679,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 11629,
											"end": 11700,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 11629,
											"end": 11700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11629,
											"end": 11700,
											"name": "tag",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 11629,
											"end": 11700,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11710,
											"end": 11782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 11778,
											"end": 11780,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11767,
											"end": 11776,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11763,
											"end": 11781,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11754,
											"end": 11760,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 11710,
											"end": 11782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 11710,
											"end": 11782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11710,
											"end": 11782,
											"name": "tag",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 11710,
											"end": 11782,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11792,
											"end": 11864,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 11860,
											"end": 11862,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11849,
											"end": 11858,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11845,
											"end": 11863,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11836,
											"end": 11842,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 11792,
											"end": 11864,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 11792,
											"end": 11864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11792,
											"end": 11864,
											"name": "tag",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 11792,
											"end": 11864,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11429,
											"end": 11871,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 11429,
											"end": 11871,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 11429,
											"end": 11871,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11429,
											"end": 11871,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11429,
											"end": 11871,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11429,
											"end": 11871,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11429,
											"end": 11871,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11877,
											"end": 12046,
											"name": "tag",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 11877,
											"end": 12046,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11961,
											"end": 11972,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11995,
											"end": 12001,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11990,
											"end": 11993,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11983,
											"end": 12002,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12035,
											"end": 12039,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12030,
											"end": 12033,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12026,
											"end": 12040,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12011,
											"end": 12040,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12011,
											"end": 12040,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11877,
											"end": 12046,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11877,
											"end": 12046,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11877,
											"end": 12046,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11877,
											"end": 12046,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11877,
											"end": 12046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12052,
											"end": 12218,
											"name": "tag",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 12052,
											"end": 12218,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12192,
											"end": 12210,
											"name": "PUSH",
											"source": 7,
											"value": "496E76616C696420726573657276657300000000000000000000000000000000"
										},
										{
											"begin": 12188,
											"end": 12189,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12180,
											"end": 12186,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12176,
											"end": 12190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12169,
											"end": 12211,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12052,
											"end": 12218,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12052,
											"end": 12218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12224,
											"end": 12590,
											"name": "tag",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 12224,
											"end": 12590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12366,
											"end": 12369,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12387,
											"end": 12454,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 12451,
											"end": 12453,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 12446,
											"end": 12449,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12387,
											"end": 12454,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 12387,
											"end": 12454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12387,
											"end": 12454,
											"name": "tag",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 12387,
											"end": 12454,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12380,
											"end": 12454,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12380,
											"end": 12454,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12463,
											"end": 12556,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "393"
										},
										{
											"begin": 12552,
											"end": 12555,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12463,
											"end": 12556,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 12463,
											"end": 12556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12463,
											"end": 12556,
											"name": "tag",
											"source": 7,
											"value": "393"
										},
										{
											"begin": 12463,
											"end": 12556,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12581,
											"end": 12583,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12576,
											"end": 12579,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12572,
											"end": 12584,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12565,
											"end": 12584,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12565,
											"end": 12584,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12224,
											"end": 12590,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12224,
											"end": 12590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12224,
											"end": 12590,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12224,
											"end": 12590,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12596,
											"end": 13015,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 12596,
											"end": 13015,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12762,
											"end": 12766,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12800,
											"end": 12802,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12789,
											"end": 12798,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12785,
											"end": 12803,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12777,
											"end": 12803,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12777,
											"end": 12803,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12849,
											"end": 12858,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12843,
											"end": 12847,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12839,
											"end": 12859,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 12835,
											"end": 12836,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12824,
											"end": 12833,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12820,
											"end": 12837,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12813,
											"end": 12860,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12877,
											"end": 13008,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 13003,
											"end": 13007,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12877,
											"end": 13008,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 12877,
											"end": 13008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12877,
											"end": 13008,
											"name": "tag",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 12877,
											"end": 13008,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12869,
											"end": 13008,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12869,
											"end": 13008,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12596,
											"end": 13015,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12596,
											"end": 13015,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12596,
											"end": 13015,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12596,
											"end": 13015,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13021,
											"end": 13201,
											"name": "tag",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 13021,
											"end": 13201,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13069,
											"end": 13146,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13066,
											"end": 13067,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13059,
											"end": 13147,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13166,
											"end": 13170,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 13163,
											"end": 13164,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 13156,
											"end": 13171,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13190,
											"end": 13194,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 13187,
											"end": 13188,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13180,
											"end": 13195,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 13207,
											"end": 13617,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 13207,
											"end": 13617,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13247,
											"end": 13254,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13270,
											"end": 13290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "398"
										},
										{
											"begin": 13288,
											"end": 13289,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13270,
											"end": 13290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 13270,
											"end": 13290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13270,
											"end": 13290,
											"name": "tag",
											"source": 7,
											"value": "398"
										},
										{
											"begin": 13270,
											"end": 13290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13265,
											"end": 13290,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13265,
											"end": 13290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13304,
											"end": 13324,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "399"
										},
										{
											"begin": 13322,
											"end": 13323,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13304,
											"end": 13324,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 13304,
											"end": 13324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13304,
											"end": 13324,
											"name": "tag",
											"source": 7,
											"value": "399"
										},
										{
											"begin": 13304,
											"end": 13324,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13299,
											"end": 13324,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13299,
											"end": 13324,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13359,
											"end": 13360,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13356,
											"end": 13357,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13352,
											"end": 13361,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 13381,
											"end": 13411,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 13399,
											"end": 13410,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13381,
											"end": 13411,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 13381,
											"end": 13411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13381,
											"end": 13411,
											"name": "tag",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 13381,
											"end": 13411,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13370,
											"end": 13411,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13370,
											"end": 13411,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13560,
											"end": 13561,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13551,
											"end": 13558,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13547,
											"end": 13562,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 13544,
											"end": 13545,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 13541,
											"end": 13563,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 13521,
											"end": 13522,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13514,
											"end": 13523,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 13494,
											"end": 13577,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 13471,
											"end": 13610,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 13471,
											"end": 13610,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13590,
											"end": 13608,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 13590,
											"end": 13608,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 13590,
											"end": 13608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13590,
											"end": 13608,
											"name": "tag",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 13590,
											"end": 13608,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13471,
											"end": 13610,
											"name": "tag",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 13471,
											"end": 13610,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13255,
											"end": 13617,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13207,
											"end": 13617,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13207,
											"end": 13617,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13207,
											"end": 13617,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13207,
											"end": 13617,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13207,
											"end": 13617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13623,
											"end": 13814,
											"name": "tag",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 13623,
											"end": 13814,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13663,
											"end": 13666,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13682,
											"end": 13702,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "404"
										},
										{
											"begin": 13700,
											"end": 13701,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13682,
											"end": 13702,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 13682,
											"end": 13702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13682,
											"end": 13702,
											"name": "tag",
											"source": 7,
											"value": "404"
										},
										{
											"begin": 13682,
											"end": 13702,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13677,
											"end": 13702,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13677,
											"end": 13702,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13716,
											"end": 13736,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 13734,
											"end": 13735,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13716,
											"end": 13736,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 13716,
											"end": 13736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13716,
											"end": 13736,
											"name": "tag",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 13716,
											"end": 13736,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13711,
											"end": 13736,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13711,
											"end": 13736,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13759,
											"end": 13760,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13756,
											"end": 13757,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13752,
											"end": 13761,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13745,
											"end": 13761,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13745,
											"end": 13761,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13780,
											"end": 13783,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 13777,
											"end": 13778,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13774,
											"end": 13784,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 13771,
											"end": 13807,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 13771,
											"end": 13807,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 13771,
											"end": 13807,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13787,
											"end": 13805,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 13787,
											"end": 13805,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 13787,
											"end": 13805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13787,
											"end": 13805,
											"name": "tag",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 13787,
											"end": 13805,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13771,
											"end": 13807,
											"name": "tag",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 13771,
											"end": 13807,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13623,
											"end": 13814,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13623,
											"end": 13814,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13623,
											"end": 13814,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13623,
											"end": 13814,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13623,
											"end": 13814,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13820,
											"end": 14000,
											"name": "tag",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 13820,
											"end": 14000,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13868,
											"end": 13945,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13865,
											"end": 13866,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13858,
											"end": 13946,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13965,
											"end": 13969,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 13962,
											"end": 13963,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 13955,
											"end": 13970,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13989,
											"end": 13993,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 13986,
											"end": 13987,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13979,
											"end": 13994,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 14006,
											"end": 14191,
											"name": "tag",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 14006,
											"end": 14191,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14046,
											"end": 14047,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14063,
											"end": 14083,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 14081,
											"end": 14082,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14063,
											"end": 14083,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 14063,
											"end": 14083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14063,
											"end": 14083,
											"name": "tag",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 14063,
											"end": 14083,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14058,
											"end": 14083,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14058,
											"end": 14083,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14097,
											"end": 14117,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 14115,
											"end": 14116,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14097,
											"end": 14117,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 14097,
											"end": 14117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14097,
											"end": 14117,
											"name": "tag",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 14097,
											"end": 14117,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14092,
											"end": 14117,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14092,
											"end": 14117,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14136,
											"end": 14137,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14126,
											"end": 14161,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 14126,
											"end": 14161,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 14141,
											"end": 14159,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 14141,
											"end": 14159,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 14141,
											"end": 14159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14141,
											"end": 14159,
											"name": "tag",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 14141,
											"end": 14159,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14126,
											"end": 14161,
											"name": "tag",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 14126,
											"end": 14161,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14183,
											"end": 14184,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14180,
											"end": 14181,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14176,
											"end": 14185,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 14171,
											"end": 14185,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14171,
											"end": 14185,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14006,
											"end": 14191,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14006,
											"end": 14191,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14006,
											"end": 14191,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14006,
											"end": 14191,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14006,
											"end": 14191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14197,
											"end": 14354,
											"name": "tag",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 14197,
											"end": 14354,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14337,
											"end": 14346,
											"name": "PUSH",
											"source": 7,
											"value": "4578706972656400000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14333,
											"end": 14334,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14325,
											"end": 14331,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14321,
											"end": 14335,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14314,
											"end": 14347,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14197,
											"end": 14354,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14197,
											"end": 14354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14360,
											"end": 14725,
											"name": "tag",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 14360,
											"end": 14725,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14502,
											"end": 14505,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14523,
											"end": 14589,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "416"
										},
										{
											"begin": 14587,
											"end": 14588,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 14582,
											"end": 14585,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14523,
											"end": 14589,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 14523,
											"end": 14589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14523,
											"end": 14589,
											"name": "tag",
											"source": 7,
											"value": "416"
										},
										{
											"begin": 14523,
											"end": 14589,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14516,
											"end": 14589,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14516,
											"end": 14589,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14598,
											"end": 14691,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "417"
										},
										{
											"begin": 14687,
											"end": 14690,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14598,
											"end": 14691,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 14598,
											"end": 14691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14598,
											"end": 14691,
											"name": "tag",
											"source": 7,
											"value": "417"
										},
										{
											"begin": 14598,
											"end": 14691,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14716,
											"end": 14718,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14711,
											"end": 14714,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14707,
											"end": 14719,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14700,
											"end": 14719,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14700,
											"end": 14719,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14360,
											"end": 14725,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14360,
											"end": 14725,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14360,
											"end": 14725,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14360,
											"end": 14725,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14731,
											"end": 15150,
											"name": "tag",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 14731,
											"end": 15150,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14897,
											"end": 14901,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14935,
											"end": 14937,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14924,
											"end": 14933,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14920,
											"end": 14938,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14912,
											"end": 14938,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14912,
											"end": 14938,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14984,
											"end": 14993,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14978,
											"end": 14982,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14974,
											"end": 14994,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 14970,
											"end": 14971,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14959,
											"end": 14968,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14955,
											"end": 14972,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14948,
											"end": 14995,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15012,
											"end": 15143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 15138,
											"end": 15142,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15012,
											"end": 15143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 15012,
											"end": 15143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15012,
											"end": 15143,
											"name": "tag",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 15012,
											"end": 15143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15004,
											"end": 15143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15004,
											"end": 15143,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14731,
											"end": 15150,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14731,
											"end": 15150,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14731,
											"end": 15150,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14731,
											"end": 15150,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15156,
											"end": 15333,
											"name": "tag",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 15156,
											"end": 15333,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15296,
											"end": 15325,
											"name": "PUSH",
											"source": 7,
											"value": "4F6E6C7920322D746F6B656E207061746820737570706F727465640000000000"
										},
										{
											"begin": 15292,
											"end": 15293,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15284,
											"end": 15290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15280,
											"end": 15294,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15273,
											"end": 15326,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15156,
											"end": 15333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15156,
											"end": 15333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15339,
											"end": 15705,
											"name": "tag",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 15339,
											"end": 15705,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15481,
											"end": 15484,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15502,
											"end": 15569,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "422"
										},
										{
											"begin": 15566,
											"end": 15568,
											"name": "PUSH",
											"source": 7,
											"value": "1B"
										},
										{
											"begin": 15561,
											"end": 15564,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15502,
											"end": 15569,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 15502,
											"end": 15569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15502,
											"end": 15569,
											"name": "tag",
											"source": 7,
											"value": "422"
										},
										{
											"begin": 15502,
											"end": 15569,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15495,
											"end": 15569,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15495,
											"end": 15569,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15578,
											"end": 15671,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 15667,
											"end": 15670,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15578,
											"end": 15671,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 15578,
											"end": 15671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15578,
											"end": 15671,
											"name": "tag",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 15578,
											"end": 15671,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15696,
											"end": 15698,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 15691,
											"end": 15694,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15687,
											"end": 15699,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15680,
											"end": 15699,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15680,
											"end": 15699,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15339,
											"end": 15705,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15339,
											"end": 15705,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15339,
											"end": 15705,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15339,
											"end": 15705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15711,
											"end": 16130,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 15711,
											"end": 16130,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15877,
											"end": 15881,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15915,
											"end": 15917,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 15904,
											"end": 15913,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15900,
											"end": 15918,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15892,
											"end": 15918,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15892,
											"end": 15918,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15964,
											"end": 15973,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15958,
											"end": 15962,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15954,
											"end": 15974,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 15950,
											"end": 15951,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15939,
											"end": 15948,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15935,
											"end": 15952,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15928,
											"end": 15975,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15992,
											"end": 16123,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 16118,
											"end": 16122,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15992,
											"end": 16123,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 15992,
											"end": 16123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15992,
											"end": 16123,
											"name": "tag",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 15992,
											"end": 16123,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15984,
											"end": 16123,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15984,
											"end": 16123,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15711,
											"end": 16130,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15711,
											"end": 16130,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15711,
											"end": 16130,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15711,
											"end": 16130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16136,
											"end": 16316,
											"name": "tag",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 16136,
											"end": 16316,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16184,
											"end": 16261,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16181,
											"end": 16182,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16174,
											"end": 16262,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16281,
											"end": 16285,
											"name": "PUSH",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 16278,
											"end": 16279,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 16271,
											"end": 16286,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16305,
											"end": 16309,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 16302,
											"end": 16303,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16295,
											"end": 16310,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 16322,
											"end": 16651,
											"name": "tag",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 16322,
											"end": 16651,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16381,
											"end": 16387,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16430,
											"end": 16432,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 16418,
											"end": 16427,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16409,
											"end": 16416,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 16405,
											"end": 16428,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 16401,
											"end": 16433,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 16398,
											"end": 16517,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 16398,
											"end": 16517,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 16398,
											"end": 16517,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 16436,
											"end": 16515,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "429"
										},
										{
											"begin": 16436,
											"end": 16515,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 16436,
											"end": 16515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16436,
											"end": 16515,
											"name": "tag",
											"source": 7,
											"value": "429"
										},
										{
											"begin": 16436,
											"end": 16515,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16398,
											"end": 16517,
											"name": "tag",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 16398,
											"end": 16517,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16556,
											"end": 16557,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16581,
											"end": 16634,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "430"
										},
										{
											"begin": 16626,
											"end": 16633,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 16617,
											"end": 16623,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16606,
											"end": 16615,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 16602,
											"end": 16624,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16581,
											"end": 16634,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 16581,
											"end": 16634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16581,
											"end": 16634,
											"name": "tag",
											"source": 7,
											"value": "430"
										},
										{
											"begin": 16581,
											"end": 16634,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16571,
											"end": 16634,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16571,
											"end": 16634,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16527,
											"end": 16644,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16322,
											"end": 16651,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 16322,
											"end": 16651,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16322,
											"end": 16651,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16322,
											"end": 16651,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16322,
											"end": 16651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16657,
											"end": 16826,
											"name": "tag",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 16657,
											"end": 16826,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16797,
											"end": 16818,
											"name": "PUSH",
											"source": 7,
											"value": "496E73756666696369656E74206F757470757400000000000000000000000000"
										},
										{
											"begin": 16793,
											"end": 16794,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16785,
											"end": 16791,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16781,
											"end": 16795,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16774,
											"end": 16819,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16657,
											"end": 16826,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16657,
											"end": 16826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16832,
											"end": 17198,
											"name": "tag",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 16832,
											"end": 17198,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16974,
											"end": 16977,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16995,
											"end": 17062,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "433"
										},
										{
											"begin": 17059,
											"end": 17061,
											"name": "PUSH",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 17054,
											"end": 17057,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16995,
											"end": 17062,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 16995,
											"end": 17062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16995,
											"end": 17062,
											"name": "tag",
											"source": 7,
											"value": "433"
										},
										{
											"begin": 16995,
											"end": 17062,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16988,
											"end": 17062,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16988,
											"end": 17062,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17071,
											"end": 17164,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "434"
										},
										{
											"begin": 17160,
											"end": 17163,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17071,
											"end": 17164,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 17071,
											"end": 17164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17071,
											"end": 17164,
											"name": "tag",
											"source": 7,
											"value": "434"
										},
										{
											"begin": 17071,
											"end": 17164,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17189,
											"end": 17191,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 17184,
											"end": 17187,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17180,
											"end": 17192,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17173,
											"end": 17192,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17173,
											"end": 17192,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16832,
											"end": 17198,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16832,
											"end": 17198,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16832,
											"end": 17198,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16832,
											"end": 17198,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17204,
											"end": 17623,
											"name": "tag",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 17204,
											"end": 17623,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17370,
											"end": 17374,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17408,
											"end": 17410,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 17397,
											"end": 17406,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17393,
											"end": 17411,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17385,
											"end": 17411,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17385,
											"end": 17411,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17457,
											"end": 17466,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17451,
											"end": 17455,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17447,
											"end": 17467,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 17443,
											"end": 17444,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17432,
											"end": 17441,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17428,
											"end": 17445,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17421,
											"end": 17468,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17485,
											"end": 17616,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "436"
										},
										{
											"begin": 17611,
											"end": 17615,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17485,
											"end": 17616,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 17485,
											"end": 17616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17485,
											"end": 17616,
											"name": "tag",
											"source": 7,
											"value": "436"
										},
										{
											"begin": 17485,
											"end": 17616,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17477,
											"end": 17616,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17477,
											"end": 17616,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17204,
											"end": 17623,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17204,
											"end": 17623,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17204,
											"end": 17623,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17204,
											"end": 17623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17629,
											"end": 17809,
											"name": "tag",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 17629,
											"end": 17809,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17677,
											"end": 17754,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17674,
											"end": 17675,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17667,
											"end": 17755,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17774,
											"end": 17778,
											"name": "PUSH",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 17771,
											"end": 17772,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 17764,
											"end": 17779,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17798,
											"end": 17802,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 17795,
											"end": 17796,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17788,
											"end": 17803,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 17815,
											"end": 17976,
											"name": "tag",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 17815,
											"end": 17976,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17955,
											"end": 17968,
											"name": "PUSH",
											"source": 7,
											"value": "4E6F207265736572766573000000000000000000000000000000000000000000"
										},
										{
											"begin": 17951,
											"end": 17952,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17943,
											"end": 17949,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17939,
											"end": 17953,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17932,
											"end": 17969,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17815,
											"end": 17976,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17815,
											"end": 17976,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17982,
											"end": 18348,
											"name": "tag",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 17982,
											"end": 18348,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18124,
											"end": 18127,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18145,
											"end": 18212,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "440"
										},
										{
											"begin": 18209,
											"end": 18211,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 18204,
											"end": 18207,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 18145,
											"end": 18212,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 18145,
											"end": 18212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18145,
											"end": 18212,
											"name": "tag",
											"source": 7,
											"value": "440"
										},
										{
											"begin": 18145,
											"end": 18212,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18138,
											"end": 18212,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18138,
											"end": 18212,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18221,
											"end": 18314,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "441"
										},
										{
											"begin": 18310,
											"end": 18313,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18221,
											"end": 18314,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 18221,
											"end": 18314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18221,
											"end": 18314,
											"name": "tag",
											"source": 7,
											"value": "441"
										},
										{
											"begin": 18221,
											"end": 18314,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18339,
											"end": 18341,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 18334,
											"end": 18337,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18330,
											"end": 18342,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18323,
											"end": 18342,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18323,
											"end": 18342,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17982,
											"end": 18348,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17982,
											"end": 18348,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17982,
											"end": 18348,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17982,
											"end": 18348,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18354,
											"end": 18773,
											"name": "tag",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 18354,
											"end": 18773,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18520,
											"end": 18524,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18558,
											"end": 18560,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 18547,
											"end": 18556,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18543,
											"end": 18561,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18535,
											"end": 18561,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18535,
											"end": 18561,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18607,
											"end": 18616,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18601,
											"end": 18605,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18597,
											"end": 18617,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 18593,
											"end": 18594,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18582,
											"end": 18591,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 18578,
											"end": 18595,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18571,
											"end": 18618,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 18635,
											"end": 18766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "443"
										},
										{
											"begin": 18761,
											"end": 18765,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18635,
											"end": 18766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 18635,
											"end": 18766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18635,
											"end": 18766,
											"name": "tag",
											"source": 7,
											"value": "443"
										},
										{
											"begin": 18635,
											"end": 18766,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18627,
											"end": 18766,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18627,
											"end": 18766,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18354,
											"end": 18773,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18354,
											"end": 18773,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18354,
											"end": 18773,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18354,
											"end": 18773,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18779,
											"end": 18941,
											"name": "tag",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 18779,
											"end": 18941,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18919,
											"end": 18933,
											"name": "PUSH",
											"source": 7,
											"value": "4E6F206C69717569646974790000000000000000000000000000000000000000"
										},
										{
											"begin": 18915,
											"end": 18916,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18907,
											"end": 18913,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18903,
											"end": 18917,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18896,
											"end": 18934,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 18779,
											"end": 18941,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18779,
											"end": 18941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18947,
											"end": 19313,
											"name": "tag",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 18947,
											"end": 19313,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19089,
											"end": 19092,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19110,
											"end": 19177,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "446"
										},
										{
											"begin": 19174,
											"end": 19176,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 19169,
											"end": 19172,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19110,
											"end": 19177,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 19110,
											"end": 19177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19110,
											"end": 19177,
											"name": "tag",
											"source": 7,
											"value": "446"
										},
										{
											"begin": 19110,
											"end": 19177,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19103,
											"end": 19177,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 19103,
											"end": 19177,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19186,
											"end": 19279,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "447"
										},
										{
											"begin": 19275,
											"end": 19278,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19186,
											"end": 19279,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 19186,
											"end": 19279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19186,
											"end": 19279,
											"name": "tag",
											"source": 7,
											"value": "447"
										},
										{
											"begin": 19186,
											"end": 19279,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19304,
											"end": 19306,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 19299,
											"end": 19302,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19295,
											"end": 19307,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19288,
											"end": 19307,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19288,
											"end": 19307,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18947,
											"end": 19313,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18947,
											"end": 19313,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18947,
											"end": 19313,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18947,
											"end": 19313,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19319,
											"end": 19738,
											"name": "tag",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 19319,
											"end": 19738,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19485,
											"end": 19489,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19523,
											"end": 19525,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 19512,
											"end": 19521,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19508,
											"end": 19526,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19500,
											"end": 19526,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19500,
											"end": 19526,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19572,
											"end": 19581,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 19566,
											"end": 19570,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 19562,
											"end": 19582,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 19558,
											"end": 19559,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19547,
											"end": 19556,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19543,
											"end": 19560,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19536,
											"end": 19583,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 19600,
											"end": 19731,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "449"
										},
										{
											"begin": 19726,
											"end": 19730,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 19600,
											"end": 19731,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 19600,
											"end": 19731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19600,
											"end": 19731,
											"name": "tag",
											"source": 7,
											"value": "449"
										},
										{
											"begin": 19600,
											"end": 19731,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19592,
											"end": 19731,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19592,
											"end": 19731,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19319,
											"end": 19738,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 19319,
											"end": 19738,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19319,
											"end": 19738,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19319,
											"end": 19738,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19744,
											"end": 19902,
											"name": "tag",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 19744,
											"end": 19902,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19884,
											"end": 19894,
											"name": "PUSH",
											"source": 7,
											"value": "536C697070616765000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19880,
											"end": 19881,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19872,
											"end": 19878,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19868,
											"end": 19882,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19861,
											"end": 19895,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 19744,
											"end": 19902,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19744,
											"end": 19902,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19908,
											"end": 20273,
											"name": "tag",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 19908,
											"end": 20273,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20050,
											"end": 20053,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20071,
											"end": 20137,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "452"
										},
										{
											"begin": 20135,
											"end": 20136,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 20130,
											"end": 20133,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 20071,
											"end": 20137,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 20071,
											"end": 20137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20071,
											"end": 20137,
											"name": "tag",
											"source": 7,
											"value": "452"
										},
										{
											"begin": 20071,
											"end": 20137,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20064,
											"end": 20137,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 20064,
											"end": 20137,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20146,
											"end": 20239,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "453"
										},
										{
											"begin": 20235,
											"end": 20238,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20146,
											"end": 20239,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 20146,
											"end": 20239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20146,
											"end": 20239,
											"name": "tag",
											"source": 7,
											"value": "453"
										},
										{
											"begin": 20146,
											"end": 20239,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20264,
											"end": 20266,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 20259,
											"end": 20262,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20255,
											"end": 20267,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20248,
											"end": 20267,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20248,
											"end": 20267,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19908,
											"end": 20273,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 19908,
											"end": 20273,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19908,
											"end": 20273,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19908,
											"end": 20273,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20279,
											"end": 20698,
											"name": "tag",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 20279,
											"end": 20698,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20445,
											"end": 20449,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20483,
											"end": 20485,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 20472,
											"end": 20481,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20468,
											"end": 20486,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20460,
											"end": 20486,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20460,
											"end": 20486,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20532,
											"end": 20541,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 20526,
											"end": 20530,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 20522,
											"end": 20542,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 20518,
											"end": 20519,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20507,
											"end": 20516,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 20503,
											"end": 20520,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20496,
											"end": 20543,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 20560,
											"end": 20691,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "455"
										},
										{
											"begin": 20686,
											"end": 20690,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 20560,
											"end": 20691,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 20560,
											"end": 20691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20560,
											"end": 20691,
											"name": "tag",
											"source": 7,
											"value": "455"
										},
										{
											"begin": 20560,
											"end": 20691,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20552,
											"end": 20691,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20552,
											"end": 20691,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20279,
											"end": 20698,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 20279,
											"end": 20698,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20279,
											"end": 20698,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20279,
											"end": 20698,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20704,
											"end": 20898,
											"name": "tag",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 20704,
											"end": 20898,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20744,
											"end": 20748,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20764,
											"end": 20784,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "457"
										},
										{
											"begin": 20782,
											"end": 20783,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20764,
											"end": 20784,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 20764,
											"end": 20784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20764,
											"end": 20784,
											"name": "tag",
											"source": 7,
											"value": "457"
										},
										{
											"begin": 20764,
											"end": 20784,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20759,
											"end": 20784,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 20759,
											"end": 20784,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20798,
											"end": 20818,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "458"
										},
										{
											"begin": 20816,
											"end": 20817,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 20798,
											"end": 20818,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 20798,
											"end": 20818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20798,
											"end": 20818,
											"name": "tag",
											"source": 7,
											"value": "458"
										},
										{
											"begin": 20798,
											"end": 20818,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20793,
											"end": 20818,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 20793,
											"end": 20818,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20842,
											"end": 20843,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20839,
											"end": 20840,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20835,
											"end": 20844,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 20827,
											"end": 20844,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20827,
											"end": 20844,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20866,
											"end": 20867,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 20860,
											"end": 20864,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 20857,
											"end": 20868,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 20854,
											"end": 20891,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 20854,
											"end": 20891,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "459"
										},
										{
											"begin": 20854,
											"end": 20891,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 20871,
											"end": 20889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "460"
										},
										{
											"begin": 20871,
											"end": 20889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 20871,
											"end": 20889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20871,
											"end": 20889,
											"name": "tag",
											"source": 7,
											"value": "460"
										},
										{
											"begin": 20871,
											"end": 20889,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20854,
											"end": 20891,
											"name": "tag",
											"source": 7,
											"value": "459"
										},
										{
											"begin": 20854,
											"end": 20891,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20704,
											"end": 20898,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 20704,
											"end": 20898,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 20704,
											"end": 20898,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20704,
											"end": 20898,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20704,
											"end": 20898,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20904,
											"end": 21127,
											"name": "tag",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 20904,
											"end": 21127,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20944,
											"end": 20948,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20964,
											"end": 20984,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "462"
										},
										{
											"begin": 20982,
											"end": 20983,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20964,
											"end": 20984,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 20964,
											"end": 20984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20964,
											"end": 20984,
											"name": "tag",
											"source": 7,
											"value": "462"
										},
										{
											"begin": 20964,
											"end": 20984,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20959,
											"end": 20984,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 20959,
											"end": 20984,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20998,
											"end": 21018,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "463"
										},
										{
											"begin": 21016,
											"end": 21017,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 20998,
											"end": 21018,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 20998,
											"end": 21018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20998,
											"end": 21018,
											"name": "tag",
											"source": 7,
											"value": "463"
										},
										{
											"begin": 20998,
											"end": 21018,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20993,
											"end": 21018,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 20993,
											"end": 21018,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21042,
											"end": 21043,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21039,
											"end": 21040,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21035,
											"end": 21044,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 21027,
											"end": 21044,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21027,
											"end": 21044,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21066,
											"end": 21096,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21060,
											"end": 21064,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 21057,
											"end": 21097,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 21054,
											"end": 21120,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 21054,
											"end": 21120,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "464"
										},
										{
											"begin": 21054,
											"end": 21120,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 21100,
											"end": 21118,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "465"
										},
										{
											"begin": 21100,
											"end": 21118,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 21100,
											"end": 21118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21100,
											"end": 21118,
											"name": "tag",
											"source": 7,
											"value": "465"
										},
										{
											"begin": 21100,
											"end": 21118,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21054,
											"end": 21120,
											"name": "tag",
											"source": 7,
											"value": "464"
										},
										{
											"begin": 21054,
											"end": 21120,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20904,
											"end": 21127,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 20904,
											"end": 21127,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 20904,
											"end": 21127,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20904,
											"end": 21127,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20904,
											"end": 21127,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21133,
											"end": 21353,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 21133,
											"end": 21353,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21173,
											"end": 21176,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 21192,
											"end": 21212,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "467"
										},
										{
											"begin": 21210,
											"end": 21211,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21192,
											"end": 21212,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 21192,
											"end": 21212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21192,
											"end": 21212,
											"name": "tag",
											"source": 7,
											"value": "467"
										},
										{
											"begin": 21192,
											"end": 21212,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21187,
											"end": 21212,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 21187,
											"end": 21212,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21226,
											"end": 21246,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "468"
										},
										{
											"begin": 21244,
											"end": 21245,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 21226,
											"end": 21246,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 21226,
											"end": 21246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21226,
											"end": 21246,
											"name": "tag",
											"source": 7,
											"value": "468"
										},
										{
											"begin": 21226,
											"end": 21246,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21221,
											"end": 21246,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 21221,
											"end": 21246,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21269,
											"end": 21270,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21266,
											"end": 21267,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21262,
											"end": 21271,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 21255,
											"end": 21271,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21255,
											"end": 21271,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21292,
											"end": 21322,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21287,
											"end": 21290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 21284,
											"end": 21323,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 21281,
											"end": 21346,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 21281,
											"end": 21346,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "469"
										},
										{
											"begin": 21281,
											"end": 21346,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 21326,
											"end": 21344,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "470"
										},
										{
											"begin": 21326,
											"end": 21344,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 21326,
											"end": 21344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21326,
											"end": 21344,
											"name": "tag",
											"source": 7,
											"value": "470"
										},
										{
											"begin": 21326,
											"end": 21344,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21281,
											"end": 21346,
											"name": "tag",
											"source": 7,
											"value": "469"
										},
										{
											"begin": 21281,
											"end": 21346,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21133,
											"end": 21353,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 21133,
											"end": 21353,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 21133,
											"end": 21353,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21133,
											"end": 21353,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21133,
											"end": 21353,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21359,
											"end": 21453,
											"name": "tag",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 21359,
											"end": 21453,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21392,
											"end": 21400,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 21440,
											"end": 21445,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 21436,
											"end": 21438,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 21432,
											"end": 21446,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 21411,
											"end": 21446,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21411,
											"end": 21446,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21359,
											"end": 21453,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 21359,
											"end": 21453,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21359,
											"end": 21453,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21359,
											"end": 21453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21459,
											"end": 21553,
											"name": "tag",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 21459,
											"end": 21553,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21498,
											"end": 21505,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 21527,
											"end": 21547,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "473"
										},
										{
											"begin": 21541,
											"end": 21546,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21527,
											"end": 21547,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 21527,
											"end": 21547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21527,
											"end": 21547,
											"name": "tag",
											"source": 7,
											"value": "473"
										},
										{
											"begin": 21527,
											"end": 21547,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21516,
											"end": 21547,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21516,
											"end": 21547,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21459,
											"end": 21553,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 21459,
											"end": 21553,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21459,
											"end": 21553,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21459,
											"end": 21553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21559,
											"end": 21659,
											"name": "tag",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 21559,
											"end": 21659,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21598,
											"end": 21605,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 21627,
											"end": 21653,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "475"
										},
										{
											"begin": 21647,
											"end": 21652,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21627,
											"end": 21653,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 21627,
											"end": 21653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21627,
											"end": 21653,
											"name": "tag",
											"source": 7,
											"value": "475"
										},
										{
											"begin": 21627,
											"end": 21653,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21616,
											"end": 21653,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21616,
											"end": 21653,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21559,
											"end": 21659,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 21559,
											"end": 21659,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21559,
											"end": 21659,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21559,
											"end": 21659,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21665,
											"end": 21822,
											"name": "tag",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 21665,
											"end": 21822,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21770,
											"end": 21815,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "477"
										},
										{
											"begin": 21790,
											"end": 21814,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "478"
										},
										{
											"begin": 21808,
											"end": 21813,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21790,
											"end": 21814,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 21790,
											"end": 21814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21790,
											"end": 21814,
											"name": "tag",
											"source": 7,
											"value": "478"
										},
										{
											"begin": 21790,
											"end": 21814,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21770,
											"end": 21815,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 21770,
											"end": 21815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21770,
											"end": 21815,
											"name": "tag",
											"source": 7,
											"value": "477"
										},
										{
											"begin": 21770,
											"end": 21815,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21765,
											"end": 21768,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21758,
											"end": 21816,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 21665,
											"end": 21822,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21665,
											"end": 21822,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21665,
											"end": 21822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21828,
											"end": 22225,
											"name": "tag",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 21828,
											"end": 22225,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21968,
											"end": 21971,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 21983,
											"end": 22058,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "480"
										},
										{
											"begin": 22054,
											"end": 22057,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 22045,
											"end": 22051,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 21983,
											"end": 22058,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 21983,
											"end": 22058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21983,
											"end": 22058,
											"name": "tag",
											"source": 7,
											"value": "480"
										},
										{
											"begin": 21983,
											"end": 22058,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22083,
											"end": 22085,
											"name": "PUSH",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 22078,
											"end": 22081,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 22074,
											"end": 22086,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 22067,
											"end": 22086,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 22067,
											"end": 22086,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22096,
											"end": 22171,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "481"
										},
										{
											"begin": 22167,
											"end": 22170,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 22158,
											"end": 22164,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 22096,
											"end": 22171,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 22096,
											"end": 22171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 22096,
											"end": 22171,
											"name": "tag",
											"source": 7,
											"value": "481"
										},
										{
											"begin": 22096,
											"end": 22171,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22196,
											"end": 22198,
											"name": "PUSH",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 22191,
											"end": 22194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 22187,
											"end": 22199,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 22180,
											"end": 22199,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 22180,
											"end": 22199,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22216,
											"end": 22219,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 22209,
											"end": 22219,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 22209,
											"end": 22219,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21828,
											"end": 22225,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 21828,
											"end": 22225,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 21828,
											"end": 22225,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21828,
											"end": 22225,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21828,
											"end": 22225,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21828,
											"end": 22225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 22231,
											"end": 22349,
											"name": "tag",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 22231,
											"end": 22349,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22318,
											"end": 22342,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "483"
										},
										{
											"begin": 22336,
											"end": 22341,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 22318,
											"end": 22342,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 22318,
											"end": 22342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 22318,
											"end": 22342,
											"name": "tag",
											"source": 7,
											"value": "483"
										},
										{
											"begin": 22318,
											"end": 22342,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22313,
											"end": 22316,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 22306,
											"end": 22343,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 22231,
											"end": 22349,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22231,
											"end": 22349,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22231,
											"end": 22349,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 22355,
											"end": 22687,
											"name": "tag",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 22355,
											"end": 22687,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22476,
											"end": 22480,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 22514,
											"end": 22516,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 22503,
											"end": 22512,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 22499,
											"end": 22517,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 22491,
											"end": 22517,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 22491,
											"end": 22517,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22527,
											"end": 22598,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "485"
										},
										{
											"begin": 22595,
											"end": 22596,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 22584,
											"end": 22593,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 22580,
											"end": 22597,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 22571,
											"end": 22577,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 22527,
											"end": 22598,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 22527,
											"end": 22598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 22527,
											"end": 22598,
											"name": "tag",
											"source": 7,
											"value": "485"
										},
										{
											"begin": 22527,
											"end": 22598,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22608,
											"end": 22680,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "486"
										},
										{
											"begin": 22676,
											"end": 22678,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 22665,
											"end": 22674,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 22661,
											"end": 22679,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 22652,
											"end": 22658,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 22608,
											"end": 22680,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 22608,
											"end": 22680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 22608,
											"end": 22680,
											"name": "tag",
											"source": 7,
											"value": "486"
										},
										{
											"begin": 22608,
											"end": 22680,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22355,
											"end": 22687,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 22355,
											"end": 22687,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 22355,
											"end": 22687,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22355,
											"end": 22687,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22355,
											"end": 22687,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22355,
											"end": 22687,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 22693,
											"end": 22857,
											"name": "tag",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 22693,
											"end": 22857,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22833,
											"end": 22849,
											"name": "PUSH",
											"source": 7,
											"value": "496E73756666696369656E742042000000000000000000000000000000000000"
										},
										{
											"begin": 22829,
											"end": 22830,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 22821,
											"end": 22827,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 22817,
											"end": 22831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 22810,
											"end": 22850,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 22693,
											"end": 22857,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22693,
											"end": 22857,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 22863,
											"end": 23229,
											"name": "tag",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 22863,
											"end": 23229,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 23005,
											"end": 23008,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 23026,
											"end": 23093,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "489"
										},
										{
											"begin": 23090,
											"end": 23092,
											"name": "PUSH",
											"source": 7,
											"value": "E"
										},
										{
											"begin": 23085,
											"end": 23088,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 23026,
											"end": 23093,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 23026,
											"end": 23093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 23026,
											"end": 23093,
											"name": "tag",
											"source": 7,
											"value": "489"
										},
										{
											"begin": 23026,
											"end": 23093,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 23019,
											"end": 23093,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 23019,
											"end": 23093,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23102,
											"end": 23195,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "490"
										},
										{
											"begin": 23191,
											"end": 23194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 23102,
											"end": 23195,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 23102,
											"end": 23195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 23102,
											"end": 23195,
											"name": "tag",
											"source": 7,
											"value": "490"
										},
										{
											"begin": 23102,
											"end": 23195,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 23220,
											"end": 23222,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 23215,
											"end": 23218,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 23211,
											"end": 23223,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 23204,
											"end": 23223,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 23204,
											"end": 23223,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22863,
											"end": 23229,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 22863,
											"end": 23229,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 22863,
											"end": 23229,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22863,
											"end": 23229,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 23235,
											"end": 23654,
											"name": "tag",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 23235,
											"end": 23654,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 23401,
											"end": 23405,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 23439,
											"end": 23441,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 23428,
											"end": 23437,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 23424,
											"end": 23442,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 23416,
											"end": 23442,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 23416,
											"end": 23442,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23488,
											"end": 23497,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 23482,
											"end": 23486,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 23478,
											"end": 23498,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 23474,
											"end": 23475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 23463,
											"end": 23472,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 23459,
											"end": 23476,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 23452,
											"end": 23499,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 23516,
											"end": 23647,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "492"
										},
										{
											"begin": 23642,
											"end": 23646,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 23516,
											"end": 23647,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 23516,
											"end": 23647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 23516,
											"end": 23647,
											"name": "tag",
											"source": 7,
											"value": "492"
										},
										{
											"begin": 23516,
											"end": 23647,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 23508,
											"end": 23647,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 23508,
											"end": 23647,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23235,
											"end": 23654,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 23235,
											"end": 23654,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 23235,
											"end": 23654,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23235,
											"end": 23654,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 23660,
											"end": 23824,
											"name": "tag",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 23660,
											"end": 23824,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 23800,
											"end": 23816,
											"name": "PUSH",
											"source": 7,
											"value": "496E73756666696369656E742041000000000000000000000000000000000000"
										},
										{
											"begin": 23796,
											"end": 23797,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 23788,
											"end": 23794,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 23784,
											"end": 23798,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 23777,
											"end": 23817,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 23660,
											"end": 23824,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23660,
											"end": 23824,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 23830,
											"end": 24196,
											"name": "tag",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 23830,
											"end": 24196,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 23972,
											"end": 23975,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 23993,
											"end": 24060,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "495"
										},
										{
											"begin": 24057,
											"end": 24059,
											"name": "PUSH",
											"source": 7,
											"value": "E"
										},
										{
											"begin": 24052,
											"end": 24055,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 23993,
											"end": 24060,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 23993,
											"end": 24060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 23993,
											"end": 24060,
											"name": "tag",
											"source": 7,
											"value": "495"
										},
										{
											"begin": 23993,
											"end": 24060,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 23986,
											"end": 24060,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 23986,
											"end": 24060,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 24069,
											"end": 24162,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "496"
										},
										{
											"begin": 24158,
											"end": 24161,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 24069,
											"end": 24162,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 24069,
											"end": 24162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 24069,
											"end": 24162,
											"name": "tag",
											"source": 7,
											"value": "496"
										},
										{
											"begin": 24069,
											"end": 24162,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 24187,
											"end": 24189,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 24182,
											"end": 24185,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 24178,
											"end": 24190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 24171,
											"end": 24190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 24171,
											"end": 24190,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23830,
											"end": 24196,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 23830,
											"end": 24196,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 23830,
											"end": 24196,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23830,
											"end": 24196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 24202,
											"end": 24621,
											"name": "tag",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 24202,
											"end": 24621,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 24368,
											"end": 24372,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 24406,
											"end": 24408,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 24395,
											"end": 24404,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 24391,
											"end": 24409,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 24383,
											"end": 24409,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 24383,
											"end": 24409,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 24455,
											"end": 24464,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 24449,
											"end": 24453,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 24445,
											"end": 24465,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 24441,
											"end": 24442,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 24430,
											"end": 24439,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 24426,
											"end": 24443,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 24419,
											"end": 24466,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 24483,
											"end": 24614,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "498"
										},
										{
											"begin": 24609,
											"end": 24613,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 24483,
											"end": 24614,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 24483,
											"end": 24614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 24483,
											"end": 24614,
											"name": "tag",
											"source": 7,
											"value": "498"
										},
										{
											"begin": 24483,
											"end": 24614,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 24475,
											"end": 24614,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 24475,
											"end": 24614,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 24202,
											"end": 24621,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 24202,
											"end": 24621,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 24202,
											"end": 24621,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 24202,
											"end": 24621,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 24627,
											"end": 25069,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 24627,
											"end": 25069,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 24776,
											"end": 24780,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 24814,
											"end": 24816,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 24803,
											"end": 24812,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 24799,
											"end": 24817,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 24791,
											"end": 24817,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 24791,
											"end": 24817,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 24827,
											"end": 24898,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "500"
										},
										{
											"begin": 24895,
											"end": 24896,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 24884,
											"end": 24893,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 24880,
											"end": 24897,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 24871,
											"end": 24877,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 24827,
											"end": 24898,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 24827,
											"end": 24898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 24827,
											"end": 24898,
											"name": "tag",
											"source": 7,
											"value": "500"
										},
										{
											"begin": 24827,
											"end": 24898,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 24908,
											"end": 24980,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "501"
										},
										{
											"begin": 24976,
											"end": 24978,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 24965,
											"end": 24974,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 24961,
											"end": 24979,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 24952,
											"end": 24958,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 24908,
											"end": 24980,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 24908,
											"end": 24980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 24908,
											"end": 24980,
											"name": "tag",
											"source": 7,
											"value": "501"
										},
										{
											"begin": 24908,
											"end": 24980,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 24990,
											"end": 25062,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "502"
										},
										{
											"begin": 25058,
											"end": 25060,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 25047,
											"end": 25056,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 25043,
											"end": 25061,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 25034,
											"end": 25040,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 24990,
											"end": 25062,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 24990,
											"end": 25062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 24990,
											"end": 25062,
											"name": "tag",
											"source": 7,
											"value": "502"
										},
										{
											"begin": 24990,
											"end": 25062,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 24627,
											"end": 25069,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 24627,
											"end": 25069,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 24627,
											"end": 25069,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 24627,
											"end": 25069,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 24627,
											"end": 25069,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 24627,
											"end": 25069,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 24627,
											"end": 25069,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 25075,
											"end": 25297,
											"name": "tag",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 25075,
											"end": 25297,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 25168,
											"end": 25172,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 25206,
											"end": 25208,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 25195,
											"end": 25204,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 25191,
											"end": 25209,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 25183,
											"end": 25209,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 25183,
											"end": 25209,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 25219,
											"end": 25290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "504"
										},
										{
											"begin": 25287,
											"end": 25288,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 25276,
											"end": 25285,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 25272,
											"end": 25289,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 25263,
											"end": 25269,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 25219,
											"end": 25290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 25219,
											"end": 25290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 25219,
											"end": 25290,
											"name": "tag",
											"source": 7,
											"value": "504"
										},
										{
											"begin": 25219,
											"end": 25290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 25075,
											"end": 25297,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 25075,
											"end": 25297,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 25075,
											"end": 25297,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 25075,
											"end": 25297,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 25075,
											"end": 25297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/SimpleSwap.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"getPrice(address,address)": "ac41865a",
							"liquidityBalance(bytes32,address)": "bb521a30",
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "baa2abde",
							"reserves(bytes32)": "00bbf1e4",
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739",
							"totalLiquidity(bytes32)": "54b7a8f7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"liquidityBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"reserves\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"reserveA\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"reserveB\",\"type\":\"uint112\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"totalLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Valentino Salguero\",\"custom:dev-run-script\":\"./scripts/deploy_with_ethers.ts\",\"details\":\"Inspired by Uniswap, but simplified for educational purposes.\",\"errors\":{\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)\":{\"params\":{\"amountADesired\":\"Desired amount of token A to add\",\"amountAMin\":\"Minimum acceptable amount of token A\",\"amountBDesired\":\"Desired amount of token B to add\",\"amountBMin\":\"Minimum acceptable amount of token B\",\"deadline\":\"Timestamp after which the transaction is invalid\",\"to\":\"Recipient of the liquidity tokens\",\"tokenA\":\"Address of token A\",\"tokenB\":\"Address of token B\"},\"returns\":{\"amountA\":\"Actual amount of token A added\",\"amountB\":\"Actual amount of token B added\",\"liquidity\":\"Amount of liquidity tokens minted\"}},\"getAmountOut(uint256,uint256,uint256)\":{\"params\":{\"amountIn\":\"Input amount\",\"reserveIn\":\"Reserve of input token\",\"reserveOut\":\"Reserve of output token\"},\"returns\":{\"amountOut\":\"Amount of output tokens after fee\"}},\"getPrice(address,address)\":{\"params\":{\"tokenA\":\"Address of token A\",\"tokenB\":\"Address of token B\"},\"returns\":{\"price\":\"Price as tokenB/tokenA scaled by 1e18\"}},\"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)\":{\"params\":{\"amountAMin\":\"Minimum acceptable amount of token A\",\"amountBMin\":\"Minimum acceptable amount of token B\",\"deadline\":\"Timestamp after which the transaction is invalid\",\"liquidity\":\"Amount of liquidity tokens to burn\",\"to\":\"Address to receive withdrawn tokens\",\"tokenA\":\"Address of token A\",\"tokenB\":\"Address of token B\"},\"returns\":{\"amountA\":\"Amount of token A received\",\"amountB\":\"Amount of token B received\"}},\"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)\":{\"params\":{\"amountIn\":\"Exact amount of input tokens to swap\",\"amountOutMin\":\"Minimum amount of output tokens required\",\"deadline\":\"Timestamp after which the transaction is invalid\",\"path\":\"Array with [tokenIn, tokenOut]\",\"to\":\"Address to receive output tokens\"},\"returns\":{\"amounts\":\"Array containing input and output amounts\"}}},\"stateVariables\":{\"liquidityBalance\":{\"details\":\"Tracks each user's liquidity share in a given pair\"},\"reserves\":{\"details\":\"Maps the hash of a token pair to its reserve data\"},\"totalLiquidity\":{\"details\":\"Maps the pair hash to the total liquidity of the pool\"}},\"title\":\"SimpleSwap - A minimal Uniswap-like DEX for ERC-20 tokens\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)\":{\"notice\":\"Adds liquidity to a token pair pool\"},\"getAmountOut(uint256,uint256,uint256)\":{\"notice\":\"Calculates output tokens for a given input using Uniswap formula\"},\"getPrice(address,address)\":{\"notice\":\"Returns the price of tokenB in terms of tokenA\"},\"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)\":{\"notice\":\"Removes liquidity and returns tokens to the user\"},\"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)\":{\"notice\":\"Swaps exact amountIn of tokenIn for tokenOut\"}},\"notice\":\"This contract allows users to add/remove liquidity, swap tokens, fetch price and calculate output amounts.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SimpleSwap.sol\":\"SimpleSwap\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/SimpleSwap.sol\":{\"keccak256\":\"0x16efc03580f01243efb6d2c7b48346773af6cc91b0735cc4661f657dc59b4c7b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://abfac4fe42616ff8dd473e499225431915b3e7b6168cd066c33101cbb10e97bb\",\"dweb:/ipfs/QmZqAgVX2eMgwaEwYGw18Q35cuQXeURsXqEkzTyrLmhmSx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 664,
								"contract": "contracts/SimpleSwap.sol:SimpleSwap",
								"label": "reserves",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(Reserve)658_storage)"
							},
							{
								"astId": 669,
								"contract": "contracts/SimpleSwap.sol:SimpleSwap",
								"label": "totalLiquidity",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_bytes32,t_uint256)"
							},
							{
								"astId": 676,
								"contract": "contracts/SimpleSwap.sol:SimpleSwap",
								"label": "liquidityBalance",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_bytes32,t_struct(Reserve)658_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct SimpleSwap.Reserve)",
								"numberOfBytes": "32",
								"value": "t_struct(Reserve)658_storage"
							},
							"t_mapping(t_bytes32,t_uint256)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(Reserve)658_storage": {
								"encoding": "inplace",
								"label": "struct SimpleSwap.Reserve",
								"members": [
									{
										"astId": 655,
										"contract": "contracts/SimpleSwap.sol:SimpleSwap",
										"label": "reserveA",
										"offset": 0,
										"slot": "0",
										"type": "t_uint112"
									},
									{
										"astId": 657,
										"contract": "contracts/SimpleSwap.sol:SimpleSwap",
										"label": "reserveB",
										"offset": 14,
										"slot": "0",
										"type": "t_uint112"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint112": {
								"encoding": "inplace",
								"label": "uint112",
								"numberOfBytes": "14"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": {
								"notice": "Adds liquidity to a token pair pool"
							},
							"getAmountOut(uint256,uint256,uint256)": {
								"notice": "Calculates output tokens for a given input using Uniswap formula"
							},
							"getPrice(address,address)": {
								"notice": "Returns the price of tokenB in terms of tokenA"
							},
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": {
								"notice": "Removes liquidity and returns tokens to the user"
							},
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": {
								"notice": "Swaps exact amountIn of tokenIn for tokenOut"
							}
						},
						"notice": "This contract allows users to add/remove liquidity, swap tokens, fetch price and calculate output amounts.",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							81
						],
						"IERC165": [
							643
						],
						"IERC20": [
							167
						]
					},
					"id": 82,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 82,
							"sourceUnit": 90,
							"src": "133:36:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 167,
										"src": "141:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 82,
							"sourceUnit": 86,
							"src": "170:38:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 643,
										"src": "178:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "IERC20",
										"nameLocations": [
											"590:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 167,
										"src": "590:6:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "IERC165",
										"nameLocations": [
											"598:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 643,
										"src": "598:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:0"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:0",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 81,
							"linearizedBaseContracts": [
								81,
								643,
								167
							],
							"name": "IERC1363",
							"nameLocation": "578:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 20,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1548:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 12,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1560:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 14,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:0"
									},
									"returnParameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1593:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 17,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:0"
									},
									"scope": 81,
									"src": "1523:76:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 32,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2088:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 22,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2100:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2115:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 26,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2154:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 29,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:0"
									},
									"scope": 81,
									"src": "2063:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2653:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2667:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2679:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2712:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:0"
									},
									"scope": 81,
									"src": "2624:94:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 58,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3294:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3308:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3320:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 50,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3335:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 52,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3374:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 55,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:0"
									},
									"scope": 81,
									"src": "3265:115:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 68,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3805:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3822:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 62,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3855:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 65,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:0"
									},
									"scope": 81,
									"src": "3781:80:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 80,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4374:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4391:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 72,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4406:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 74,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4445:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 77,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:0"
									},
									"scope": 81,
									"src": "4350:101:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 82,
							"src": "568:3885:0",
							"usedErrors": [],
							"usedEvents": [
								101,
								110
							]
						}
					],
					"src": "107:4347:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							643
						]
					},
					"id": 86,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 83,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 85,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 86,
							"sourceUnit": 644,
							"src": "132:59:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 84,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 643,
										"src": "140:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							167
						]
					},
					"id": 90,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 87,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 89,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 90,
							"sourceUnit": 168,
							"src": "131:49:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 88,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 167,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:76:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							167
						]
					},
					"id": 168,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 91,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 92,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 167,
							"linearizedBaseContracts": [
								167
							],
							"name": "IERC20",
							"nameLocation": "214:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 93,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 101,
									"name": "Transfer",
									"nameLocation": "396:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "405:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "427:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "447:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:3"
									},
									"src": "390:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 110,
									"name": "Approval",
									"nameLocation": "627:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "636:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 106,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "659:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 108,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "684:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:3"
									},
									"src": "621:78:3"
								},
								{
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 116,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:3"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "821:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:3"
									},
									"scope": 167,
									"src": "775:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 117,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 124,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 118,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 167,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 125,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 134,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "1234:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:3"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "1267:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 131,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:3"
									},
									"scope": 167,
									"src": "1204:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 135,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 144,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "1567:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "1582:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:3"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "1622:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:3"
									},
									"scope": 167,
									"src": "1548:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 145,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 154,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "2326:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "2343:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:3"
									},
									"returnParameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "2376:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 151,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:3"
									},
									"scope": 167,
									"src": "2309:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 155,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 166,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "2712:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "2726:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "2738:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:3"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "2771:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 163,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:3"
									},
									"scope": 167,
									"src": "2690:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 168,
							"src": "204:2575:3",
							"usedErrors": [],
							"usedEvents": [
								101,
								110
							]
						}
					],
					"src": "106:2674:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							81
						],
						"IERC20": [
							167
						],
						"SafeERC20": [
							631
						]
					},
					"id": 632,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 169,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 171,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 632,
							"sourceUnit": 168,
							"src": "141:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 170,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 167,
										"src": "149:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 173,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 632,
							"sourceUnit": 82,
							"src": "179:58:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 172,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 81,
										"src": "187:8:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 174,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:4",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 631,
							"linearizedBaseContracts": [
								631
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:4",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 179,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "823:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:4"
									},
									"src": "792:46:4"
								},
								{
									"documentation": {
										"id": 180,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:4",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 188,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "959:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "976:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1002:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:4"
									},
									"src": "920:109:4"
								},
								{
									"body": {
										"id": 211,
										"nodeType": "Block",
										"src": "1291:88:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 200,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "1321:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 203,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 192,
																		"src": "1343:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$167",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 204,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:4",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 134,
																	"src": "1343:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 205,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 194,
																			"src": "1360:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 206,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 196,
																			"src": "1364:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 207,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 201,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 202,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:4",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 199,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 589,
														"src": "1301:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 210,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:4"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:4",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "1241:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 191,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 190,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "1241:6:4"
													},
													"referencedDeclaration": 167,
													"src": "1241:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "1255:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "1267:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:4"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:4"
									},
									"scope": 631,
									"src": "1219:160:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "1708:98:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 226,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "1738:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 229,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 216,
																		"src": "1760:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$167",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:4",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 166,
																	"src": "1760:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 231,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 218,
																			"src": "1781:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 232,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 220,
																			"src": "1787:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 233,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 222,
																			"src": "1791:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 234,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 227,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 228,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:4",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 225,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 589,
														"src": "1718:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 237,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:4"
											}
										]
									},
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:4",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1644:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 215,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 214,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "1644:6:4"
													},
													"referencedDeclaration": 167,
													"src": "1644:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1658:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1672:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1684:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:4"
									},
									"returnParameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:4"
									},
									"scope": 631,
									"src": "1618:188:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 264,
										"nodeType": "Block",
										"src": "2033:99:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "2074:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 256,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 243,
																		"src": "2096:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$167",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 257,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2102:8:4",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 134,
																	"src": "2096:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 258,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 245,
																			"src": "2113:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 259,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 247,
																			"src": "2117:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 260,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2112:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 254,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2081:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 255,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2085:10:4",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2081:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2081:43:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 252,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 630,
														"src": "2050:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2050:75:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 251,
												"id": 263,
												"nodeType": "Return",
												"src": "2043:82:4"
											}
										]
									},
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "1812:126:4",
										"text": " @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 265,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransfer",
									"nameLocation": "1952:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1975:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "1968:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 242,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 241,
														"name": "IERC20",
														"nameLocations": [
															"1968:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "1968:6:4"
													},
													"referencedDeclaration": 167,
													"src": "1968:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1990:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "1982:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1982:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2002:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "1994:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1967:41:4"
									},
									"returnParameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "2027:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 249,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2027:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2026:6:4"
									},
									"scope": 631,
									"src": "1943:189:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "2381:109:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 281,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 269,
															"src": "2422:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 284,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 269,
																		"src": "2444:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$167",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2450:12:4",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 166,
																	"src": "2444:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 286,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 271,
																			"src": "2465:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 287,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 273,
																			"src": "2471:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 288,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 275,
																			"src": "2475:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 289,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2464:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 282,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2429:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 283,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2433:10:4",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2429:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2429:53:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 280,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 630,
														"src": "2398:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:85:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 279,
												"id": 292,
												"nodeType": "Return",
												"src": "2391:92:4"
											}
										]
									},
									"documentation": {
										"id": 266,
										"nodeType": "StructuredDocumentation",
										"src": "2138:130:4",
										"text": " @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransferFrom",
									"nameLocation": "2282:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2309:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "2302:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 268,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 267,
														"name": "IERC20",
														"nameLocations": [
															"2302:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "2302:6:4"
													},
													"referencedDeclaration": 167,
													"src": "2302:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2324:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "2316:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2338:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "2330:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "2342:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:55:4"
									},
									"returnParameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "2375:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 277,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:4"
									},
									"scope": 631,
									"src": "2273:217:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 324,
										"nodeType": "Block",
										"src": "3232:139:4",
										"statements": [
											{
												"assignments": [
													306
												],
												"declarations": [
													{
														"constant": false,
														"id": 306,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "3250:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 324,
														"src": "3242:20:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 305,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3242:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 315,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 311,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3289:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$631",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$631",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 310,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3281:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 309,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3281:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3281:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 313,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "3296:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 307,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 298,
															"src": "3265:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														"id": 308,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3271:9:4",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 144,
														"src": "3265:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3242:62:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 317,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 298,
															"src": "3327:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 318,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "3334:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 319,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 306,
																"src": "3343:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 320,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 302,
																"src": "3358:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3343:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 316,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 415,
														"src": "3314:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3314:50:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 323,
												"nodeType": "ExpressionStatement",
												"src": "3314:50:4"
											}
										]
									},
									"documentation": {
										"id": 295,
										"nodeType": "StructuredDocumentation",
										"src": "2496:645:4",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 325,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "3155:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3184:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "3177:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 297,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 296,
														"name": "IERC20",
														"nameLocations": [
															"3177:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "3177:6:4"
													},
													"referencedDeclaration": 167,
													"src": "3177:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3199:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "3191:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3191:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3216:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "3208:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3208:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3176:46:4"
									},
									"returnParameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3232:0:4"
									},
									"scope": 631,
									"src": "3146:225:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 367,
										"nodeType": "Block",
										"src": "4137:370:4",
										"statements": [
											{
												"id": 366,
												"nodeType": "UncheckedBlock",
												"src": "4147:354:4",
												"statements": [
													{
														"assignments": [
															337
														],
														"declarations": [
															{
																"constant": false,
																"id": 337,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "4179:16:4",
																"nodeType": "VariableDeclaration",
																"scope": 366,
																"src": "4171:24:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 336,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4171:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 346,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 342,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4222:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$631",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$631",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 341,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4214:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 340,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4214:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4214:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 344,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 331,
																	"src": "4229:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 338,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 329,
																	"src": "4198:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$167",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 339,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4204:9:4",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 144,
																"src": "4198:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4198:39:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4171:66:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 347,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 337,
																"src": "4255:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 348,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 333,
																"src": "4274:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4255:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 357,
														"nodeType": "IfStatement",
														"src": "4251:160:4",
														"trueBody": {
															"id": 356,
															"nodeType": "Block",
															"src": "4293:118:4",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 351,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 331,
																				"src": "4351:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 352,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 337,
																				"src": "4360:16:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 353,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 333,
																				"src": "4378:17:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 350,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 188,
																			"src": "4318:32:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4318:78:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 355,
																	"nodeType": "RevertStatement",
																	"src": "4311:85:4"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 359,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 329,
																	"src": "4437:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$167",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 360,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 331,
																	"src": "4444:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 363,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 361,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 337,
																		"src": "4453:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 362,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 333,
																		"src": "4472:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4453:36:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$167",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 358,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 415,
																"src": "4424:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 364,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4424:66:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 365,
														"nodeType": "ExpressionStatement",
														"src": "4424:66:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 326,
										"nodeType": "StructuredDocumentation",
										"src": "3377:657:4",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 368,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "4048:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4077:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "4070:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 328,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 327,
														"name": "IERC20",
														"nameLocations": [
															"4070:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "4070:6:4"
													},
													"referencedDeclaration": 167,
													"src": "4070:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4092:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "4084:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4084:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "4109:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "4101:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4101:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4069:58:4"
									},
									"returnParameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4137:0:4"
									},
									"scope": 631,
									"src": "4039:468:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 414,
										"nodeType": "Block",
										"src": "5161:303:4",
										"statements": [
											{
												"assignments": [
													380
												],
												"declarations": [
													{
														"constant": false,
														"id": 380,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "5184:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 414,
														"src": "5171:25:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 379,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5171:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 389,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 383,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 372,
																"src": "5214:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$167",
																	"typeString": "contract IERC20"
																}
															},
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5220:7:4",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 154,
															"src": "5214:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 385,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 374,
																	"src": "5230:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 386,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 376,
																	"src": "5239:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 387,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5229:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 381,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "5199:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 382,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5203:10:4",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "5199:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5199:47:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5171:75:4"
											},
											{
												"condition": {
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5261:45:4",
													"subExpression": {
														"arguments": [
															{
																"id": 391,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 372,
																"src": "5286:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$167",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 392,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 380,
																"src": "5293:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$167",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 390,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "5262:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 393,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5262:44:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 413,
												"nodeType": "IfStatement",
												"src": "5257:201:4",
												"trueBody": {
													"id": 412,
													"nodeType": "Block",
													"src": "5308:150:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 396,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 372,
																		"src": "5342:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$167",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 399,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 372,
																					"src": "5364:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$167",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 400,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5370:7:4",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 154,
																				"src": "5364:13:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 401,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 374,
																						"src": "5380:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 402,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5389:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 403,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5379:12:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 397,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5349:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 398,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5353:10:4",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "5349:14:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 404,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5349:43:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$167",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 395,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 589,
																	"src": "5322:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 405,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5322:71:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 406,
															"nodeType": "ExpressionStatement",
															"src": "5322:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 408,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 372,
																		"src": "5427:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$167",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 409,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 380,
																		"src": "5434:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$167",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 407,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 589,
																	"src": "5407:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5407:40:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 411,
															"nodeType": "ExpressionStatement",
															"src": "5407:40:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 369,
										"nodeType": "StructuredDocumentation",
										"src": "4513:566:4",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 415,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "5093:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5113:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "5106:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 371,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 370,
														"name": "IERC20",
														"nameLocations": [
															"5106:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "5106:6:4"
													},
													"referencedDeclaration": 167,
													"src": "5106:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5128:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "5120:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5120:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5145:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "5137:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5137:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5105:46:4"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5161:0:4"
									},
									"scope": 631,
									"src": "5084:380:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "5911:219:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 428,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 421,
																"src": "5925:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5928:4:4",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5925:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 430,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5933:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5925:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 431,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5943:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5925:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 446,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6011:39:4",
														"subExpression": {
															"arguments": [
																{
																	"id": 442,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 421,
																	"src": "6034:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 443,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 423,
																	"src": "6038:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 444,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 425,
																	"src": "6045:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 440,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "6012:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$81",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 441,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6018:15:4",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 32,
																"src": "6012:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6012:38:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 455,
													"nodeType": "IfStatement",
													"src": "6007:117:4",
													"trueBody": {
														"id": 454,
														"nodeType": "Block",
														"src": "6052:72:4",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 450,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 419,
																					"src": "6106:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 449,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6098:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 448,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6098:7:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 451,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6098:14:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 447,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 179,
																		"src": "6073:24:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 452,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6073:40:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 453,
																"nodeType": "RevertStatement",
																"src": "6066:47:4"
															}
														]
													}
												},
												"id": 456,
												"nodeType": "IfStatement",
												"src": "5921:203:4",
												"trueBody": {
													"id": 439,
													"nodeType": "Block",
													"src": "5946:55:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 434,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 419,
																		"src": "5973:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 435,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 421,
																		"src": "5980:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 436,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 423,
																		"src": "5984:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 433,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 212,
																	"src": "5960:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 437,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5960:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 438,
															"nodeType": "ExpressionStatement",
															"src": "5960:30:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 416,
										"nodeType": "StructuredDocumentation",
										"src": "5470:333:4",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5817:22:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5849:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "5840:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$81",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 418,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 417,
														"name": "IERC1363",
														"nameLocations": [
															"5840:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 81,
														"src": "5840:8:4"
													},
													"referencedDeclaration": 81,
													"src": "5840:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$81",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5864:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "5856:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5856:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5876:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "5868:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5868:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5896:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "5883:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 424,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5883:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5839:62:4"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5911:0:4"
									},
									"scope": 631,
									"src": "5808:322:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 504,
										"nodeType": "Block",
										"src": "6649:239:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 473,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 466,
																"src": "6663:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6666:4:4",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6663:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 475,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6671:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6663:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 476,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6681:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6663:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 493,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6759:49:4",
														"subExpression": {
															"arguments": [
																{
																	"id": 488,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 464,
																	"src": "6786:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 489,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 466,
																	"src": "6792:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 490,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 468,
																	"src": "6796:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 491,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 470,
																	"src": "6803:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 486,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 462,
																	"src": "6760:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$81",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 487,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6766:19:4",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 58,
																"src": "6760:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6760:48:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 502,
													"nodeType": "IfStatement",
													"src": "6755:127:4",
													"trueBody": {
														"id": 501,
														"nodeType": "Block",
														"src": "6810:72:4",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 497,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 462,
																					"src": "6864:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 496,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6856:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 495,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6856:7:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 498,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6856:14:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 494,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 179,
																		"src": "6831:24:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 499,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6831:40:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 500,
																"nodeType": "RevertStatement",
																"src": "6824:47:4"
															}
														]
													}
												},
												"id": 503,
												"nodeType": "IfStatement",
												"src": "6659:223:4",
												"trueBody": {
													"id": 485,
													"nodeType": "Block",
													"src": "6684:65:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 479,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 462,
																		"src": "6715:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 480,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 464,
																		"src": "6722:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 481,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 466,
																		"src": "6728:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 482,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 468,
																		"src": "6732:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 478,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 239,
																	"src": "6698:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6698:40:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 484,
															"nodeType": "ExpressionStatement",
															"src": "6698:40:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "6136:341:4",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 505,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "6491:26:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6536:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "6527:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$81",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 461,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 460,
														"name": "IERC1363",
														"nameLocations": [
															"6527:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 81,
														"src": "6527:8:4"
													},
													"referencedDeclaration": 81,
													"src": "6527:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$81",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6559:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "6551:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 463,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6551:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6581:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "6573:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 465,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6573:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6601:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "6593:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6593:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "6616:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 469,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6517:122:4"
									},
									"returnParameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6649:0:4"
									},
									"scope": 631,
									"src": "6482:406:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 547,
										"nodeType": "Block",
										"src": "7655:218:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 518,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 511,
																"src": "7669:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7672:4:4",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7669:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 520,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7677:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7669:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 521,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7687:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7669:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 536,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7755:38:4",
														"subExpression": {
															"arguments": [
																{
																	"id": 532,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 511,
																	"src": "7777:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 533,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 513,
																	"src": "7781:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 534,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 515,
																	"src": "7788:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 530,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 509,
																	"src": "7756:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$81",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 531,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7762:14:4",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 80,
																"src": "7756:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 535,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7756:37:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 545,
													"nodeType": "IfStatement",
													"src": "7751:116:4",
													"trueBody": {
														"id": 544,
														"nodeType": "Block",
														"src": "7795:72:4",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 540,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 509,
																					"src": "7849:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 539,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7841:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 538,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7841:7:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 541,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7841:14:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 537,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 179,
																		"src": "7816:24:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7816:40:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 543,
																"nodeType": "RevertStatement",
																"src": "7809:47:4"
															}
														]
													}
												},
												"id": 546,
												"nodeType": "IfStatement",
												"src": "7665:202:4",
												"trueBody": {
													"id": 529,
													"nodeType": "Block",
													"src": "7690:55:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 524,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 509,
																		"src": "7717:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 525,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 511,
																		"src": "7724:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 526,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 513,
																		"src": "7728:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 523,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 415,
																	"src": "7704:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 527,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7704:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 528,
															"nodeType": "ExpressionStatement",
															"src": "7704:30:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 506,
										"nodeType": "StructuredDocumentation",
										"src": "6894:654:4",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 548,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "7562:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7593:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "7584:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$81",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 508,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 507,
														"name": "IERC1363",
														"nameLocations": [
															"7584:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 81,
														"src": "7584:8:4"
													},
													"referencedDeclaration": 81,
													"src": "7584:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$81",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7608:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "7600:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7600:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7620:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "7612:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7612:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7640:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "7627:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 514,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7627:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7583:62:4"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7655:0:4"
									},
									"scope": 631,
									"src": "7553:320:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 588,
										"nodeType": "Block",
										"src": "8440:650:4",
										"statements": [
											{
												"assignments": [
													558
												],
												"declarations": [
													{
														"constant": false,
														"id": 558,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "8458:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 588,
														"src": "8450:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 557,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8450:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 559,
												"nodeType": "VariableDeclarationStatement",
												"src": "8450:18:4"
											},
											{
												"assignments": [
													561
												],
												"declarations": [
													{
														"constant": false,
														"id": 561,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "8486:11:4",
														"nodeType": "VariableDeclaration",
														"scope": 588,
														"src": "8478:19:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 560,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8478:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 562,
												"nodeType": "VariableDeclarationStatement",
												"src": "8478:19:4"
											},
											{
												"AST": {
													"nativeSrc": "8532:396:4",
													"nodeType": "YulBlock",
													"src": "8532:396:4",
													"statements": [
														{
															"nativeSrc": "8546:75:4",
															"nodeType": "YulVariableDeclaration",
															"src": "8546:75:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "8566:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "8566:3:4"
																		},
																		"nativeSrc": "8566:5:4",
																		"nodeType": "YulFunctionCall",
																		"src": "8566:5:4"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "8573:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "8573:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8580:1:4",
																		"nodeType": "YulLiteral",
																		"src": "8580:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8587:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "8587:4:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8593:4:4",
																				"nodeType": "YulLiteral",
																				"src": "8593:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8583:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "8583:3:4"
																		},
																		"nativeSrc": "8583:15:4",
																		"nodeType": "YulFunctionCall",
																		"src": "8583:15:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8606:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "8606:4:4"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8600:5:4",
																			"nodeType": "YulIdentifier",
																			"src": "8600:5:4"
																		},
																		"nativeSrc": "8600:11:4",
																		"nodeType": "YulFunctionCall",
																		"src": "8600:11:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8613:1:4",
																		"nodeType": "YulLiteral",
																		"src": "8613:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8616:4:4",
																		"nodeType": "YulLiteral",
																		"src": "8616:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "8561:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "8561:4:4"
																},
																"nativeSrc": "8561:60:4",
																"nodeType": "YulFunctionCall",
																"src": "8561:60:4"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "8550:7:4",
																	"nodeType": "YulTypedName",
																	"src": "8550:7:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8682:157:4",
																"nodeType": "YulBlock",
																"src": "8682:157:4",
																"statements": [
																	{
																		"nativeSrc": "8700:22:4",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8700:22:4",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8717:4:4",
																					"nodeType": "YulLiteral",
																					"src": "8717:4:4",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8711:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "8711:5:4"
																			},
																			"nativeSrc": "8711:11:4",
																			"nodeType": "YulFunctionCall",
																			"src": "8711:11:4"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8704:3:4",
																				"nodeType": "YulTypedName",
																				"src": "8704:3:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8754:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "8754:3:4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8759:1:4",
																					"nodeType": "YulLiteral",
																					"src": "8759:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8762:14:4",
																						"nodeType": "YulIdentifier",
																						"src": "8762:14:4"
																					},
																					"nativeSrc": "8762:16:4",
																					"nodeType": "YulFunctionCall",
																					"src": "8762:16:4"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8739:14:4",
																				"nodeType": "YulIdentifier",
																				"src": "8739:14:4"
																			},
																			"nativeSrc": "8739:40:4",
																			"nodeType": "YulFunctionCall",
																			"src": "8739:40:4"
																		},
																		"nativeSrc": "8739:40:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "8739:40:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8803:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "8803:3:4"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8808:14:4",
																						"nodeType": "YulIdentifier",
																						"src": "8808:14:4"
																					},
																					"nativeSrc": "8808:16:4",
																					"nodeType": "YulFunctionCall",
																					"src": "8808:16:4"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8796:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "8796:6:4"
																			},
																			"nativeSrc": "8796:29:4",
																			"nodeType": "YulFunctionCall",
																			"src": "8796:29:4"
																		},
																		"nativeSrc": "8796:29:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "8796:29:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "8673:7:4",
																		"nodeType": "YulIdentifier",
																		"src": "8673:7:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8666:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "8666:6:4"
																},
																"nativeSrc": "8666:15:4",
																"nodeType": "YulFunctionCall",
																"src": "8666:15:4"
															},
															"nativeSrc": "8663:176:4",
															"nodeType": "YulIf",
															"src": "8663:176:4"
														},
														{
															"nativeSrc": "8852:30:4",
															"nodeType": "YulAssignment",
															"src": "8852:30:4",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8866:14:4",
																	"nodeType": "YulIdentifier",
																	"src": "8866:14:4"
																},
																"nativeSrc": "8866:16:4",
																"nodeType": "YulFunctionCall",
																"src": "8866:16:4"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8852:10:4",
																	"nodeType": "YulIdentifier",
																	"src": "8852:10:4"
																}
															]
														},
														{
															"nativeSrc": "8895:23:4",
															"nodeType": "YulAssignment",
															"src": "8895:23:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8916:1:4",
																		"nodeType": "YulLiteral",
																		"src": "8916:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8910:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "8910:5:4"
																},
																"nativeSrc": "8910:8:4",
																"nodeType": "YulFunctionCall",
																"src": "8910:8:4"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8895:11:4",
																	"nodeType": "YulIdentifier",
																	"src": "8895:11:4"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 554,
														"isOffset": false,
														"isSlot": false,
														"src": "8587:4:4",
														"valueSize": 1
													},
													{
														"declaration": 554,
														"isOffset": false,
														"isSlot": false,
														"src": "8606:4:4",
														"valueSize": 1
													},
													{
														"declaration": 558,
														"isOffset": false,
														"isSlot": false,
														"src": "8852:10:4",
														"valueSize": 1
													},
													{
														"declaration": 561,
														"isOffset": false,
														"isSlot": false,
														"src": "8895:11:4",
														"valueSize": 1
													},
													{
														"declaration": 552,
														"isOffset": false,
														"isSlot": false,
														"src": "8573:5:4",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 563,
												"nodeType": "InlineAssembly",
												"src": "8507:421:4"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 566,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 564,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "8942:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 565,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8956:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8942:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 577,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 575,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 561,
															"src": "8994:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 576,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9009:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8994:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8942:68:4",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 574,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 569,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 552,
																			"src": "8968:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$167",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$167",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 568,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8960:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 567,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8960:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 570,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8960:14:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 571,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8975:4:4",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8960:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 572,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8980:6:4",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8960:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 573,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8990:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8960:31:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 587,
												"nodeType": "IfStatement",
												"src": "8938:146:4",
												"trueBody": {
													"id": 586,
													"nodeType": "Block",
													"src": "9012:72:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 582,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 552,
																				"src": "9066:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$167",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$167",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 581,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9058:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 580,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9058:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 583,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9058:14:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 579,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 179,
																	"src": "9033:24:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 584,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9033:40:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 585,
															"nodeType": "RevertStatement",
															"src": "9026:47:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 549,
										"nodeType": "StructuredDocumentation",
										"src": "7879:486:4",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 589,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "8379:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8406:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "8399:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 551,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 550,
														"name": "IERC20",
														"nameLocations": [
															"8399:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "8399:6:4"
													},
													"referencedDeclaration": 167,
													"src": "8399:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8426:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "8413:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 553,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8413:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8398:33:4"
									},
									"returnParameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8440:0:4"
									},
									"scope": 631,
									"src": "8370:720:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 629,
										"nodeType": "Block",
										"src": "9681:391:4",
										"statements": [
											{
												"assignments": [
													601
												],
												"declarations": [
													{
														"constant": false,
														"id": 601,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9696:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 629,
														"src": "9691:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 600,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9691:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 602,
												"nodeType": "VariableDeclarationStatement",
												"src": "9691:12:4"
											},
											{
												"assignments": [
													604
												],
												"declarations": [
													{
														"constant": false,
														"id": 604,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9721:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 629,
														"src": "9713:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 603,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9713:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 605,
												"nodeType": "VariableDeclarationStatement",
												"src": "9713:18:4"
											},
											{
												"assignments": [
													607
												],
												"declarations": [
													{
														"constant": false,
														"id": 607,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9749:11:4",
														"nodeType": "VariableDeclaration",
														"scope": 629,
														"src": "9741:19:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 606,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9741:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 608,
												"nodeType": "VariableDeclarationStatement",
												"src": "9741:19:4"
											},
											{
												"AST": {
													"nativeSrc": "9795:174:4",
													"nodeType": "YulBlock",
													"src": "9795:174:4",
													"statements": [
														{
															"nativeSrc": "9809:71:4",
															"nodeType": "YulAssignment",
															"src": "9809:71:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9825:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "9825:3:4"
																		},
																		"nativeSrc": "9825:5:4",
																		"nodeType": "YulFunctionCall",
																		"src": "9825:5:4"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9832:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "9832:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9839:1:4",
																		"nodeType": "YulLiteral",
																		"src": "9839:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9846:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "9846:4:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9852:4:4",
																				"nodeType": "YulLiteral",
																				"src": "9852:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9842:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "9842:3:4"
																		},
																		"nativeSrc": "9842:15:4",
																		"nodeType": "YulFunctionCall",
																		"src": "9842:15:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9865:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "9865:4:4"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9859:5:4",
																			"nodeType": "YulIdentifier",
																			"src": "9859:5:4"
																		},
																		"nativeSrc": "9859:11:4",
																		"nodeType": "YulFunctionCall",
																		"src": "9859:11:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9872:1:4",
																		"nodeType": "YulLiteral",
																		"src": "9872:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9875:4:4",
																		"nodeType": "YulLiteral",
																		"src": "9875:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9820:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "9820:4:4"
																},
																"nativeSrc": "9820:60:4",
																"nodeType": "YulFunctionCall",
																"src": "9820:60:4"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9809:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "9809:7:4"
																}
															]
														},
														{
															"nativeSrc": "9893:30:4",
															"nodeType": "YulAssignment",
															"src": "9893:30:4",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9907:14:4",
																	"nodeType": "YulIdentifier",
																	"src": "9907:14:4"
																},
																"nativeSrc": "9907:16:4",
																"nodeType": "YulFunctionCall",
																"src": "9907:16:4"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9893:10:4",
																	"nodeType": "YulIdentifier",
																	"src": "9893:10:4"
																}
															]
														},
														{
															"nativeSrc": "9936:23:4",
															"nodeType": "YulAssignment",
															"src": "9936:23:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9957:1:4",
																		"nodeType": "YulLiteral",
																		"src": "9957:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9951:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "9951:5:4"
																},
																"nativeSrc": "9951:8:4",
																"nodeType": "YulFunctionCall",
																"src": "9951:8:4"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9936:11:4",
																	"nodeType": "YulIdentifier",
																	"src": "9936:11:4"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 595,
														"isOffset": false,
														"isSlot": false,
														"src": "9846:4:4",
														"valueSize": 1
													},
													{
														"declaration": 595,
														"isOffset": false,
														"isSlot": false,
														"src": "9865:4:4",
														"valueSize": 1
													},
													{
														"declaration": 604,
														"isOffset": false,
														"isSlot": false,
														"src": "9893:10:4",
														"valueSize": 1
													},
													{
														"declaration": 607,
														"isOffset": false,
														"isSlot": false,
														"src": "9936:11:4",
														"valueSize": 1
													},
													{
														"declaration": 601,
														"isOffset": false,
														"isSlot": false,
														"src": "9809:7:4",
														"valueSize": 1
													},
													{
														"declaration": 593,
														"isOffset": false,
														"isSlot": false,
														"src": "9832:5:4",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 609,
												"nodeType": "InlineAssembly",
												"src": "9770:199:4"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 610,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 601,
														"src": "9985:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 613,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 611,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 604,
																		"src": "9997:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 612,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10011:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9997:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 624,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 622,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 607,
																		"src": "10048:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 623,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10063:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "10048:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9997:67:4",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 621,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 616,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 593,
																						"src": "10023:5:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$167",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$167",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 615,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "10015:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 614,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "10015:7:4",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 617,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10015:14:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 618,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10030:4:4",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "10015:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10035:6:4",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "10015:26:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 620,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10044:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "10015:30:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 626,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9996:69:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9985:80:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 599,
												"id": 628,
												"nodeType": "Return",
												"src": "9978:87:4"
											}
										]
									},
									"documentation": {
										"id": 590,
										"nodeType": "StructuredDocumentation",
										"src": "9096:491:4",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 630,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "9601:23:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9632:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "9625:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 592,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 591,
														"name": "IERC20",
														"nameLocations": [
															"9625:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "9625:6:4"
													},
													"referencedDeclaration": 167,
													"src": "9625:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9652:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "9639:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 594,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9639:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9624:33:4"
									},
									"returnParameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "9675:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 597,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9675:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9674:6:4"
									},
									"scope": 631,
									"src": "9592:480:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 632,
							"src": "698:9376:4",
							"usedErrors": [
								179,
								188
							],
							"usedEvents": []
						}
					],
					"src": "115:9960:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							643
						]
					},
					"id": 644,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 633,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 634,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:5",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 643,
							"linearizedBaseContracts": [
								643
							],
							"name": "IERC165",
							"nameLocation": "432:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 635,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:5",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 642,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "818:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 636,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:5"
									},
									"returnParameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "861:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 639,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:5"
									},
									"scope": 643,
									"src": "791:76:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 644,
							"src": "422:447:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:5"
				},
				"id": 5
			},
			"contracts/SimpleSwap.sol": {
				"ast": {
					"absolutePath": "contracts/SimpleSwap.sol",
					"exportedSymbols": {
						"IERC1363": [
							81
						],
						"IERC20": [
							167
						],
						"SafeERC20": [
							631
						],
						"SimpleSwap": [
							1494
						]
					},
					"id": 1495,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 645,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".2",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "38:31:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 646,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1495,
							"sourceUnit": 168,
							"src": "71:56:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 647,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1495,
							"sourceUnit": 632,
							"src": "128:65:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SimpleSwap",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 648,
								"nodeType": "StructuredDocumentation",
								"src": "195:349:6",
								"text": "@custom:dev-run-script ./scripts/deploy_with_ethers.ts\n @title SimpleSwap - A minimal Uniswap-like DEX for ERC-20 tokens\n @author Valentino Salguero\n @notice This contract allows users to add/remove liquidity, swap tokens, fetch price and calculate output amounts.\n @dev Inspired by Uniswap, but simplified for educational purposes."
							},
							"fullyImplemented": true,
							"id": 1494,
							"linearizedBaseContracts": [
								1494
							],
							"name": "SimpleSwap",
							"nameLocation": "553:10:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 652,
									"libraryName": {
										"id": 649,
										"name": "SafeERC20",
										"nameLocations": [
											"576:9:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 631,
										"src": "576:9:6"
									},
									"nodeType": "UsingForDirective",
									"src": "570:27:6",
									"typeName": {
										"id": 651,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 650,
											"name": "IERC20",
											"nameLocations": [
												"590:6:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 167,
											"src": "590:6:6"
										},
										"referencedDeclaration": 167,
										"src": "590:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$167",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"canonicalName": "SimpleSwap.Reserve",
									"documentation": {
										"id": 653,
										"nodeType": "StructuredDocumentation",
										"src": "603:52:6",
										"text": "@dev Stores the reserves of two tokens in a pair"
									},
									"id": 658,
									"members": [
										{
											"constant": false,
											"id": 655,
											"mutability": "mutable",
											"name": "reserveA",
											"nameLocation": "693:8:6",
											"nodeType": "VariableDeclaration",
											"scope": 658,
											"src": "685:16:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint112",
												"typeString": "uint112"
											},
											"typeName": {
												"id": 654,
												"name": "uint112",
												"nodeType": "ElementaryTypeName",
												"src": "685:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 657,
											"mutability": "mutable",
											"name": "reserveB",
											"nameLocation": "719:8:6",
											"nodeType": "VariableDeclaration",
											"scope": 658,
											"src": "711:16:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint112",
												"typeString": "uint112"
											},
											"typeName": {
												"id": 656,
												"name": "uint112",
												"nodeType": "ElementaryTypeName",
												"src": "711:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Reserve",
									"nameLocation": "667:7:6",
									"nodeType": "StructDefinition",
									"scope": 1494,
									"src": "660:74:6",
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 659,
										"nodeType": "StructuredDocumentation",
										"src": "740:58:6",
										"text": "@dev Maps the hash of a token pair to its reserve data"
									},
									"functionSelector": "00bbf1e4",
									"id": 664,
									"mutability": "mutable",
									"name": "reserves",
									"nameLocation": "838:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 1494,
									"src": "803:43:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Reserve_$658_storage_$",
										"typeString": "mapping(bytes32 => struct SimpleSwap.Reserve)"
									},
									"typeName": {
										"id": 663,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 660,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "811:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "803:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Reserve_$658_storage_$",
											"typeString": "mapping(bytes32 => struct SimpleSwap.Reserve)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 662,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 661,
												"name": "Reserve",
												"nameLocations": [
													"822:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 658,
												"src": "822:7:6"
											},
											"referencedDeclaration": 658,
											"src": "822:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Reserve_$658_storage_ptr",
												"typeString": "struct SimpleSwap.Reserve"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 665,
										"nodeType": "StructuredDocumentation",
										"src": "853:62:6",
										"text": "@dev Maps the pair hash to the total liquidity of the pool"
									},
									"functionSelector": "54b7a8f7",
									"id": 669,
									"mutability": "mutable",
									"name": "totalLiquidity",
									"nameLocation": "952:14:6",
									"nodeType": "VariableDeclaration",
									"scope": 1494,
									"src": "920:46:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
										"typeString": "mapping(bytes32 => uint256)"
									},
									"typeName": {
										"id": 668,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 666,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "928:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "920:24:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
											"typeString": "mapping(bytes32 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 667,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "939:4:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 670,
										"nodeType": "StructuredDocumentation",
										"src": "973:59:6",
										"text": "@dev Tracks each user's liquidity share in a given pair"
									},
									"functionSelector": "bb521a30",
									"id": 676,
									"mutability": "mutable",
									"name": "liquidityBalance",
									"nameLocation": "1089:16:6",
									"nodeType": "VariableDeclaration",
									"scope": 1494,
									"src": "1037:68:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(bytes32 => mapping(address => uint256))"
									},
									"typeName": {
										"id": 675,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 671,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "1045:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "1037:44:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(bytes32 => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 674,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 672,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1064:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1056:24:6",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 673,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1075:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 756,
										"nodeType": "Block",
										"src": "2082:863:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 706,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 703,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2100:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 704,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2106:9:6",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "2100:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 705,
																"name": "deadline",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "2119:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2100:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45787069726564",
															"id": 707,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2129:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f183c8b0f89612f6f096bf1f0017061404d2019bd0580f7b18bddb8dcc0d7a13",
																"typeString": "literal_string \"Expired\""
															},
															"value": "Expired"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f183c8b0f89612f6f096bf1f0017061404d2019bd0580f7b18bddb8dcc0d7a13",
																"typeString": "literal_string \"Expired\""
															}
														],
														"id": 702,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2092:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2092:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 709,
												"nodeType": "ExpressionStatement",
												"src": "2092:47:6"
											},
											{
												"assignments": [
													711
												],
												"declarations": [
													{
														"constant": false,
														"id": 711,
														"mutability": "mutable",
														"name": "pairHash",
														"nameLocation": "2158:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 756,
														"src": "2150:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 710,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2150:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 716,
												"initialValue": {
													"arguments": [
														{
															"id": 713,
															"name": "tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "2182:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 714,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 681,
															"src": "2190:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 712,
														"name": "_getPairHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1462,
														"src": "2169:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$returns$_t_bytes32_$",
															"typeString": "function (address,address) pure returns (bytes32)"
														}
													},
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2169:28:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2150:47:6"
											},
											{
												"assignments": [
													719
												],
												"declarations": [
													{
														"constant": false,
														"id": 719,
														"mutability": "mutable",
														"name": "res",
														"nameLocation": "2223:3:6",
														"nodeType": "VariableDeclaration",
														"scope": 756,
														"src": "2207:19:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Reserve_$658_storage_ptr",
															"typeString": "struct SimpleSwap.Reserve"
														},
														"typeName": {
															"id": 718,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 717,
																"name": "Reserve",
																"nameLocations": [
																	"2207:7:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 658,
																"src": "2207:7:6"
															},
															"referencedDeclaration": 658,
															"src": "2207:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Reserve_$658_storage_ptr",
																"typeString": "struct SimpleSwap.Reserve"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 723,
												"initialValue": {
													"baseExpression": {
														"id": 720,
														"name": "reserves",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 664,
														"src": "2229:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Reserve_$658_storage_$",
															"typeString": "mapping(bytes32 => struct SimpleSwap.Reserve storage ref)"
														}
													},
													"id": 722,
													"indexExpression": {
														"id": 721,
														"name": "pairHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 711,
														"src": "2238:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2229:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Reserve_$658_storage",
														"typeString": "struct SimpleSwap.Reserve storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2207:40:6"
											},
											{
												"expression": {
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 724,
																"name": "amountA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 696,
																"src": "2398:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 725,
																"name": "amountB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 698,
																"src": "2407:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 726,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "2397:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 728,
																	"name": "res",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 719,
																	"src": "2458:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Reserve_$658_storage_ptr",
																		"typeString": "struct SimpleSwap.Reserve storage pointer"
																	}
																},
																"id": 729,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2462:8:6",
																"memberName": "reserveA",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 655,
																"src": "2458:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint112",
																	"typeString": "uint112"
																}
															},
															{
																"expression": {
																	"id": 730,
																	"name": "res",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 719,
																	"src": "2484:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Reserve_$658_storage_ptr",
																		"typeString": "struct SimpleSwap.Reserve storage pointer"
																	}
																},
																"id": 731,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2488:8:6",
																"memberName": "reserveB",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 657,
																"src": "2484:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint112",
																	"typeString": "uint112"
																}
															},
															{
																"id": 732,
																"name": "amountADesired",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 683,
																"src": "2510:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 733,
																"name": "amountBDesired",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 685,
																"src": "2538:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 734,
																"name": "amountAMin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 687,
																"src": "2566:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 735,
																"name": "amountBMin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 689,
																"src": "2590:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint112",
																	"typeString": "uint112"
																},
																{
																	"typeIdentifier": "t_uint112",
																	"typeString": "uint112"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 727,
															"name": "_calculateLiquidityAmounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1190,
															"src": "2418:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint112_$_t_uint112_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
																"typeString": "function (uint112,uint112,uint256,uint256,uint256,uint256) pure returns (uint256,uint256)"
															}
														},
														"id": 736,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2418:192:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"src": "2397:213:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 738,
												"nodeType": "ExpressionStatement",
												"src": "2397:213:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 740,
															"name": "tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "2686:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 741,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 681,
															"src": "2694:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 742,
															"name": "amountA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 696,
															"src": "2702:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 743,
															"name": "amountB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 698,
															"src": "2711:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 739,
														"name": "_performAddLiquidityTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1229,
														"src": "2656:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2656:63:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 745,
												"nodeType": "ExpressionStatement",
												"src": "2656:63:6"
											},
											{
												"expression": {
													"id": 754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 746,
														"name": "liquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "2858:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 748,
																"name": "pairHash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 711,
																"src": "2902:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 749,
																"name": "amountA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 696,
																"src": "2912:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 750,
																"name": "amountB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 698,
																"src": "2921:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 751,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 691,
																"src": "2930:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 752,
																"name": "res",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 719,
																"src": "2934:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Reserve_$658_storage_ptr",
																	"typeString": "struct SimpleSwap.Reserve storage pointer"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_struct$_Reserve_$658_storage_ptr",
																	"typeString": "struct SimpleSwap.Reserve storage pointer"
																}
															],
															"id": 747,
															"name": "_mintLiquidityAndUpdateReserves",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1285,
															"src": "2870:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$_t_address_$_t_struct$_Reserve_$658_storage_ptr_$returns$_t_uint256_$",
																"typeString": "function (bytes32,uint256,uint256,address,struct SimpleSwap.Reserve storage pointer) returns (uint256)"
															}
														},
														"id": 753,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2870:68:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2858:80:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 755,
												"nodeType": "ExpressionStatement",
												"src": "2858:80:6"
											}
										]
									},
									"documentation": {
										"id": 677,
										"nodeType": "StructuredDocumentation",
										"src": "1112:676:6",
										"text": "@notice Adds liquidity to a token pair pool\n @param tokenA Address of token A\n @param tokenB Address of token B\n @param amountADesired Desired amount of token A to add\n @param amountBDesired Desired amount of token B to add\n @param amountAMin Minimum acceptable amount of token A\n @param amountBMin Minimum acceptable amount of token B\n @param to Recipient of the liquidity tokens\n @param deadline Timestamp after which the transaction is invalid\n @return amountA Actual amount of token A added\n @return amountB Actual amount of token B added\n @return liquidity Amount of liquidity tokens minted"
									},
									"functionSelector": "e8e33700",
									"id": 757,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nameLocation": "1802:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "1832:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "1824:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1824:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "1856:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "1848:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1848:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "amountADesired",
												"nameLocation": "1877:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "1872:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 682,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "amountBDesired",
												"nameLocation": "1906:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "1901:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 684,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1901:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "1935:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "1930:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 686,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1930:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "1960:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "1955:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 688,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1955:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1988:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "1980:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 690,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1980:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2005:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "2000:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 692,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2000:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1814:205:6"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "2043:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "2038:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 695,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2038:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "2057:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "2052:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 697,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2052:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "2071:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "2066:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 699,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2066:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2037:44:6"
									},
									"scope": 1494,
									"src": "1793:1152:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 892,
										"nodeType": "Block",
										"src": "3755:867:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 783,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 780,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "3773:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 781,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3779:9:6",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "3773:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 782,
																"name": "deadline",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 772,
																"src": "3792:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3773:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45787069726564",
															"id": 784,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3802:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f183c8b0f89612f6f096bf1f0017061404d2019bd0580f7b18bddb8dcc0d7a13",
																"typeString": "literal_string \"Expired\""
															},
															"value": "Expired"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f183c8b0f89612f6f096bf1f0017061404d2019bd0580f7b18bddb8dcc0d7a13",
																"typeString": "literal_string \"Expired\""
															}
														],
														"id": 779,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3765:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3765:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 786,
												"nodeType": "ExpressionStatement",
												"src": "3765:47:6"
											},
											{
												"assignments": [
													788
												],
												"declarations": [
													{
														"constant": false,
														"id": 788,
														"mutability": "mutable",
														"name": "pairHash",
														"nameLocation": "3831:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 892,
														"src": "3823:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 787,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3823:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 793,
												"initialValue": {
													"arguments": [
														{
															"id": 790,
															"name": "tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 760,
															"src": "3855:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 791,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 762,
															"src": "3863:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 789,
														"name": "_getPairHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1462,
														"src": "3842:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$returns$_t_bytes32_$",
															"typeString": "function (address,address) pure returns (bytes32)"
														}
													},
													"id": 792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3842:28:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3823:47:6"
											},
											{
												"assignments": [
													796
												],
												"declarations": [
													{
														"constant": false,
														"id": 796,
														"mutability": "mutable",
														"name": "res",
														"nameLocation": "3896:3:6",
														"nodeType": "VariableDeclaration",
														"scope": 892,
														"src": "3880:19:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Reserve_$658_storage_ptr",
															"typeString": "struct SimpleSwap.Reserve"
														},
														"typeName": {
															"id": 795,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 794,
																"name": "Reserve",
																"nameLocations": [
																	"3880:7:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 658,
																"src": "3880:7:6"
															},
															"referencedDeclaration": 658,
															"src": "3880:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Reserve_$658_storage_ptr",
																"typeString": "struct SimpleSwap.Reserve"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 800,
												"initialValue": {
													"baseExpression": {
														"id": 797,
														"name": "reserves",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 664,
														"src": "3902:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Reserve_$658_storage_$",
															"typeString": "mapping(bytes32 => struct SimpleSwap.Reserve storage ref)"
														}
													},
													"id": 799,
													"indexExpression": {
														"id": 798,
														"name": "pairHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 788,
														"src": "3911:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3902:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Reserve_$658_storage",
														"typeString": "struct SimpleSwap.Reserve storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3880:40:6"
											},
											{
												"assignments": [
													802
												],
												"declarations": [
													{
														"constant": false,
														"id": 802,
														"mutability": "mutable",
														"name": "total",
														"nameLocation": "3935:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 892,
														"src": "3930:10:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 801,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3930:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 806,
												"initialValue": {
													"baseExpression": {
														"id": 803,
														"name": "totalLiquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 669,
														"src": "3943:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
															"typeString": "mapping(bytes32 => uint256)"
														}
													},
													"id": 805,
													"indexExpression": {
														"id": 804,
														"name": "pairHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 788,
														"src": "3958:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3943:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3930:37:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 810,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 808,
																"name": "total",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 802,
																"src": "3985:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 809,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3993:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3985:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f206c6971756964697479",
															"id": 811,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3996:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_379a432f00aa43993bfbf4e01492a8eab5138dcd2e395864ede728644390fc31",
																"typeString": "literal_string \"No liquidity\""
															},
															"value": "No liquidity"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_379a432f00aa43993bfbf4e01492a8eab5138dcd2e395864ede728644390fc31",
																"typeString": "literal_string \"No liquidity\""
															}
														],
														"id": 807,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3977:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3977:34:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 813,
												"nodeType": "ExpressionStatement",
												"src": "3977:34:6"
											},
											{
												"expression": {
													"id": 821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 814,
														"name": "amountA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 775,
														"src": "4068:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 820,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 818,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 815,
																	"name": "res",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 796,
																	"src": "4078:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Reserve_$658_storage_ptr",
																		"typeString": "struct SimpleSwap.Reserve storage pointer"
																	}
																},
																"id": 816,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4082:8:6",
																"memberName": "reserveA",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 655,
																"src": "4078:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint112",
																	"typeString": "uint112"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 817,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 764,
																"src": "4093:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4078:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 819,
															"name": "total",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 802,
															"src": "4105:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4078:32:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4068:42:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 822,
												"nodeType": "ExpressionStatement",
												"src": "4068:42:6"
											},
											{
												"expression": {
													"id": 830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 823,
														"name": "amountB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 777,
														"src": "4120:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 829,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 827,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 824,
																	"name": "res",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 796,
																	"src": "4130:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Reserve_$658_storage_ptr",
																		"typeString": "struct SimpleSwap.Reserve storage pointer"
																	}
																},
																"id": 825,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4134:8:6",
																"memberName": "reserveB",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 657,
																"src": "4130:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint112",
																	"typeString": "uint112"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 826,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 764,
																"src": "4145:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4130:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 828,
															"name": "total",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 802,
															"src": "4157:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4130:32:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4120:42:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 831,
												"nodeType": "ExpressionStatement",
												"src": "4120:42:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 839,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 835,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 833,
																	"name": "amountA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 775,
																	"src": "4181:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 834,
																	"name": "amountAMin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 766,
																	"src": "4192:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4181:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 838,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 836,
																	"name": "amountB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 777,
																	"src": "4206:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 837,
																	"name": "amountBMin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 768,
																	"src": "4217:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4206:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4181:46:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536c697070616765",
															"id": 840,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4229:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fb87c09e63b5ee5d76fa5ada5f7c2fd9de8980c2964f73a791eaef9c4602f114",
																"typeString": "literal_string \"Slippage\""
															},
															"value": "Slippage"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fb87c09e63b5ee5d76fa5ada5f7c2fd9de8980c2964f73a791eaef9c4602f114",
																"typeString": "literal_string \"Slippage\""
															}
														],
														"id": 832,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4173:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4173:67:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 842,
												"nodeType": "ExpressionStatement",
												"src": "4173:67:6"
											},
											{
												"expression": {
													"id": 850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 843,
																"name": "liquidityBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 676,
																"src": "4296:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(bytes32 => mapping(address => uint256))"
																}
															},
															"id": 847,
															"indexExpression": {
																"id": 844,
																"name": "pairHash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 788,
																"src": "4313:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4296:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 848,
														"indexExpression": {
															"expression": {
																"id": 845,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4323:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 846,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4327:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4323:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4296:38:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 849,
														"name": "liquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 764,
														"src": "4338:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4296:51:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 851,
												"nodeType": "ExpressionStatement",
												"src": "4296:51:6"
											},
											{
												"expression": {
													"id": 856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 852,
															"name": "totalLiquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "4357:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																"typeString": "mapping(bytes32 => uint256)"
															}
														},
														"id": 854,
														"indexExpression": {
															"id": 853,
															"name": "pairHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 788,
															"src": "4372:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4357:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 855,
														"name": "liquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 764,
														"src": "4385:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4357:37:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 857,
												"nodeType": "ExpressionStatement",
												"src": "4357:37:6"
											},
											{
												"expression": {
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 858,
															"name": "res",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "4404:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Reserve_$658_storage_ptr",
																"typeString": "struct SimpleSwap.Reserve storage pointer"
															}
														},
														"id": 860,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4408:8:6",
														"memberName": "reserveA",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 655,
														"src": "4404:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 863,
																"name": "amountA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 775,
																"src": "4428:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 862,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4420:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint112_$",
																"typeString": "type(uint112)"
															},
															"typeName": {
																"id": 861,
																"name": "uint112",
																"nodeType": "ElementaryTypeName",
																"src": "4420:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 864,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4420:16:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"src": "4404:32:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"id": 866,
												"nodeType": "ExpressionStatement",
												"src": "4404:32:6"
											},
											{
												"expression": {
													"id": 874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 867,
															"name": "res",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "4446:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Reserve_$658_storage_ptr",
																"typeString": "struct SimpleSwap.Reserve storage pointer"
															}
														},
														"id": 869,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4450:8:6",
														"memberName": "reserveB",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 657,
														"src": "4446:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 872,
																"name": "amountB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 777,
																"src": "4470:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 871,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4462:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint112_$",
																"typeString": "type(uint112)"
															},
															"typeName": {
																"id": 870,
																"name": "uint112",
																"nodeType": "ElementaryTypeName",
																"src": "4462:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 873,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4462:16:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"src": "4446:32:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"id": 875,
												"nodeType": "ExpressionStatement",
												"src": "4446:32:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 880,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "4553:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 881,
															"name": "amountA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 775,
															"src": "4557:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 877,
																	"name": "tokenA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 760,
																	"src": "4532:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 876,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 167,
																"src": "4525:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$167_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 878,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4525:14:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														"id": 879,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4540:12:6",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 212,
														"src": "4525:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$167_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4525:40:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 883,
												"nodeType": "ExpressionStatement",
												"src": "4525:40:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 888,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "4603:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 889,
															"name": "amountB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 777,
															"src": "4607:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 885,
																	"name": "tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 762,
																	"src": "4582:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 884,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 167,
																"src": "4575:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$167_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 886,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4575:14:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														"id": 887,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4590:12:6",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 212,
														"src": "4575:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$167_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4575:40:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 891,
												"nodeType": "ExpressionStatement",
												"src": "4575:40:6"
											}
										]
									},
									"documentation": {
										"id": 758,
										"nodeType": "StructuredDocumentation",
										"src": "2951:557:6",
										"text": "@notice Removes liquidity and returns tokens to the user\n @param tokenA Address of token A\n @param tokenB Address of token B\n @param liquidity Amount of liquidity tokens to burn\n @param amountAMin Minimum acceptable amount of token A\n @param amountBMin Minimum acceptable amount of token B\n @param to Address to receive withdrawn tokens\n @param deadline Timestamp after which the transaction is invalid\n @return amountA Amount of token A received\n @return amountB Amount of token B received"
									},
									"functionSelector": "baa2abde",
									"id": 893,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidity",
									"nameLocation": "3522:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "3555:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "3547:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 759,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3547:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "3579:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "3571:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 761,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3571:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "3600:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "3595:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 763,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3595:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "3624:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "3619:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 765,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3619:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "3649:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "3644:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 767,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3644:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3677:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "3669:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3669:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3694:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "3689:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 771,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3689:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3537:171:6"
									},
									"returnParameters": {
										"id": 778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 775,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "3732:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "3727:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 774,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3727:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 777,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "3746:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "3741:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 776,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3741:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3726:28:6"
									},
									"scope": 1494,
									"src": "3513:1109:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 989,
										"nodeType": "Block",
										"src": "5267:730:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 915,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 912,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "5285:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 913,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5291:9:6",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "5285:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 914,
																"name": "deadline",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 905,
																"src": "5304:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5285:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45787069726564",
															"id": 916,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5314:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f183c8b0f89612f6f096bf1f0017061404d2019bd0580f7b18bddb8dcc0d7a13",
																"typeString": "literal_string \"Expired\""
															},
															"value": "Expired"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f183c8b0f89612f6f096bf1f0017061404d2019bd0580f7b18bddb8dcc0d7a13",
																"typeString": "literal_string \"Expired\""
															}
														],
														"id": 911,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5277:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5277:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 918,
												"nodeType": "ExpressionStatement",
												"src": "5277:47:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 923,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 920,
																	"name": "path",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 901,
																	"src": "5342:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																		"typeString": "address[] calldata"
																	}
																},
																"id": 921,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5347:6:6",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "5342:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "32",
																"id": 922,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5357:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "5342:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c7920322d746f6b656e207061746820737570706f72746564",
															"id": 924,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5360:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1999f60f5526a13cb17eac3c04d030e47d1c41d4e55af8ccb43358373aec7eb8",
																"typeString": "literal_string \"Only 2-token path supported\""
															},
															"value": "Only 2-token path supported"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1999f60f5526a13cb17eac3c04d030e47d1c41d4e55af8ccb43358373aec7eb8",
																"typeString": "literal_string \"Only 2-token path supported\""
															}
														],
														"id": 919,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5334:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5334:56:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 926,
												"nodeType": "ExpressionStatement",
												"src": "5334:56:6"
											},
											{
												"assignments": [
													928
												],
												"declarations": [
													{
														"constant": false,
														"id": 928,
														"mutability": "mutable",
														"name": "tokenIn",
														"nameLocation": "5409:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 989,
														"src": "5401:15:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 927,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5401:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 932,
												"initialValue": {
													"baseExpression": {
														"id": 929,
														"name": "path",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 901,
														"src": "5419:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
															"typeString": "address[] calldata"
														}
													},
													"id": 931,
													"indexExpression": {
														"hexValue": "30",
														"id": 930,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5424:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5419:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5401:25:6"
											},
											{
												"assignments": [
													934
												],
												"declarations": [
													{
														"constant": false,
														"id": 934,
														"mutability": "mutable",
														"name": "tokenOut",
														"nameLocation": "5444:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 989,
														"src": "5436:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 933,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5436:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 938,
												"initialValue": {
													"baseExpression": {
														"id": 935,
														"name": "path",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 901,
														"src": "5455:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
															"typeString": "address[] calldata"
														}
													},
													"id": 937,
													"indexExpression": {
														"hexValue": "31",
														"id": 936,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5460:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5455:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5436:26:6"
											},
											{
												"assignments": [
													940
												],
												"declarations": [
													{
														"constant": false,
														"id": 940,
														"mutability": "mutable",
														"name": "amountOut",
														"nameLocation": "5517:9:6",
														"nodeType": "VariableDeclaration",
														"scope": 989,
														"src": "5512:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 939,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5512:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 946,
												"initialValue": {
													"arguments": [
														{
															"id": 942,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 896,
															"src": "5550:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 943,
															"name": "tokenIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 928,
															"src": "5560:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 944,
															"name": "tokenOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 934,
															"src": "5569:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 941,
														"name": "_calculateSwapOutput",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1328,
														"src": "5529:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (uint256,address,address) view returns (uint256)"
														}
													},
													"id": 945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5529:49:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5512:66:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 950,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 948,
																"name": "amountOut",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 940,
																"src": "5596:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 949,
																"name": "amountOutMin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 898,
																"src": "5609:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5596:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74206f7574707574",
															"id": 951,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5623:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ffebb6789a62ed60836fc38e566e8cbcff27ebb3acadee53ee5da9825f1b14e1",
																"typeString": "literal_string \"Insufficient output\""
															},
															"value": "Insufficient output"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ffebb6789a62ed60836fc38e566e8cbcff27ebb3acadee53ee5da9825f1b14e1",
																"typeString": "literal_string \"Insufficient output\""
															}
														],
														"id": 947,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5588:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5588:57:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 953,
												"nodeType": "ExpressionStatement",
												"src": "5588:57:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 955,
															"name": "tokenIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 928,
															"src": "5712:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 956,
															"name": "tokenOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 934,
															"src": "5721:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 957,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 896,
															"src": "5731:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 958,
															"name": "amountOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 940,
															"src": "5741:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 959,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "5752:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 954,
														"name": "_performSwapTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1364,
														"src": "5690:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,address)"
														}
													},
													"id": 960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5690:65:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 961,
												"nodeType": "ExpressionStatement",
												"src": "5690:65:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 963,
															"name": "tokenIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 928,
															"src": "5818:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 964,
															"name": "tokenOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 934,
															"src": "5827:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 965,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 896,
															"src": "5837:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 966,
															"name": "amountOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 940,
															"src": "5847:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 962,
														"name": "_updateReservesAfterSwap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1433,
														"src": "5793:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5793:64:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 968,
												"nodeType": "ExpressionStatement",
												"src": "5793:64:6"
											},
											{
												"expression": {
													"id": 975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 969,
														"name": "amounts",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 909,
														"src": "5904:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "32",
																"id": 973,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5925:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																}
															],
															"id": 972,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "5914:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (uint256[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 970,
																	"name": "uint",
																	"nodeType": "ElementaryTypeName",
																	"src": "5918:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 971,
																"nodeType": "ArrayTypeName",
																"src": "5918:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																	"typeString": "uint256[]"
																}
															}
														},
														"id": 974,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5914:13:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"src": "5904:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"id": 976,
												"nodeType": "ExpressionStatement",
												"src": "5904:23:6"
											},
											{
												"expression": {
													"id": 981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 977,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "5937:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 979,
														"indexExpression": {
															"hexValue": "30",
															"id": 978,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5945:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5937:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 980,
														"name": "amountIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 896,
														"src": "5950:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5937:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 982,
												"nodeType": "ExpressionStatement",
												"src": "5937:21:6"
											},
											{
												"expression": {
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 983,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "5968:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 985,
														"indexExpression": {
															"hexValue": "31",
															"id": 984,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5976:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5968:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 986,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 940,
														"src": "5981:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5968:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 988,
												"nodeType": "ExpressionStatement",
												"src": "5968:22:6"
											}
										]
									},
									"documentation": {
										"id": 894,
										"nodeType": "StructuredDocumentation",
										"src": "4628:427:6",
										"text": "@notice Swaps exact amountIn of tokenIn for tokenOut\n @param amountIn Exact amount of input tokens to swap\n @param amountOutMin Minimum amount of output tokens required\n @param path Array with [tokenIn, tokenOut]\n @param to Address to receive output tokens\n @param deadline Timestamp after which the transaction is invalid\n @return amounts Array containing input and output amounts"
									},
									"functionSelector": "38ed1739",
									"id": 990,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokens",
									"nameLocation": "5069:24:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 896,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "5108:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "5103:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 895,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5103:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "5131:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "5126:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 897,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "5172:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "5153:23:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 899,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "5153:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 900,
													"nodeType": "ArrayTypeName",
													"src": "5153:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5194:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "5186:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 902,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5186:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "5211:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "5206:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 904,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5206:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5093:132:6"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "5258:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "5244:21:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 907,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "5244:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 908,
													"nodeType": "ArrayTypeName",
													"src": "5244:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5243:23:6"
									},
									"scope": 1494,
									"src": "5060:937:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1044,
										"nodeType": "Block",
										"src": "6293:304:6",
										"statements": [
											{
												"assignments": [
													1001
												],
												"declarations": [
													{
														"constant": false,
														"id": 1001,
														"mutability": "mutable",
														"name": "pairHash",
														"nameLocation": "6311:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 1044,
														"src": "6303:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1000,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "6303:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1006,
												"initialValue": {
													"arguments": [
														{
															"id": 1003,
															"name": "tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 993,
															"src": "6335:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1004,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 995,
															"src": "6343:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1002,
														"name": "_getPairHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1462,
														"src": "6322:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$returns$_t_bytes32_$",
															"typeString": "function (address,address) pure returns (bytes32)"
														}
													},
													"id": 1005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6322:28:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6303:47:6"
											},
											{
												"assignments": [
													1009
												],
												"declarations": [
													{
														"constant": false,
														"id": 1009,
														"mutability": "mutable",
														"name": "res",
														"nameLocation": "6375:3:6",
														"nodeType": "VariableDeclaration",
														"scope": 1044,
														"src": "6360:18:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Reserve_$658_memory_ptr",
															"typeString": "struct SimpleSwap.Reserve"
														},
														"typeName": {
															"id": 1008,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1007,
																"name": "Reserve",
																"nameLocations": [
																	"6360:7:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 658,
																"src": "6360:7:6"
															},
															"referencedDeclaration": 658,
															"src": "6360:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Reserve_$658_storage_ptr",
																"typeString": "struct SimpleSwap.Reserve"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1013,
												"initialValue": {
													"baseExpression": {
														"id": 1010,
														"name": "reserves",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 664,
														"src": "6381:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Reserve_$658_storage_$",
															"typeString": "mapping(bytes32 => struct SimpleSwap.Reserve storage ref)"
														}
													},
													"id": 1012,
													"indexExpression": {
														"id": 1011,
														"name": "pairHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1001,
														"src": "6390:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6381:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Reserve_$658_storage",
														"typeString": "struct SimpleSwap.Reserve storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6360:39:6"
											},
											{
												"assignments": [
													1015,
													1017
												],
												"declarations": [
													{
														"constant": false,
														"id": 1015,
														"mutability": "mutable",
														"name": "reserveA",
														"nameLocation": "6416:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 1044,
														"src": "6411:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1014,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6411:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1017,
														"mutability": "mutable",
														"name": "reserveB",
														"nameLocation": "6431:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 1044,
														"src": "6426:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1016,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6426:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1023,
												"initialValue": {
													"arguments": [
														{
															"id": 1019,
															"name": "tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 993,
															"src": "6462:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1020,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 995,
															"src": "6470:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1021,
															"name": "res",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1009,
															"src": "6478:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Reserve_$658_memory_ptr",
																"typeString": "struct SimpleSwap.Reserve memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_struct$_Reserve_$658_memory_ptr",
																"typeString": "struct SimpleSwap.Reserve memory"
															}
														],
														"id": 1018,
														"name": "_getSortedReserves",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1493,
														"src": "6443:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_struct$_Reserve_$658_memory_ptr_$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function (address,address,struct SimpleSwap.Reserve memory) pure returns (uint256,uint256)"
														}
													},
													"id": 1022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6443:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6410:72:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1031,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1027,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1025,
																	"name": "reserveA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1015,
																	"src": "6500:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1026,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6511:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6500:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1030,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1028,
																	"name": "reserveB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1017,
																	"src": "6516:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1029,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6527:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6516:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "6500:28:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f207265736572766573",
															"id": 1032,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6530:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8d6698763d2d0ff1e31fa7f43b504a63f09c2932b87b9842c093ff74de4d766",
																"typeString": "literal_string \"No reserves\""
															},
															"value": "No reserves"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8d6698763d2d0ff1e31fa7f43b504a63f09c2932b87b9842c093ff74de4d766",
																"typeString": "literal_string \"No reserves\""
															}
														],
														"id": 1024,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6492:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6492:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1034,
												"nodeType": "ExpressionStatement",
												"src": "6492:52:6"
											},
											{
												"expression": {
													"id": 1042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1035,
														"name": "price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 998,
														"src": "6554:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1041,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1038,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1036,
																		"name": "reserveB",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1017,
																		"src": "6563:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "31653138",
																		"id": 1037,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6574:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		},
																		"value": "1e18"
																	},
																	"src": "6563:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1039,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6562:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1040,
															"name": "reserveA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1015,
															"src": "6582:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6562:28:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6554:36:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1043,
												"nodeType": "ExpressionStatement",
												"src": "6554:36:6"
											}
										]
									},
									"documentation": {
										"id": 991,
										"nodeType": "StructuredDocumentation",
										"src": "6003:200:6",
										"text": "@notice Returns the price of tokenB in terms of tokenA\n @param tokenA Address of token A\n @param tokenB Address of token B\n @return price Price as tokenB/tokenA scaled by 1e18"
									},
									"functionSelector": "ac41865a",
									"id": 1045,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPrice",
									"nameLocation": "6217:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "6234:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "6226:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 992,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6226:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "6250:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "6242:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 994,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6242:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6225:32:6"
									},
									"returnParameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "6286:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "6281:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 997,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6281:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6280:12:6"
									},
									"scope": 1494,
									"src": "6208:389:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1098,
										"nodeType": "Block",
										"src": "6986:316:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1068,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1064,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1060,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1058,
																		"name": "amountIn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1048,
																		"src": "7004:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1059,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7015:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "7004:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1063,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1061,
																		"name": "reserveIn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1050,
																		"src": "7020:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1062,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7032:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "7020:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "7004:29:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1067,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1065,
																	"name": "reserveOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1052,
																	"src": "7037:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1066,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7050:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7037:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "7004:47:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964207265736572766573",
															"id": 1069,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7053:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_185a9d5da6de3eebfb2e4ad4adad189f402b098c61f6e8e0c8d2b4a20a1faa2a",
																"typeString": "literal_string \"Invalid reserves\""
															},
															"value": "Invalid reserves"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_185a9d5da6de3eebfb2e4ad4adad189f402b098c61f6e8e0c8d2b4a20a1faa2a",
																"typeString": "literal_string \"Invalid reserves\""
															}
														],
														"id": 1057,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6996:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6996:76:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1071,
												"nodeType": "ExpressionStatement",
												"src": "6996:76:6"
											},
											{
												"assignments": [
													1073
												],
												"declarations": [
													{
														"constant": false,
														"id": 1073,
														"mutability": "mutable",
														"name": "amountInWithFee",
														"nameLocation": "7088:15:6",
														"nodeType": "VariableDeclaration",
														"scope": 1098,
														"src": "7083:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1072,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "7083:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1077,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1074,
														"name": "amountIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1048,
														"src": "7106:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "393937",
														"id": 1075,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7117:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_997_by_1",
															"typeString": "int_const 997"
														},
														"value": "997"
													},
													"src": "7106:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7083:37:6"
											},
											{
												"assignments": [
													1079
												],
												"declarations": [
													{
														"constant": false,
														"id": 1079,
														"mutability": "mutable",
														"name": "numerator",
														"nameLocation": "7147:9:6",
														"nodeType": "VariableDeclaration",
														"scope": 1098,
														"src": "7142:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1078,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "7142:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1083,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1080,
														"name": "amountInWithFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1073,
														"src": "7159:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1081,
														"name": "reserveOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1052,
														"src": "7177:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7159:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7142:45:6"
											},
											{
												"assignments": [
													1085
												],
												"declarations": [
													{
														"constant": false,
														"id": 1085,
														"mutability": "mutable",
														"name": "denominator",
														"nameLocation": "7202:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 1098,
														"src": "7197:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1084,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "7197:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1091,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1088,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1086,
															"name": "reserveIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1050,
															"src": "7216:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "31303030",
															"id": 1087,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7228:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															},
															"value": "1000"
														},
														"src": "7216:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1089,
														"name": "amountInWithFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1073,
														"src": "7235:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7216:34:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7197:53:6"
											},
											{
												"expression": {
													"id": 1096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1092,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1055,
														"src": "7260:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1095,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1093,
															"name": "numerator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1079,
															"src": "7272:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1094,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1085,
															"src": "7284:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7272:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7260:35:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1097,
												"nodeType": "ExpressionStatement",
												"src": "7260:35:6"
											}
										]
									},
									"documentation": {
										"id": 1046,
										"nodeType": "StructuredDocumentation",
										"src": "6603:271:6",
										"text": "@notice Calculates output tokens for a given input using Uniswap formula\n @param amountIn Input amount\n @param reserveIn Reserve of input token\n @param reserveOut Reserve of output token\n @return amountOut Amount of output tokens after fee"
									},
									"functionSelector": "054d50d4",
									"id": 1099,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountOut",
									"nameLocation": "6888:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "6906:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1099,
												"src": "6901:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1047,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6901:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "reserveIn",
												"nameLocation": "6921:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1099,
												"src": "6916:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1049,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6916:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "reserveOut",
												"nameLocation": "6937:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1099,
												"src": "6932:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1051,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6932:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6900:48:6"
									},
									"returnParameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "6975:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1099,
												"src": "6970:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1054,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6970:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6969:16:6"
									},
									"scope": 1494,
									"src": "6879:423:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1189,
										"nodeType": "Block",
										"src": "7734:872:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"id": 1121,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1119,
															"name": "currentReserveA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1102,
															"src": "7748:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1120,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7767:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "7748:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"id": 1124,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1122,
															"name": "currentReserveB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1104,
															"src": "7772:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1123,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7791:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "7772:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "7748:44:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1187,
													"nodeType": "Block",
													"src": "7951:649:6",
													"statements": [
														{
															"assignments": [
																1136
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1136,
																	"mutability": "mutable",
																	"name": "amountBOptimal",
																	"nameLocation": "8017:14:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1187,
																	"src": "8012:19:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1135,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "8012:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1142,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1141,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1139,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1137,
																		"name": "amountADesired",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1106,
																		"src": "8034:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1138,
																		"name": "currentReserveB",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1104,
																		"src": "8051:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint112",
																			"typeString": "uint112"
																		}
																	},
																	"src": "8034:32:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1140,
																	"name": "currentReserveA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1102,
																	"src": "8069:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																},
																"src": "8034:50:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "8012:72:6"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1145,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1143,
																	"name": "amountBOptimal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1136,
																	"src": "8102:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 1144,
																	"name": "amountBDesired",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1108,
																	"src": "8120:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8102:32:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1185,
																"nodeType": "Block",
																"src": "8321:269:6",
																"statements": [
																	{
																		"assignments": [
																			1163
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1163,
																				"mutability": "mutable",
																				"name": "amountAOptimal",
																				"nameLocation": "8344:14:6",
																				"nodeType": "VariableDeclaration",
																				"scope": 1185,
																				"src": "8339:19:6",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1162,
																					"name": "uint",
																					"nodeType": "ElementaryTypeName",
																					"src": "8339:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1169,
																		"initialValue": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1168,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1166,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1164,
																					"name": "amountBDesired",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1108,
																					"src": "8361:14:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 1165,
																					"name": "currentReserveA",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1102,
																					"src": "8378:15:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint112",
																						"typeString": "uint112"
																					}
																				},
																				"src": "8361:32:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 1167,
																				"name": "currentReserveB",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1104,
																				"src": "8396:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint112",
																					"typeString": "uint112"
																				}
																			},
																			"src": "8361:50:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "8339:72:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1173,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1171,
																						"name": "amountAOptimal",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1163,
																						"src": "8437:14:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">=",
																					"rightExpression": {
																						"id": 1172,
																						"name": "amountAMin",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1110,
																						"src": "8455:10:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "8437:28:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "496e73756666696369656e742041",
																					"id": 1174,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8467:16:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_00c0664002c3a7ab9481655483f753aa6ee21854999370a38d90a0549f0cf8f4",
																						"typeString": "literal_string \"Insufficient A\""
																					},
																					"value": "Insufficient A"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_00c0664002c3a7ab9481655483f753aa6ee21854999370a38d90a0549f0cf8f4",
																						"typeString": "literal_string \"Insufficient A\""
																					}
																				],
																				"id": 1170,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "8429:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1175,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8429:55:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1176,
																		"nodeType": "ExpressionStatement",
																		"src": "8429:55:6"
																	},
																	{
																		"expression": {
																			"id": 1183,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"components": [
																					{
																						"id": 1177,
																						"name": "calculatedAmountA",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1115,
																						"src": "8503:17:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"id": 1178,
																						"name": "calculatedAmountB",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1117,
																						"src": "8522:17:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1179,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "TupleExpression",
																				"src": "8502:38:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																					"typeString": "tuple(uint256,uint256)"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"components": [
																					{
																						"id": 1180,
																						"name": "amountAOptimal",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1163,
																						"src": "8544:14:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"id": 1181,
																						"name": "amountBDesired",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1108,
																						"src": "8560:14:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1182,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "8543:32:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																					"typeString": "tuple(uint256,uint256)"
																				}
																			},
																			"src": "8502:73:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1184,
																		"nodeType": "ExpressionStatement",
																		"src": "8502:73:6"
																	}
																]
															},
															"id": 1186,
															"nodeType": "IfStatement",
															"src": "8098:492:6",
															"trueBody": {
																"id": 1161,
																"nodeType": "Block",
																"src": "8136:179:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1149,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1147,
																						"name": "amountBOptimal",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1136,
																						"src": "8162:14:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">=",
																					"rightExpression": {
																						"id": 1148,
																						"name": "amountBMin",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1112,
																						"src": "8180:10:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "8162:28:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "496e73756666696369656e742042",
																					"id": 1150,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8192:16:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_28ee48a047f51c165a70ae36f179330afc265bf4c05f56e1a1f02c2668dcead2",
																						"typeString": "literal_string \"Insufficient B\""
																					},
																					"value": "Insufficient B"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_28ee48a047f51c165a70ae36f179330afc265bf4c05f56e1a1f02c2668dcead2",
																						"typeString": "literal_string \"Insufficient B\""
																					}
																				],
																				"id": 1146,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "8154:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1151,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8154:55:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1152,
																		"nodeType": "ExpressionStatement",
																		"src": "8154:55:6"
																	},
																	{
																		"expression": {
																			"id": 1159,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"components": [
																					{
																						"id": 1153,
																						"name": "calculatedAmountA",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1115,
																						"src": "8228:17:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"id": 1154,
																						"name": "calculatedAmountB",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1117,
																						"src": "8247:17:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1155,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "TupleExpression",
																				"src": "8227:38:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																					"typeString": "tuple(uint256,uint256)"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"components": [
																					{
																						"id": 1156,
																						"name": "amountADesired",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1106,
																						"src": "8269:14:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"id": 1157,
																						"name": "amountBOptimal",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1136,
																						"src": "8285:14:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1158,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "8268:32:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																					"typeString": "tuple(uint256,uint256)"
																				}
																			},
																			"src": "8227:73:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1160,
																		"nodeType": "ExpressionStatement",
																		"src": "8227:73:6"
																	}
																]
															}
														}
													]
												},
												"id": 1188,
												"nodeType": "IfStatement",
												"src": "7744:856:6",
												"trueBody": {
													"id": 1134,
													"nodeType": "Block",
													"src": "7794:151:6",
													"statements": [
														{
															"expression": {
																"id": 1132,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"components": [
																		{
																			"id": 1126,
																			"name": "calculatedAmountA",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1115,
																			"src": "7862:17:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1127,
																			"name": "calculatedAmountB",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1117,
																			"src": "7881:17:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1128,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "TupleExpression",
																	"src": "7861:38:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																		"typeString": "tuple(uint256,uint256)"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"components": [
																		{
																			"id": 1129,
																			"name": "amountADesired",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1106,
																			"src": "7903:14:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1130,
																			"name": "amountBDesired",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1108,
																			"src": "7919:14:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1131,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7902:32:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																		"typeString": "tuple(uint256,uint256)"
																	}
																},
																"src": "7861:73:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1133,
															"nodeType": "ExpressionStatement",
															"src": "7861:73:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1100,
										"nodeType": "StructuredDocumentation",
										"src": "7371:71:6",
										"text": "@dev Calculates the optimal amounts of tokens to add for liquidity."
									},
									"id": 1190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_calculateLiquidityAmounts",
									"nameLocation": "7456:26:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "currentReserveA",
												"nameLocation": "7500:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "7492:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1101,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "7492:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "currentReserveB",
												"nameLocation": "7533:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "7525:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1103,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "7525:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1106,
												"mutability": "mutable",
												"name": "amountADesired",
												"nameLocation": "7563:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "7558:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1105,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7558:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1108,
												"mutability": "mutable",
												"name": "amountBDesired",
												"nameLocation": "7592:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "7587:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1107,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7587:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "7621:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "7616:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1109,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7616:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1112,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "7646:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "7641:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1111,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7641:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7482:180:6"
									},
									"returnParameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "calculatedAmountA",
												"nameLocation": "7691:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "7686:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1114,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7686:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "calculatedAmountB",
												"nameLocation": "7715:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "7710:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1116,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7710:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7685:48:6"
									},
									"scope": 1494,
									"src": "7447:1159:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1228,
										"nodeType": "Block",
										"src": "8821:161:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1206,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8863:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1207,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8867:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8863:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1210,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "8883:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SimpleSwap_$1494",
																		"typeString": "contract SimpleSwap"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SimpleSwap_$1494",
																		"typeString": "contract SimpleSwap"
																	}
																],
																"id": 1209,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8875:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1208,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8875:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8875:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1212,
															"name": "amountA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1197,
															"src": "8890:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1203,
																	"name": "tokenA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1193,
																	"src": "8838:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1202,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 167,
																"src": "8831:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$167_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1204,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8831:14:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														"id": 1205,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8846:16:6",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 239,
														"src": "8831:31:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$167_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8831:67:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1214,
												"nodeType": "ExpressionStatement",
												"src": "8831:67:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1219,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8940:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1220,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8944:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8940:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1223,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "8960:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SimpleSwap_$1494",
																		"typeString": "contract SimpleSwap"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SimpleSwap_$1494",
																		"typeString": "contract SimpleSwap"
																	}
																],
																"id": 1222,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8952:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1221,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8952:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8952:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1225,
															"name": "amountB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1199,
															"src": "8967:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1216,
																	"name": "tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1195,
																	"src": "8915:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1215,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 167,
																"src": "8908:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$167_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8908:14:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														"id": 1218,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8923:16:6",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 239,
														"src": "8908:31:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$167_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8908:67:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1227,
												"nodeType": "ExpressionStatement",
												"src": "8908:67:6"
											}
										]
									},
									"documentation": {
										"id": 1191,
										"nodeType": "StructuredDocumentation",
										"src": "8612:58:6",
										"text": "@dev Handles the token transfers for adding liquidity."
									},
									"id": 1229,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_performAddLiquidityTransfers",
									"nameLocation": "8684:29:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "8731:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "8723:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8723:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "8755:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "8747:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8747:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "8776:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "8771:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1196,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8771:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "8798:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "8793:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1198,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8793:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8713:98:6"
									},
									"returnParameters": {
										"id": 1201,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8821:0:6"
									},
									"scope": 1494,
									"src": "8675:307:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1284,
										"nodeType": "Block",
										"src": "9290:231:6",
										"statements": [
											{
												"expression": {
													"id": 1250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1246,
														"name": "liquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1244,
														"src": "9300:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1249,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1247,
															"name": "amountA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1234,
															"src": "9312:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1248,
															"name": "amountB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1236,
															"src": "9322:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "9312:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9300:29:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1251,
												"nodeType": "ExpressionStatement",
												"src": "9300:29:6"
											},
											{
												"expression": {
													"id": 1256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1252,
															"name": "totalLiquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "9339:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																"typeString": "mapping(bytes32 => uint256)"
															}
														},
														"id": 1254,
														"indexExpression": {
															"id": 1253,
															"name": "pairHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1232,
															"src": "9354:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9339:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1255,
														"name": "liquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1244,
														"src": "9367:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9339:37:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1257,
												"nodeType": "ExpressionStatement",
												"src": "9339:37:6"
											},
											{
												"expression": {
													"id": 1264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1258,
																"name": "liquidityBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 676,
																"src": "9386:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(bytes32 => mapping(address => uint256))"
																}
															},
															"id": 1261,
															"indexExpression": {
																"id": 1259,
																"name": "pairHash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1232,
																"src": "9403:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9386:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1262,
														"indexExpression": {
															"id": 1260,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1238,
															"src": "9413:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9386:30:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1263,
														"name": "liquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1244,
														"src": "9420:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9386:43:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1265,
												"nodeType": "ExpressionStatement",
												"src": "9386:43:6"
											},
											{
												"expression": {
													"id": 1273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1266,
															"name": "res",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1241,
															"src": "9440:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Reserve_$658_storage_ptr",
																"typeString": "struct SimpleSwap.Reserve storage pointer"
															}
														},
														"id": 1268,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "9444:8:6",
														"memberName": "reserveA",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 655,
														"src": "9440:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1271,
																"name": "amountA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1234,
																"src": "9464:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1270,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9456:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint112_$",
																"typeString": "type(uint112)"
															},
															"typeName": {
																"id": 1269,
																"name": "uint112",
																"nodeType": "ElementaryTypeName",
																"src": "9456:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1272,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9456:16:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"src": "9440:32:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"id": 1274,
												"nodeType": "ExpressionStatement",
												"src": "9440:32:6"
											},
											{
												"expression": {
													"id": 1282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1275,
															"name": "res",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1241,
															"src": "9482:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Reserve_$658_storage_ptr",
																"typeString": "struct SimpleSwap.Reserve storage pointer"
															}
														},
														"id": 1277,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "9486:8:6",
														"memberName": "reserveB",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 657,
														"src": "9482:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1280,
																"name": "amountB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1236,
																"src": "9506:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1279,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9498:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint112_$",
																"typeString": "type(uint112)"
															},
															"typeName": {
																"id": 1278,
																"name": "uint112",
																"nodeType": "ElementaryTypeName",
																"src": "9498:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1281,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9498:16:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"src": "9482:32:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"id": 1283,
												"nodeType": "ExpressionStatement",
												"src": "9482:32:6"
											}
										]
									},
									"documentation": {
										"id": 1230,
										"nodeType": "StructuredDocumentation",
										"src": "8988:58:6",
										"text": "@dev Mints liquidity tokens and updates pool reserves."
									},
									"id": 1285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintLiquidityAndUpdateReserves",
									"nameLocation": "9060:31:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "pairHash",
												"nameLocation": "9109:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "9101:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1231,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "9101:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "9132:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "9127:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1233,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9127:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "9154:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "9149:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1235,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9149:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9179:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "9171:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9171:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "res",
												"nameLocation": "9207:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "9191:19:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Reserve_$658_storage_ptr",
													"typeString": "struct SimpleSwap.Reserve"
												},
												"typeName": {
													"id": 1240,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1239,
														"name": "Reserve",
														"nameLocations": [
															"9191:7:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 658,
														"src": "9191:7:6"
													},
													"referencedDeclaration": 658,
													"src": "9191:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Reserve_$658_storage_ptr",
														"typeString": "struct SimpleSwap.Reserve"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9091:164:6"
									},
									"returnParameters": {
										"id": 1245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "9279:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "9274:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1243,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9274:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9273:16:6"
									},
									"scope": 1494,
									"src": "9051:470:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1327,
										"nodeType": "Block",
										"src": "9766:266:6",
										"statements": [
											{
												"assignments": [
													1298
												],
												"declarations": [
													{
														"constant": false,
														"id": 1298,
														"mutability": "mutable",
														"name": "pairHash",
														"nameLocation": "9784:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 1327,
														"src": "9776:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1297,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "9776:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1303,
												"initialValue": {
													"arguments": [
														{
															"id": 1300,
															"name": "tokenIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1290,
															"src": "9808:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1301,
															"name": "tokenOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1292,
															"src": "9817:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1299,
														"name": "_getPairHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1462,
														"src": "9795:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$returns$_t_bytes32_$",
															"typeString": "function (address,address) pure returns (bytes32)"
														}
													},
													"id": 1302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9795:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9776:50:6"
											},
											{
												"assignments": [
													1306
												],
												"declarations": [
													{
														"constant": false,
														"id": 1306,
														"mutability": "mutable",
														"name": "res",
														"nameLocation": "9851:3:6",
														"nodeType": "VariableDeclaration",
														"scope": 1327,
														"src": "9836:18:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Reserve_$658_memory_ptr",
															"typeString": "struct SimpleSwap.Reserve"
														},
														"typeName": {
															"id": 1305,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1304,
																"name": "Reserve",
																"nameLocations": [
																	"9836:7:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 658,
																"src": "9836:7:6"
															},
															"referencedDeclaration": 658,
															"src": "9836:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Reserve_$658_storage_ptr",
																"typeString": "struct SimpleSwap.Reserve"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1310,
												"initialValue": {
													"baseExpression": {
														"id": 1307,
														"name": "reserves",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 664,
														"src": "9857:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Reserve_$658_storage_$",
															"typeString": "mapping(bytes32 => struct SimpleSwap.Reserve storage ref)"
														}
													},
													"id": 1309,
													"indexExpression": {
														"id": 1308,
														"name": "pairHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1298,
														"src": "9866:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9857:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Reserve_$658_storage",
														"typeString": "struct SimpleSwap.Reserve storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9836:39:6"
											},
											{
												"assignments": [
													1312,
													1314
												],
												"declarations": [
													{
														"constant": false,
														"id": 1312,
														"mutability": "mutable",
														"name": "reserveIn",
														"nameLocation": "9891:9:6",
														"nodeType": "VariableDeclaration",
														"scope": 1327,
														"src": "9886:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1311,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "9886:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1314,
														"mutability": "mutable",
														"name": "reserveOut",
														"nameLocation": "9907:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1327,
														"src": "9902:15:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1313,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "9902:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1320,
												"initialValue": {
													"arguments": [
														{
															"id": 1316,
															"name": "tokenIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1290,
															"src": "9940:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1317,
															"name": "tokenOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1292,
															"src": "9949:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1318,
															"name": "res",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1306,
															"src": "9959:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Reserve_$658_memory_ptr",
																"typeString": "struct SimpleSwap.Reserve memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_struct$_Reserve_$658_memory_ptr",
																"typeString": "struct SimpleSwap.Reserve memory"
															}
														],
														"id": 1315,
														"name": "_getSortedReserves",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1493,
														"src": "9921:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_struct$_Reserve_$658_memory_ptr_$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function (address,address,struct SimpleSwap.Reserve memory) pure returns (uint256,uint256)"
														}
													},
													"id": 1319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9921:42:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9885:78:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1322,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1288,
															"src": "9993:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1323,
															"name": "reserveIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1312,
															"src": "10003:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1324,
															"name": "reserveOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1314,
															"src": "10014:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1321,
														"name": "getAmountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1099,
														"src": "9980:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9980:45:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1296,
												"id": 1326,
												"nodeType": "Return",
												"src": "9973:52:6"
											}
										]
									},
									"documentation": {
										"id": 1286,
										"nodeType": "StructuredDocumentation",
										"src": "9603:49:6",
										"text": "@dev Internal helper to calculate swap output"
									},
									"id": 1328,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_calculateSwapOutput",
									"nameLocation": "9666:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1288,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "9692:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1328,
												"src": "9687:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1287,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9687:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1290,
												"mutability": "mutable",
												"name": "tokenIn",
												"nameLocation": "9710:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1328,
												"src": "9702:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1289,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9702:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1292,
												"mutability": "mutable",
												"name": "tokenOut",
												"nameLocation": "9727:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1328,
												"src": "9719:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9686:50:6"
									},
									"returnParameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1328,
												"src": "9760:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1294,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9760:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9759:6:6"
									},
									"scope": 1494,
									"src": "9657:375:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1363,
										"nodeType": "Block",
										"src": "10223:140:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1346,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10266:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1347,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10270:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10266:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1350,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "10286:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SimpleSwap_$1494",
																		"typeString": "contract SimpleSwap"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SimpleSwap_$1494",
																		"typeString": "contract SimpleSwap"
																	}
																],
																"id": 1349,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10278:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1348,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10278:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10278:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1352,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1335,
															"src": "10293:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1343,
																	"name": "tokenIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1331,
																	"src": "10240:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1342,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 167,
																"src": "10233:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$167_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1344,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10233:15:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														"id": 1345,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10249:16:6",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 239,
														"src": "10233:32:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$167_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10233:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1354,
												"nodeType": "ExpressionStatement",
												"src": "10233:69:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1359,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1339,
															"src": "10342:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1360,
															"name": "amountOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1337,
															"src": "10346:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1356,
																	"name": "tokenOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1333,
																	"src": "10319:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1355,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 167,
																"src": "10312:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$167_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1357,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10312:16:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														"id": 1358,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10329:12:6",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 212,
														"src": "10312:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$167_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10312:44:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1362,
												"nodeType": "ExpressionStatement",
												"src": "10312:44:6"
											}
										]
									},
									"documentation": {
										"id": 1329,
										"nodeType": "StructuredDocumentation",
										"src": "10038:62:6",
										"text": "@dev Internal helper to perform token transfers for a swap"
									},
									"id": 1364,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_performSwapTransfers",
									"nameLocation": "10114:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1331,
												"mutability": "mutable",
												"name": "tokenIn",
												"nameLocation": "10144:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "10136:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10136:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1333,
												"mutability": "mutable",
												"name": "tokenOut",
												"nameLocation": "10161:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "10153:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10153:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1335,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "10176:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "10171:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1334,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10171:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "10191:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "10186:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1336,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10186:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1339,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10210:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "10202:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10202:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10135:78:6"
									},
									"returnParameters": {
										"id": 1341,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10223:0:6"
									},
									"scope": 1494,
									"src": "10105:258:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1432,
										"nodeType": "Block",
										"src": "10539:368:6",
										"statements": [
											{
												"assignments": [
													1377
												],
												"declarations": [
													{
														"constant": false,
														"id": 1377,
														"mutability": "mutable",
														"name": "pairHash",
														"nameLocation": "10557:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 1432,
														"src": "10549:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1376,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "10549:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1382,
												"initialValue": {
													"arguments": [
														{
															"id": 1379,
															"name": "tokenIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1367,
															"src": "10581:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1380,
															"name": "tokenOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1369,
															"src": "10590:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1378,
														"name": "_getPairHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1462,
														"src": "10568:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$returns$_t_bytes32_$",
															"typeString": "function (address,address) pure returns (bytes32)"
														}
													},
													"id": 1381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10568:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10549:50:6"
											},
											{
												"assignments": [
													1385
												],
												"declarations": [
													{
														"constant": false,
														"id": 1385,
														"mutability": "mutable",
														"name": "res",
														"nameLocation": "10625:3:6",
														"nodeType": "VariableDeclaration",
														"scope": 1432,
														"src": "10609:19:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Reserve_$658_storage_ptr",
															"typeString": "struct SimpleSwap.Reserve"
														},
														"typeName": {
															"id": 1384,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1383,
																"name": "Reserve",
																"nameLocations": [
																	"10609:7:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 658,
																"src": "10609:7:6"
															},
															"referencedDeclaration": 658,
															"src": "10609:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Reserve_$658_storage_ptr",
																"typeString": "struct SimpleSwap.Reserve"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1389,
												"initialValue": {
													"baseExpression": {
														"id": 1386,
														"name": "reserves",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 664,
														"src": "10631:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Reserve_$658_storage_$",
															"typeString": "mapping(bytes32 => struct SimpleSwap.Reserve storage ref)"
														}
													},
													"id": 1388,
													"indexExpression": {
														"id": 1387,
														"name": "pairHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1377,
														"src": "10640:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10631:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Reserve_$658_storage",
														"typeString": "struct SimpleSwap.Reserve storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10609:40:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1390,
														"name": "tokenIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1367,
														"src": "10663:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1391,
														"name": "tokenOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1369,
														"src": "10673:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10663:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1430,
													"nodeType": "Block",
													"src": "10795:106:6",
													"statements": [
														{
															"expression": {
																"id": 1419,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1412,
																		"name": "res",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1385,
																		"src": "10809:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Reserve_$658_storage_ptr",
																			"typeString": "struct SimpleSwap.Reserve storage pointer"
																		}
																	},
																	"id": 1414,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "10813:8:6",
																	"memberName": "reserveB",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 657,
																	"src": "10809:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1417,
																			"name": "amountIn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1371,
																			"src": "10833:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1416,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10825:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint112_$",
																			"typeString": "type(uint112)"
																		},
																		"typeName": {
																			"id": 1415,
																			"name": "uint112",
																			"nodeType": "ElementaryTypeName",
																			"src": "10825:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1418,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10825:17:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																},
																"src": "10809:33:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint112",
																	"typeString": "uint112"
																}
															},
															"id": 1420,
															"nodeType": "ExpressionStatement",
															"src": "10809:33:6"
														},
														{
															"expression": {
																"id": 1428,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1421,
																		"name": "res",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1385,
																		"src": "10856:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Reserve_$658_storage_ptr",
																			"typeString": "struct SimpleSwap.Reserve storage pointer"
																		}
																	},
																	"id": 1423,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "10860:8:6",
																	"memberName": "reserveA",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 655,
																	"src": "10856:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1426,
																			"name": "amountOut",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1373,
																			"src": "10880:9:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10872:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint112_$",
																			"typeString": "type(uint112)"
																		},
																		"typeName": {
																			"id": 1424,
																			"name": "uint112",
																			"nodeType": "ElementaryTypeName",
																			"src": "10872:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1427,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10872:18:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																},
																"src": "10856:34:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint112",
																	"typeString": "uint112"
																}
															},
															"id": 1429,
															"nodeType": "ExpressionStatement",
															"src": "10856:34:6"
														}
													]
												},
												"id": 1431,
												"nodeType": "IfStatement",
												"src": "10659:242:6",
												"trueBody": {
													"id": 1411,
													"nodeType": "Block",
													"src": "10683:106:6",
													"statements": [
														{
															"expression": {
																"id": 1400,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1393,
																		"name": "res",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1385,
																		"src": "10697:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Reserve_$658_storage_ptr",
																			"typeString": "struct SimpleSwap.Reserve storage pointer"
																		}
																	},
																	"id": 1395,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "10701:8:6",
																	"memberName": "reserveA",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 655,
																	"src": "10697:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1398,
																			"name": "amountIn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1371,
																			"src": "10721:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1397,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10713:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint112_$",
																			"typeString": "type(uint112)"
																		},
																		"typeName": {
																			"id": 1396,
																			"name": "uint112",
																			"nodeType": "ElementaryTypeName",
																			"src": "10713:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1399,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10713:17:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																},
																"src": "10697:33:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint112",
																	"typeString": "uint112"
																}
															},
															"id": 1401,
															"nodeType": "ExpressionStatement",
															"src": "10697:33:6"
														},
														{
															"expression": {
																"id": 1409,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1402,
																		"name": "res",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1385,
																		"src": "10744:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Reserve_$658_storage_ptr",
																			"typeString": "struct SimpleSwap.Reserve storage pointer"
																		}
																	},
																	"id": 1404,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "10748:8:6",
																	"memberName": "reserveB",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 657,
																	"src": "10744:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1407,
																			"name": "amountOut",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1373,
																			"src": "10768:9:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1406,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10760:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint112_$",
																			"typeString": "type(uint112)"
																		},
																		"typeName": {
																			"id": 1405,
																			"name": "uint112",
																			"nodeType": "ElementaryTypeName",
																			"src": "10760:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1408,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10760:18:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																},
																"src": "10744:34:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint112",
																	"typeString": "uint112"
																}
															},
															"id": 1410,
															"nodeType": "ExpressionStatement",
															"src": "10744:34:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1365,
										"nodeType": "StructuredDocumentation",
										"src": "10369:56:6",
										"text": "@dev Internal helper to update reserves after a swap"
									},
									"id": 1433,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updateReservesAfterSwap",
									"nameLocation": "10439:24:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1367,
												"mutability": "mutable",
												"name": "tokenIn",
												"nameLocation": "10472:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "10464:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10464:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1369,
												"mutability": "mutable",
												"name": "tokenOut",
												"nameLocation": "10489:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "10481:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10481:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "10504:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "10499:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1370,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10499:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1373,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "10519:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "10514:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1372,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10514:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10463:66:6"
									},
									"returnParameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10539:0:6"
									},
									"scope": 1494,
									"src": "10430:477:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1461,
										"nodeType": "Block",
										"src": "11063:121:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1448,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1446,
																			"name": "tokenA",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1436,
																			"src": "11107:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 1447,
																			"name": "tokenB",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1438,
																			"src": "11116:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "11107:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 1450,
																		"name": "tokenB",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1438,
																		"src": "11134:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 1451,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "11107:33:6",
																	"trueExpression": {
																		"id": 1449,
																		"name": "tokenA",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1436,
																		"src": "11125:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1454,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1452,
																			"name": "tokenA",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1436,
																			"src": "11142:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 1453,
																			"name": "tokenB",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1438,
																			"src": "11151:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "11142:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 1456,
																		"name": "tokenA",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1436,
																		"src": "11169:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 1457,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "11142:33:6",
																	"trueExpression": {
																		"id": 1455,
																		"name": "tokenB",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1438,
																		"src": "11160:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1444,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "11090:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1445,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "11094:12:6",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "11090:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1458,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11090:86:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1443,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "11080:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11080:97:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1442,
												"id": 1460,
												"nodeType": "Return",
												"src": "11073:104:6"
											}
										]
									},
									"documentation": {
										"id": 1434,
										"nodeType": "StructuredDocumentation",
										"src": "10913:59:6",
										"text": "@dev Generates a unique hash for a token pair (ordered)"
									},
									"id": 1462,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getPairHash",
									"nameLocation": "10986:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "11007:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1462,
												"src": "10999:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10999:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1438,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "11023:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1462,
												"src": "11015:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11015:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10998:32:6"
									},
									"returnParameters": {
										"id": 1442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1441,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1462,
												"src": "11054:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1440,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "11054:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11053:9:6"
									},
									"scope": 1494,
									"src": "10977:207:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1492,
										"nodeType": "Block",
										"src": "11366:101:6",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1479,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1477,
															"name": "tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1465,
															"src": "11383:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1478,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1467,
															"src": "11392:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "11383:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"components": [
															{
																"expression": {
																	"id": 1485,
																	"name": "res",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1470,
																	"src": "11433:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Reserve_$658_memory_ptr",
																		"typeString": "struct SimpleSwap.Reserve memory"
																	}
																},
																"id": 1486,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11437:8:6",
																"memberName": "reserveB",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 657,
																"src": "11433:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint112",
																	"typeString": "uint112"
																}
															},
															{
																"expression": {
																	"id": 1487,
																	"name": "res",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1470,
																	"src": "11447:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Reserve_$658_memory_ptr",
																		"typeString": "struct SimpleSwap.Reserve memory"
																	}
																},
																"id": 1488,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11451:8:6",
																"memberName": "reserveA",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 655,
																"src": "11447:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint112",
																	"typeString": "uint112"
																}
															}
														],
														"id": 1489,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "11432:28:6",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$",
															"typeString": "tuple(uint112,uint112)"
														}
													},
													"id": 1490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "11383:77:6",
													"trueExpression": {
														"components": [
															{
																"expression": {
																	"id": 1480,
																	"name": "res",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1470,
																	"src": "11402:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Reserve_$658_memory_ptr",
																		"typeString": "struct SimpleSwap.Reserve memory"
																	}
																},
																"id": 1481,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11406:8:6",
																"memberName": "reserveA",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 655,
																"src": "11402:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint112",
																	"typeString": "uint112"
																}
															},
															{
																"expression": {
																	"id": 1482,
																	"name": "res",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1470,
																	"src": "11416:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Reserve_$658_memory_ptr",
																		"typeString": "struct SimpleSwap.Reserve memory"
																	}
																},
																"id": 1483,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11420:8:6",
																"memberName": "reserveB",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 657,
																"src": "11416:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint112",
																	"typeString": "uint112"
																}
															}
														],
														"id": 1484,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "11401:28:6",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$",
															"typeString": "tuple(uint112,uint112)"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$",
														"typeString": "tuple(uint112,uint112)"
													}
												},
												"functionReturnParameters": 1476,
												"id": 1491,
												"nodeType": "Return",
												"src": "11376:84:6"
											}
										]
									},
									"documentation": {
										"id": 1463,
										"nodeType": "StructuredDocumentation",
										"src": "11190:56:6",
										"text": "@dev Sorts and returns reserves based on token order"
									},
									"id": 1493,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getSortedReserves",
									"nameLocation": "11260:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1465,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "11287:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "11279:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11279:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1467,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "11303:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "11295:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11295:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "res",
												"nameLocation": "11326:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "11311:18:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Reserve_$658_memory_ptr",
													"typeString": "struct SimpleSwap.Reserve"
												},
												"typeName": {
													"id": 1469,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1468,
														"name": "Reserve",
														"nameLocations": [
															"11311:7:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 658,
														"src": "11311:7:6"
													},
													"referencedDeclaration": 658,
													"src": "11311:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Reserve_$658_storage_ptr",
														"typeString": "struct SimpleSwap.Reserve"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11278:52:6"
									},
									"returnParameters": {
										"id": 1476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1473,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "11354:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1472,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11354:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1475,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "11360:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1474,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11360:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11353:12:6"
									},
									"scope": 1494,
									"src": "11251:216:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1495,
							"src": "544:10925:6",
							"usedErrors": [
								179
							],
							"usedEvents": []
						}
					],
					"src": "38:11431:6"
				},
				"id": 6
			}
		}
	}
}