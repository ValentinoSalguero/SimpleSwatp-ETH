{
	"id": "70a714890713c54eeb48ae407484af71",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/1_Storage.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.8.2 <0.9.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\n/// @custom:dev-run-script ./scripts/deploy_with_ethers.ts\n/// @title SimpleSwap - A minimal Uniswap-like DEX for ERC-20 tokens\n/// @author Valentino Salguero\n/// @notice This contract allows users to add/remove liquidity, swap tokens, fetch price and calculate output amounts.\n/// @dev Inspired by Uniswap, but simplified for educational purposes.\ncontract SimpleSwap {\n    using SafeERC20 for IERC20;\n\n    /// @dev Stores the reserves of two tokens in a pair\n    struct Reserve {\n        uint112 reserveA;\n        uint112 reserveB;\n    }\n\n    /// @dev Maps the hash of a token pair to its reserve data\n    mapping(bytes32 => Reserve) public reserves;\n\n    /// @dev Maps the pair hash to the total liquidity of the pool\n    mapping(bytes32 => uint) public totalLiquidity;\n\n    /// @dev Tracks each user's liquidity share in a given pair\n    mapping(bytes32 => mapping(address => uint)) public liquidityBalance;\n\n    /// @notice Adds liquidity to a token pair pool\n    /// @param tokenA Address of token A\n    /// @param tokenB Address of token B\n    /// @param amountADesired Desired amount of token A to add\n    /// @param amountBDesired Desired amount of token B to add\n    /// @param amountAMin Minimum acceptable amount of token A\n    /// @param amountBMin Minimum acceptable amount of token B\n    /// @param to Recipient of the liquidity tokens\n    /// @param deadline Timestamp after which the transaction is invalid\n    /// @return amountA Actual amount of token A added\n    /// @return amountB Actual amount of token B added\n    /// @return liquidity Amount of liquidity tokens minted\n    function addLiquidity(\n        address tokenA,\n        address tokenB,\n        uint amountADesired,\n        uint amountBDesired,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountA, uint amountB, uint liquidity) {\n        require(block.timestamp <= deadline, \"Expired\");\n\n        bytes32 pairHash = _getPairHash(tokenA, tokenB);\n        Reserve storage res = reserves[pairHash]; // Get storage reference here for the original function call\n\n        // Determine how much of each token to add based on existing reserves\n        (amountA, amountB) = _calculateLiquidityAmounts(\n            res.reserveA,\n            res.reserveB,\n            amountADesired,\n            amountBDesired,\n            amountAMin,\n            amountBMin\n        );\n\n        // Perform token transfers\n        _performAddLiquidityTransfers(tokenA, tokenB, amountA, amountB);\n\n        // Mint liquidity and update reserves\n        // Pass 'res' directly to avoid re-fetching storage, improving efficiency\n        liquidity = _mintLiquidityAndUpdateReserves(pairHash, amountA, amountB, to, res);\n    }\n\n    /// @notice Removes liquidity and returns tokens to the user\n    /// @param tokenA Address of token A\n    /// @param tokenB Address of token B\n    /// @param liquidity Amount of liquidity tokens to burn\n    /// @param amountAMin Minimum acceptable amount of token A\n    /// @param amountBMin Minimum acceptable amount of token B\n    /// @param to Address to receive withdrawn tokens\n    /// @param deadline Timestamp after which the transaction is invalid\n    /// @return amountA Amount of token A received\n    /// @return amountB Amount of token B received\n    function removeLiquidity(\n        address tokenA,\n        address tokenB,\n        uint liquidity,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountA, uint amountB) {\n        require(block.timestamp <= deadline, \"Expired\");\n\n        bytes32 pairHash = _getPairHash(tokenA, tokenB);\n        Reserve storage res = reserves[pairHash];\n        uint total = totalLiquidity[pairHash];\n        require(total > 0, \"No liquidity\");\n\n        // Calculate user's share of the pool\n        amountA = res.reserveA * liquidity / total;\n        amountB = res.reserveB * liquidity / total;\n\n        require(amountA >= amountAMin && amountB >= amountBMin, \"Slippage\");\n\n        // Burn liquidity and update storage\n        liquidityBalance[pairHash][msg.sender] -= liquidity;\n        totalLiquidity[pairHash] -= liquidity;\n        res.reserveA -= uint112(amountA);\n        res.reserveB -= uint112(amountB);\n\n        // Send tokens back to user\n        IERC20(tokenA).safeTransfer(to, amountA);\n        IERC20(tokenB).safeTransfer(to, amountB);\n    }\n\n    /// @notice Swaps exact amountIn of tokenIn for tokenOut\n    /// @param amountIn Exact amount of input tokens to swap\n    /// @param amountOutMin Minimum amount of output tokens required\n    /// @param path Array with [tokenIn, tokenOut]\n    /// @param to Address to receive output tokens\n    /// @param deadline Timestamp after which the transaction is invalid\n    /// @return amounts Array containing input and output amounts\n    function swapExactTokensForTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external returns (uint[] memory amounts) {\n        require(block.timestamp <= deadline, \"Expired\");\n        require(path.length == 2, \"Only 2-token path supported\");\n\n        address tokenIn = path[0];\n        address tokenOut = path[1];\n\n        // Calculate the output amount\n        uint amountOut = _calculateSwapOutput(amountIn, tokenIn, tokenOut);\n        require(amountOut >= amountOutMin, \"Insufficient output\");\n\n        // Perform token transfer\n        _performSwapTransfers(tokenIn, tokenOut, amountIn, amountOut, to);\n\n        // Update reserves\n        _updateReservesAfterSwap(tokenIn, tokenOut, amountIn, amountOut);\n\n        // Return input/output info\n        amounts = new uint[](2);\n        amounts[0] = amountIn;\n        amounts[1] = amountOut;\n    }\n\n    /// @notice Returns the price of tokenB in terms of tokenA\n    /// @param tokenA Address of token A\n    /// @param tokenB Address of token B\n    /// @return price Price as tokenB/tokenA scaled by 1e18\n    function getPrice(address tokenA, address tokenB) external view returns (uint price) {\n        bytes32 pairHash = _getPairHash(tokenA, tokenB);\n        Reserve memory res = reserves[pairHash];\n\n        (uint reserveA, uint reserveB) = _getSortedReserves(tokenA, tokenB, res);\n        require(reserveA > 0 && reserveB > 0, \"No reserves\");\n        price = (reserveB * 1e18) / reserveA;\n    }\n\n    /// @notice Calculates output tokens for a given input using Uniswap formula\n    /// @param amountIn Input amount\n    /// @param reserveIn Reserve of input token\n    /// @param reserveOut Reserve of output token\n    /// @return amountOut Amount of output tokens after fee\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) public pure returns (uint amountOut) {\n        require(amountIn > 0 && reserveIn > 0 && reserveOut > 0, \"Invalid reserves\");\n\n        uint amountInWithFee = amountIn * 997; // 0.3% fee\n        uint numerator = amountInWithFee * reserveOut;\n        uint denominator = reserveIn * 1000 + amountInWithFee;\n        amountOut = numerator / denominator;\n    }\n\n    // --- New Internal Helper Functions for addLiquidity ---\n\n    /// @dev Calculates the optimal amounts of tokens to add for liquidity.\n    function _calculateLiquidityAmounts(\n        uint112 currentReserveA,\n        uint112 currentReserveB,\n        uint amountADesired,\n        uint amountBDesired,\n        uint amountAMin,\n        uint amountBMin\n    ) internal pure returns (uint calculatedAmountA, uint calculatedAmountB) {\n        if (currentReserveA == 0 && currentReserveB == 0) {\n            // No liquidity yet; use desired amounts\n            (calculatedAmountA, calculatedAmountB) = (amountADesired, amountBDesired);\n        } else {\n            // Maintain ratio between reserves\n            uint amountBOptimal = amountADesired * currentReserveB / currentReserveA;\n            if (amountBOptimal <= amountBDesired) {\n                require(amountBOptimal >= amountBMin, \"Insufficient B\");\n                (calculatedAmountA, calculatedAmountB) = (amountADesired, amountBOptimal);\n            } else {\n                uint amountAOptimal = amountBDesired * currentReserveA / currentReserveB;\n                require(amountAOptimal >= amountAMin, \"Insufficient A\");\n                (calculatedAmountA, calculatedAmountB) = (amountAOptimal, amountBDesired);\n            }\n        }\n    }\n\n    /// @dev Handles the token transfers for adding liquidity.\n    function _performAddLiquidityTransfers(\n        address tokenA,\n        address tokenB,\n        uint amountA,\n        uint amountB\n    ) internal {\n        IERC20(tokenA).safeTransferFrom(msg.sender, address(this), amountA);\n        IERC20(tokenB).safeTransferFrom(msg.sender, address(this), amountB);\n    }\n\n    /// @dev Mints liquidity tokens and updates pool reserves.\n    function _mintLiquidityAndUpdateReserves(\n        bytes32 pairHash,\n        uint amountA,\n        uint amountB,\n        address to,\n        Reserve storage res // Pass the storage reference directly\n    ) internal returns (uint liquidity) {\n        liquidity = amountA + amountB;\n        totalLiquidity[pairHash] += liquidity;\n        liquidityBalance[pairHash][to] += liquidity;\n\n        res.reserveA += uint112(amountA);\n        res.reserveB += uint112(amountB);\n    }\n\n    // --- Existing Internal Helper Functions for Swapping & Utilities ---\n\n    /// @dev Internal helper to calculate swap output\n    function _calculateSwapOutput(uint amountIn, address tokenIn, address tokenOut) internal view returns (uint) {\n        bytes32 pairHash = _getPairHash(tokenIn, tokenOut);\n        Reserve memory res = reserves[pairHash];\n        (uint reserveIn, uint reserveOut) = _getSortedReserves(tokenIn, tokenOut, res);\n        return getAmountOut(amountIn, reserveIn, reserveOut);\n    }\n\n    /// @dev Internal helper to perform token transfers for a swap\n    function _performSwapTransfers(address tokenIn, address tokenOut, uint amountIn, uint amountOut, address to) internal {\n        IERC20(tokenIn).safeTransferFrom(msg.sender, address(this), amountIn);\n        IERC20(tokenOut).safeTransfer(to, amountOut);\n    }\n\n    /// @dev Internal helper to update reserves after a swap\n    function _updateReservesAfterSwap(address tokenIn, address tokenOut, uint amountIn, uint amountOut) internal {\n        bytes32 pairHash = _getPairHash(tokenIn, tokenOut);\n        Reserve storage res = reserves[pairHash];\n        if (tokenIn < tokenOut) {\n            res.reserveA += uint112(amountIn);\n            res.reserveB -= uint112(amountOut);\n        } else {\n            res.reserveB += uint112(amountIn);\n            res.reserveA -= uint112(amountOut);\n        }\n    }\n\n    /// @dev Generates a unique hash for a token pair (ordered)\n    function _getPairHash(address tokenA, address tokenB) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(tokenA < tokenB ? tokenA : tokenB, tokenA < tokenB ? tokenB : tokenA));\n    }\n\n    /// @dev Sorts and returns reserves based on token order\n    function _getSortedReserves(address tokenA, address tokenB, Reserve memory res) internal pure returns (uint, uint) {\n        return tokenA < tokenB ? (res.reserveA, res.reserveB) : (res.reserveB, res.reserveA);\n    }\n}"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212204bf8158af3d7c8d7ab245c9b0ba1283d2ba519cf21a5f114d82ca2474455a98464736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212204bf8158af3d7c8d7ab245c9b0ba1283d2ba519cf21a5f114d82ca2474455a98464736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B EXTCALL ISZERO DUP11 RETURN 0xD7 0xC8 0xD7 0xAB 0x24 TLOAD SWAP12 SIGNEXTEND LOG1 0x28 RETURNDATASIZE 0x2B 0xA5 NOT 0xCF 0x21 0xA5 CALL EQ 0xD8 0x2C LOG2 SELFBALANCE PREVRANDAO SSTORE 0xA9 DUP5 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "698:9376:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;698:9376:4;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212204bf8158af3d7c8d7ab245c9b0ba1283d2ba519cf21a5f114d82ca2474455a98464736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B EXTCALL ISZERO DUP11 RETURN 0xD7 0xC8 0xD7 0xAB 0x24 TLOAD SWAP12 SIGNEXTEND LOG1 0x28 RETURNDATASIZE 0x2B 0xA5 NOT 0xCF 0x21 0xA5 CALL EQ 0xD8 0x2C LOG2 SELFBALANCE PREVRANDAO SSTORE 0xA9 DUP5 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "698:9376:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite",
								"trySafeTransfer(contract IERC20,address,uint256)": "infinite",
								"trySafeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204bf8158af3d7c8d7ab245c9b0ba1283d2ba519cf21a5f114d82ca2474455a98464736f6c634300081e0033",
									".code": [
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/1_Storage.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/1_Storage.sol": {
				"SimpleSwap": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "getPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "liquidityBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"name": "reserves",
							"outputs": [
								{
									"internalType": "uint112",
									"name": "reserveA",
									"type": "uint112"
								},
								{
									"internalType": "uint112",
									"name": "reserveB",
									"type": "uint112"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"name": "totalLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Valentino Salguero",
						"custom:dev-run-script": "./scripts/deploy_with_ethers.ts",
						"details": "Inspired by Uniswap, but simplified for educational purposes.",
						"errors": {
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": {
								"params": {
									"amountADesired": "Desired amount of token A to add",
									"amountAMin": "Minimum acceptable amount of token A",
									"amountBDesired": "Desired amount of token B to add",
									"amountBMin": "Minimum acceptable amount of token B",
									"deadline": "Timestamp after which the transaction is invalid",
									"to": "Recipient of the liquidity tokens",
									"tokenA": "Address of token A",
									"tokenB": "Address of token B"
								},
								"returns": {
									"amountA": "Actual amount of token A added",
									"amountB": "Actual amount of token B added",
									"liquidity": "Amount of liquidity tokens minted"
								}
							},
							"getAmountOut(uint256,uint256,uint256)": {
								"params": {
									"amountIn": "Input amount",
									"reserveIn": "Reserve of input token",
									"reserveOut": "Reserve of output token"
								},
								"returns": {
									"amountOut": "Amount of output tokens after fee"
								}
							},
							"getPrice(address,address)": {
								"params": {
									"tokenA": "Address of token A",
									"tokenB": "Address of token B"
								},
								"returns": {
									"price": "Price as tokenB/tokenA scaled by 1e18"
								}
							},
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": {
								"params": {
									"amountAMin": "Minimum acceptable amount of token A",
									"amountBMin": "Minimum acceptable amount of token B",
									"deadline": "Timestamp after which the transaction is invalid",
									"liquidity": "Amount of liquidity tokens to burn",
									"to": "Address to receive withdrawn tokens",
									"tokenA": "Address of token A",
									"tokenB": "Address of token B"
								},
								"returns": {
									"amountA": "Amount of token A received",
									"amountB": "Amount of token B received"
								}
							},
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": {
								"params": {
									"amountIn": "Exact amount of input tokens to swap",
									"amountOutMin": "Minimum amount of output tokens required",
									"deadline": "Timestamp after which the transaction is invalid",
									"path": "Array with [tokenIn, tokenOut]",
									"to": "Address to receive output tokens"
								},
								"returns": {
									"amounts": "Array containing input and output amounts"
								}
							}
						},
						"stateVariables": {
							"liquidityBalance": {
								"details": "Tracks each user's liquidity share in a given pair"
							},
							"reserves": {
								"details": "Maps the hash of a token pair to its reserve data"
							},
							"totalLiquidity": {
								"details": "Maps the pair hash to the total liquidity of the pool"
							}
						},
						"title": "SimpleSwap - A minimal Uniswap-like DEX for ERC-20 tokens",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/1_Storage.sol\":543:11468  contract SimpleSwap {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/1_Storage.sol\":543:11468  contract SimpleSwap {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xac41865a\n      gt\n      tag_11\n      jumpi\n      dup1\n      0xac41865a\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xbaa2abde\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xbb521a30\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xe8e33700\n      eq\n      tag_10\n      jumpi\n      revert(0x00, 0x00)\n    tag_11:\n      dup1\n      0xbbf1e4\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x054d50d4\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x38ed1739\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x54b7a8f7\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/1_Storage.sol\":802:845  mapping(bytes32 => Reserve) public reserves */\n    tag_3:\n      tag_12\n      tag_13\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_13:\n      0x00\n      0x20\n      dup2\n      swap1\n      mstore\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0x70, 0x01), 0x01)\n      dup1\n      dup3\n      and\n      swap2\n      shl(0x70, 0x01)\n      swap1\n      div\n      and\n      dup3\n      jump\n    tag_12:\n      0x40\n      dup1\n      mload\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"#utility.yul\":437:480   */\n      swap4\n      dup5\n      and\n        /* \"#utility.yul\":419:481   */\n      dup2\n      mstore\n        /* \"#utility.yul\":517:560   */\n      swap3\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":512:514   */\n      0x20\n        /* \"#utility.yul\":497:515   */\n      dup4\n      add\n        /* \"#utility.yul\":490:561   */\n      mstore\n        /* \"#utility.yul\":392:410   */\n      add\n        /* \"contracts/1_Storage.sol\":802:845  mapping(bytes32 => Reserve) public reserves */\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/1_Storage.sol\":6878:7301  function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) public pure returns (uint amountOut) {... */\n    tag_4:\n      tag_18\n      tag_19\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n        /* \"#utility.yul\":1189:1214   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1177:1179   */\n      0x20\n        /* \"#utility.yul\":1162:1180   */\n      add\n        /* \"contracts/1_Storage.sol\":6878:7301  function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) public pure returns (uint amountOut) {... */\n      tag_16\n        /* \"#utility.yul\":1043:1220   */\n      jump\n        /* \"contracts/1_Storage.sol\":5059:5996  function swapExactTokensForTokens(... */\n    tag_5:\n      tag_24\n      tag_25\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n        /* \"contracts/1_Storage.sol\":919:965  mapping(bytes32 => uint) public totalLiquidity */\n    tag_6:\n      tag_18\n      tag_31\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_31:\n      mstore(0x20, 0x01)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"contracts/1_Storage.sol\":6207:6596  function getPrice(address tokenA, address tokenB) external view returns (uint price) {... */\n    tag_7:\n      tag_18\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n        /* \"contracts/1_Storage.sol\":3512:4621  function removeLiquidity(... */\n    tag_8:\n      tag_39\n      tag_40\n      calldatasize\n      0x04\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":4320:4345   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":4376:4378   */\n      0x20\n        /* \"#utility.yul\":4361:4379   */\n      dup4\n      add\n        /* \"#utility.yul\":4354:4388   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":4293:4311   */\n      add\n        /* \"contracts/1_Storage.sol\":3512:4621  function removeLiquidity(... */\n      tag_16\n        /* \"#utility.yul\":4146:4394   */\n      jump\n        /* \"contracts/1_Storage.sol\":1036:1104  mapping(bytes32 => mapping(address => uint)) public liquidityBalance */\n    tag_9:\n      tag_18\n      tag_46\n      calldatasize\n      0x04\n      tag_47\n      jump\t// in\n    tag_46:\n      0x02\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"contracts/1_Storage.sol\":1792:2944  function addLiquidity(... */\n    tag_10:\n      tag_50\n      tag_51\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n    tag_50:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":5844:5869   */\n      swap4\n      dup5\n      mstore\n        /* \"#utility.yul\":5900:5902   */\n      0x20\n        /* \"#utility.yul\":5885:5903   */\n      dup5\n      add\n        /* \"#utility.yul\":5878:5912   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":5928:5946   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":5921:5955   */\n      mstore\n        /* \"#utility.yul\":5832:5834   */\n      0x60\n        /* \"#utility.yul\":5817:5835   */\n      add\n        /* \"contracts/1_Storage.sol\":1792:2944  function addLiquidity(... */\n      tag_16\n        /* \"#utility.yul\":5642:5961   */\n      jump\n        /* \"contracts/1_Storage.sol\":6878:7301  function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) public pure returns (uint amountOut) {... */\n    tag_21:\n        /* \"contracts/1_Storage.sol\":6969:6983  uint amountOut */\n      0x00\n        /* \"contracts/1_Storage.sol\":7014:7015  0 */\n      0x00\n        /* \"contracts/1_Storage.sol\":7003:7011  amountIn */\n      dup5\n        /* \"contracts/1_Storage.sol\":7003:7015  amountIn > 0 */\n      gt\n        /* \"contracts/1_Storage.sol\":7003:7032  amountIn > 0 && reserveIn > 0 */\n      dup1\n      iszero\n      tag_57\n      jumpi\n      pop\n        /* \"contracts/1_Storage.sol\":7031:7032  0 */\n      0x00\n        /* \"contracts/1_Storage.sol\":7019:7028  reserveIn */\n      dup4\n        /* \"contracts/1_Storage.sol\":7019:7032  reserveIn > 0 */\n      gt\n        /* \"contracts/1_Storage.sol\":7003:7032  amountIn > 0 && reserveIn > 0 */\n    tag_57:\n        /* \"contracts/1_Storage.sol\":7003:7050  amountIn > 0 && reserveIn > 0 && reserveOut > 0 */\n      dup1\n      iszero\n      tag_58\n      jumpi\n      pop\n        /* \"contracts/1_Storage.sol\":7049:7050  0 */\n      0x00\n        /* \"contracts/1_Storage.sol\":7036:7046  reserveOut */\n      dup3\n        /* \"contracts/1_Storage.sol\":7036:7050  reserveOut > 0 */\n      gt\n        /* \"contracts/1_Storage.sol\":7003:7050  amountIn > 0 && reserveIn > 0 && reserveOut > 0 */\n    tag_58:\n        /* \"contracts/1_Storage.sol\":6995:7071  require(amountIn > 0 && reserveIn > 0 && reserveOut > 0, \"Invalid reserves\") */\n      tag_59\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6168:6170   */\n      0x20\n        /* \"contracts/1_Storage.sol\":6995:7071  require(amountIn > 0 && reserveIn > 0 && reserveOut > 0, \"Invalid reserves\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6150:6171   */\n      mstore\n        /* \"#utility.yul\":6207:6209   */\n      0x10\n        /* \"#utility.yul\":6187:6205   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6180:6210   */\n      mstore\n      shl(0x80, 0x496e76616c6964207265736572766573)\n        /* \"#utility.yul\":6226:6244   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6219:6265   */\n      mstore\n        /* \"#utility.yul\":6282:6300   */\n      0x64\n      add\n        /* \"contracts/1_Storage.sol\":6995:7071  require(amountIn > 0 && reserveIn > 0 && reserveOut > 0, \"Invalid reserves\") */\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_59:\n        /* \"contracts/1_Storage.sol\":7082:7102  uint amountInWithFee */\n      0x00\n        /* \"contracts/1_Storage.sol\":7105:7119  amountIn * 997 */\n      tag_62\n        /* \"contracts/1_Storage.sol\":7105:7113  amountIn */\n      dup6\n        /* \"contracts/1_Storage.sol\":7116:7119  997 */\n      0x03e5\n        /* \"contracts/1_Storage.sol\":7105:7119  amountIn * 997 */\n      tag_63\n      jump\t// in\n    tag_62:\n        /* \"contracts/1_Storage.sol\":7082:7119  uint amountInWithFee = amountIn * 997 */\n      swap1\n      pop\n        /* \"contracts/1_Storage.sol\":7141:7155  uint numerator */\n      0x00\n        /* \"contracts/1_Storage.sol\":7158:7186  amountInWithFee * reserveOut */\n      tag_64\n        /* \"contracts/1_Storage.sol\":7176:7186  reserveOut */\n      dup5\n        /* \"contracts/1_Storage.sol\":7082:7119  uint amountInWithFee = amountIn * 997 */\n      dup4\n        /* \"contracts/1_Storage.sol\":7158:7186  amountInWithFee * reserveOut */\n      tag_63\n      jump\t// in\n    tag_64:\n        /* \"contracts/1_Storage.sol\":7141:7186  uint numerator = amountInWithFee * reserveOut */\n      swap1\n      pop\n        /* \"contracts/1_Storage.sol\":7196:7212  uint denominator */\n      0x00\n        /* \"contracts/1_Storage.sol\":7234:7249  amountInWithFee */\n      dup3\n        /* \"contracts/1_Storage.sol\":7215:7231  reserveIn * 1000 */\n      tag_65\n        /* \"contracts/1_Storage.sol\":7215:7224  reserveIn */\n      dup8\n        /* \"contracts/1_Storage.sol\":7227:7231  1000 */\n      0x03e8\n        /* \"contracts/1_Storage.sol\":7215:7231  reserveIn * 1000 */\n      tag_63\n      jump\t// in\n    tag_65:\n        /* \"contracts/1_Storage.sol\":7215:7249  reserveIn * 1000 + amountInWithFee */\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n        /* \"contracts/1_Storage.sol\":7196:7249  uint denominator = reserveIn * 1000 + amountInWithFee */\n      swap1\n      pop\n        /* \"contracts/1_Storage.sol\":7271:7294  numerator / denominator */\n      tag_68\n        /* \"contracts/1_Storage.sol\":7196:7249  uint denominator = reserveIn * 1000 + amountInWithFee */\n      dup2\n        /* \"contracts/1_Storage.sol\":7271:7280  numerator */\n      dup4\n        /* \"contracts/1_Storage.sol\":7271:7294  numerator / denominator */\n      tag_69\n      jump\t// in\n    tag_68:\n        /* \"contracts/1_Storage.sol\":7259:7294  amountOut = numerator / denominator */\n      swap8\n        /* \"contracts/1_Storage.sol\":6878:7301  function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) public pure returns (uint amountOut) {... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/1_Storage.sol\":5059:5996  function swapExactTokensForTokens(... */\n    tag_27:\n        /* \"contracts/1_Storage.sol\":5243:5264  uint[] memory amounts */\n      0x60\n        /* \"contracts/1_Storage.sol\":5303:5311  deadline */\n      dup2\n        /* \"contracts/1_Storage.sol\":5284:5299  block.timestamp */\n      timestamp\n        /* \"contracts/1_Storage.sol\":5284:5311  block.timestamp <= deadline */\n      gt\n      iszero\n        /* \"contracts/1_Storage.sol\":5276:5323  require(block.timestamp <= deadline, \"Expired\") */\n      tag_71\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_60\n      swap1\n      tag_73\n      jump\t// in\n    tag_71:\n        /* \"contracts/1_Storage.sol\":5356:5357  2 */\n      0x02\n        /* \"contracts/1_Storage.sol\":5341:5357  path.length == 2 */\n      dup5\n      eq\n        /* \"contracts/1_Storage.sol\":5333:5389  require(path.length == 2, \"Only 2-token path supported\") */\n      tag_74\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7505:7507   */\n      0x20\n        /* \"contracts/1_Storage.sol\":5333:5389  require(path.length == 2, \"Only 2-token path supported\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7487:7508   */\n      mstore\n        /* \"#utility.yul\":7544:7546   */\n      0x1b\n        /* \"#utility.yul\":7524:7542   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7517:7547   */\n      mstore\n        /* \"#utility.yul\":7583:7612   */\n      0x4f6e6c7920322d746f6b656e207061746820737570706f727465640000000000\n        /* \"#utility.yul\":7563:7581   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7556:7613   */\n      mstore\n        /* \"#utility.yul\":7630:7648   */\n      0x64\n      add\n        /* \"contracts/1_Storage.sol\":5333:5389  require(path.length == 2, \"Only 2-token path supported\") */\n      tag_60\n        /* \"#utility.yul\":7303:7654   */\n      jump\n        /* \"contracts/1_Storage.sol\":5333:5389  require(path.length == 2, \"Only 2-token path supported\") */\n    tag_74:\n        /* \"contracts/1_Storage.sol\":5400:5415  address tokenIn */\n      0x00\n        /* \"contracts/1_Storage.sol\":5418:5422  path */\n      dup6\n      dup6\n        /* \"contracts/1_Storage.sol\":5423:5424  0 */\n      0x00\n        /* \"contracts/1_Storage.sol\":5418:5425  path[0] */\n      dup2\n      dup2\n      lt\n      tag_78\n      jumpi\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n        /* \"contracts/1_Storage.sol\":5400:5425  address tokenIn = path[0] */\n      swap1\n      pop\n        /* \"contracts/1_Storage.sol\":5435:5451  address tokenOut */\n      0x00\n        /* \"contracts/1_Storage.sol\":5454:5458  path */\n      dup7\n      dup7\n        /* \"contracts/1_Storage.sol\":5459:5460  1 */\n      0x01\n        /* \"contracts/1_Storage.sol\":5454:5461  path[1] */\n      dup2\n      dup2\n      lt\n      tag_83\n      jumpi\n      tag_83\n      tag_79\n      jump\t// in\n    tag_83:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_84:\n        /* \"contracts/1_Storage.sol\":5435:5461  address tokenOut = path[1] */\n      swap1\n      pop\n        /* \"contracts/1_Storage.sol\":5511:5525  uint amountOut */\n      0x00\n        /* \"contracts/1_Storage.sol\":5528:5577  _calculateSwapOutput(amountIn, tokenIn, tokenOut) */\n      tag_85\n        /* \"contracts/1_Storage.sol\":5549:5557  amountIn */\n      dup11\n        /* \"contracts/1_Storage.sol\":5559:5566  tokenIn */\n      dup5\n        /* \"contracts/1_Storage.sol\":5568:5576  tokenOut */\n      dup5\n        /* \"contracts/1_Storage.sol\":5528:5548  _calculateSwapOutput */\n      tag_86\n        /* \"contracts/1_Storage.sol\":5528:5577  _calculateSwapOutput(amountIn, tokenIn, tokenOut) */\n      jump\t// in\n    tag_85:\n        /* \"contracts/1_Storage.sol\":5511:5577  uint amountOut = _calculateSwapOutput(amountIn, tokenIn, tokenOut) */\n      swap1\n      pop\n        /* \"contracts/1_Storage.sol\":5608:5620  amountOutMin */\n      dup9\n        /* \"contracts/1_Storage.sol\":5595:5604  amountOut */\n      dup2\n        /* \"contracts/1_Storage.sol\":5595:5620  amountOut >= amountOutMin */\n      lt\n      iszero\n        /* \"contracts/1_Storage.sol\":5587:5644  require(amountOut >= amountOutMin, \"Insufficient output\") */\n      tag_87\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8184:8186   */\n      0x20\n        /* \"contracts/1_Storage.sol\":5587:5644  require(amountOut >= amountOutMin, \"Insufficient output\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8166:8187   */\n      mstore\n        /* \"#utility.yul\":8223:8225   */\n      0x13\n        /* \"#utility.yul\":8203:8221   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8196:8226   */\n      mstore\n      shl(0x6a, 0x125b9cdd59999a58da595b9d081bdd5d1c1d5d)\n        /* \"#utility.yul\":8242:8260   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8235:8284   */\n      mstore\n        /* \"#utility.yul\":8301:8319   */\n      0x64\n      add\n        /* \"contracts/1_Storage.sol\":5587:5644  require(amountOut >= amountOutMin, \"Insufficient output\") */\n      tag_60\n        /* \"#utility.yul\":7982:8325   */\n      jump\n        /* \"contracts/1_Storage.sol\":5587:5644  require(amountOut >= amountOutMin, \"Insufficient output\") */\n    tag_87:\n        /* \"contracts/1_Storage.sol\":5689:5754  _performSwapTransfers(tokenIn, tokenOut, amountIn, amountOut, to) */\n      tag_90\n        /* \"contracts/1_Storage.sol\":5711:5718  tokenIn */\n      dup4\n        /* \"contracts/1_Storage.sol\":5720:5728  tokenOut */\n      dup4\n        /* \"contracts/1_Storage.sol\":5730:5738  amountIn */\n      dup13\n        /* \"contracts/1_Storage.sol\":5740:5749  amountOut */\n      dup5\n        /* \"contracts/1_Storage.sol\":5751:5753  to */\n      dup11\n        /* \"contracts/1_Storage.sol\":5689:5710  _performSwapTransfers */\n      tag_91\n        /* \"contracts/1_Storage.sol\":5689:5754  _performSwapTransfers(tokenIn, tokenOut, amountIn, amountOut, to) */\n      jump\t// in\n    tag_90:\n        /* \"contracts/1_Storage.sol\":5792:5856  _updateReservesAfterSwap(tokenIn, tokenOut, amountIn, amountOut) */\n      tag_92\n        /* \"contracts/1_Storage.sol\":5817:5824  tokenIn */\n      dup4\n        /* \"contracts/1_Storage.sol\":5826:5834  tokenOut */\n      dup4\n        /* \"contracts/1_Storage.sol\":5836:5844  amountIn */\n      dup13\n        /* \"contracts/1_Storage.sol\":5846:5855  amountOut */\n      dup5\n        /* \"contracts/1_Storage.sol\":5792:5816  _updateReservesAfterSwap */\n      tag_93\n        /* \"contracts/1_Storage.sol\":5792:5856  _updateReservesAfterSwap(tokenIn, tokenOut, amountIn, amountOut) */\n      jump\t// in\n    tag_92:\n        /* \"contracts/1_Storage.sol\":5913:5926  new uint[](2) */\n      0x40\n      dup1\n      mload\n        /* \"contracts/1_Storage.sol\":5924:5925  2 */\n      0x02\n        /* \"contracts/1_Storage.sol\":5913:5926  new uint[](2) */\n      dup1\n      dup3\n      mstore\n      0x60\n      dup3\n      add\n      dup4\n      mstore\n      swap1\n      swap2\n      0x20\n      dup4\n      add\n      swap1\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n      pop\n        /* \"contracts/1_Storage.sol\":5903:5926  amounts = new uint[](2) */\n      swap4\n      pop\n        /* \"contracts/1_Storage.sol\":5949:5957  amountIn */\n      dup10\n        /* \"contracts/1_Storage.sol\":5936:5943  amounts */\n      dup5\n        /* \"contracts/1_Storage.sol\":5944:5945  0 */\n      0x00\n        /* \"contracts/1_Storage.sol\":5936:5946  amounts[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_99\n      jumpi\n      tag_99\n      tag_79\n      jump\t// in\n    tag_99:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/1_Storage.sol\":5936:5957  amounts[0] = amountIn */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/1_Storage.sol\":5980:5989  amountOut */\n      dup1\n        /* \"contracts/1_Storage.sol\":5967:5974  amounts */\n      dup5\n        /* \"contracts/1_Storage.sol\":5975:5976  1 */\n      0x01\n        /* \"contracts/1_Storage.sol\":5967:5977  amounts[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_101\n      jumpi\n      tag_101\n      tag_79\n      jump\t// in\n    tag_101:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/1_Storage.sol\":5967:5989  amounts[1] = amountOut */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/1_Storage.sol\":5266:5996  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/1_Storage.sol\":5059:5996  function swapExactTokensForTokens(... */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/1_Storage.sol\":6207:6596  function getPrice(address tokenA, address tokenB) external view returns (uint price) {... */\n    tag_37:\n        /* \"contracts/1_Storage.sol\":6280:6290  uint price */\n      0x00\n        /* \"contracts/1_Storage.sol\":6302:6318  bytes32 pairHash */\n      0x00\n        /* \"contracts/1_Storage.sol\":6321:6349  _getPairHash(tokenA, tokenB) */\n      tag_103\n        /* \"contracts/1_Storage.sol\":6334:6340  tokenA */\n      dup5\n        /* \"contracts/1_Storage.sol\":6342:6348  tokenB */\n      dup5\n        /* \"contracts/1_Storage.sol\":6321:6333  _getPairHash */\n      tag_104\n        /* \"contracts/1_Storage.sol\":6321:6349  _getPairHash(tokenA, tokenB) */\n      jump\t// in\n    tag_103:\n        /* \"contracts/1_Storage.sol\":6359:6377  Reserve memory res */\n      0x00\n        /* \"contracts/1_Storage.sol\":6380:6398  reserves[pairHash] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/1_Storage.sol\":6359:6398  Reserve memory res = reserves[pairHash] */\n      dup2\n      mload\n      dup1\n      dup4\n      add\n      swap1\n      swap3\n      mstore\n      sload\n      sub(shl(0x70, 0x01), 0x01)\n      dup1\n      dup3\n      and\n      dup4\n      mstore\n      shl(0x70, 0x01)\n      swap1\n      swap2\n      div\n      and\n      swap2\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"contracts/1_Storage.sol\":6302:6349  bytes32 pairHash = _getPairHash(tokenA, tokenB) */\n      swap2\n      swap3\n      pop\n        /* \"contracts/1_Storage.sol\":6359:6377  Reserve memory res */\n      dup1\n        /* \"contracts/1_Storage.sol\":6442:6481  _getSortedReserves(tokenA, tokenB, res) */\n      tag_105\n        /* \"contracts/1_Storage.sol\":6461:6467  tokenA */\n      dup8\n        /* \"contracts/1_Storage.sol\":6469:6475  tokenB */\n      dup8\n        /* \"contracts/1_Storage.sol\":6359:6398  Reserve memory res = reserves[pairHash] */\n      dup6\n        /* \"contracts/1_Storage.sol\":6442:6460  _getSortedReserves */\n      tag_106\n        /* \"contracts/1_Storage.sol\":6442:6481  _getSortedReserves(tokenA, tokenB, res) */\n      jump\t// in\n    tag_105:\n        /* \"contracts/1_Storage.sol\":6409:6481  (uint reserveA, uint reserveB) = _getSortedReserves(tokenA, tokenB, res) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/1_Storage.sol\":6510:6511  0 */\n      0x00\n        /* \"contracts/1_Storage.sol\":6499:6507  reserveA */\n      dup3\n        /* \"contracts/1_Storage.sol\":6499:6511  reserveA > 0 */\n      gt\n        /* \"contracts/1_Storage.sol\":6499:6527  reserveA > 0 && reserveB > 0 */\n      dup1\n      iszero\n      tag_107\n      jumpi\n      pop\n        /* \"contracts/1_Storage.sol\":6526:6527  0 */\n      0x00\n        /* \"contracts/1_Storage.sol\":6515:6523  reserveB */\n      dup2\n        /* \"contracts/1_Storage.sol\":6515:6527  reserveB > 0 */\n      gt\n        /* \"contracts/1_Storage.sol\":6499:6527  reserveA > 0 && reserveB > 0 */\n    tag_107:\n        /* \"contracts/1_Storage.sol\":6491:6543  require(reserveA > 0 && reserveB > 0, \"No reserves\") */\n      tag_108\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8664:8666   */\n      0x20\n        /* \"contracts/1_Storage.sol\":6491:6543  require(reserveA > 0 && reserveB > 0, \"No reserves\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8646:8667   */\n      mstore\n        /* \"#utility.yul\":8703:8705   */\n      0x0b\n        /* \"#utility.yul\":8683:8701   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8676:8706   */\n      mstore\n      shl(0xa8, 0x4e6f207265736572766573)\n        /* \"#utility.yul\":8722:8740   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8715:8756   */\n      mstore\n        /* \"#utility.yul\":8773:8791   */\n      0x64\n      add\n        /* \"contracts/1_Storage.sol\":6491:6543  require(reserveA > 0 && reserveB > 0, \"No reserves\") */\n      tag_60\n        /* \"#utility.yul\":8462:8797   */\n      jump\n        /* \"contracts/1_Storage.sol\":6491:6543  require(reserveA > 0 && reserveB > 0, \"No reserves\") */\n    tag_108:\n        /* \"contracts/1_Storage.sol\":6581:6589  reserveA */\n      dup2\n        /* \"contracts/1_Storage.sol\":6562:6577  reserveB * 1e18 */\n      tag_111\n        /* \"contracts/1_Storage.sol\":6562:6570  reserveB */\n      dup3\n        /* \"contracts/1_Storage.sol\":6573:6577  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/1_Storage.sol\":6562:6577  reserveB * 1e18 */\n      tag_63\n      jump\t// in\n    tag_111:\n        /* \"contracts/1_Storage.sol\":6561:6589  (reserveB * 1e18) / reserveA */\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n        /* \"contracts/1_Storage.sol\":3512:4621  function removeLiquidity(... */\n    tag_42:\n        /* \"contracts/1_Storage.sol\":3726:3738  uint amountA */\n      0x00\n        /* \"contracts/1_Storage.sol\":3740:3752  uint amountB */\n      0x00\n        /* \"contracts/1_Storage.sol\":3791:3799  deadline */\n      dup3\n        /* \"contracts/1_Storage.sol\":3772:3787  block.timestamp */\n      timestamp\n        /* \"contracts/1_Storage.sol\":3772:3799  block.timestamp <= deadline */\n      gt\n      iszero\n        /* \"contracts/1_Storage.sol\":3764:3811  require(block.timestamp <= deadline, \"Expired\") */\n      tag_114\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_60\n      swap1\n      tag_73\n      jump\t// in\n    tag_114:\n        /* \"contracts/1_Storage.sol\":3822:3838  bytes32 pairHash */\n      0x00\n        /* \"contracts/1_Storage.sol\":3841:3869  _getPairHash(tokenA, tokenB) */\n      tag_116\n        /* \"contracts/1_Storage.sol\":3854:3860  tokenA */\n      dup11\n        /* \"contracts/1_Storage.sol\":3862:3868  tokenB */\n      dup11\n        /* \"contracts/1_Storage.sol\":3841:3853  _getPairHash */\n      tag_104\n        /* \"contracts/1_Storage.sol\":3841:3869  _getPairHash(tokenA, tokenB) */\n      jump\t// in\n    tag_116:\n        /* \"contracts/1_Storage.sol\":3879:3898  Reserve storage res */\n      0x00\n        /* \"contracts/1_Storage.sol\":3901:3919  reserves[pairHash] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/1_Storage.sol\":3942:3956  totalLiquidity */\n      0x01\n        /* \"contracts/1_Storage.sol\":3942:3966  totalLiquidity[pairHash] */\n      swap1\n      swap3\n      mstore\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"contracts/1_Storage.sol\":3822:3869  bytes32 pairHash = _getPairHash(tokenA, tokenB) */\n      swap2\n      swap3\n      pop\n        /* \"contracts/1_Storage.sol\":3901:3919  reserves[pairHash] */\n      swap1\n        /* \"contracts/1_Storage.sol\":3984:3993  total > 0 */\n      dup1\n        /* \"contracts/1_Storage.sol\":3976:4010  require(total > 0, \"No liquidity\") */\n      tag_117\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9004:9006   */\n      0x20\n        /* \"contracts/1_Storage.sol\":3976:4010  require(total > 0, \"No liquidity\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8986:9007   */\n      mstore\n        /* \"#utility.yul\":9043:9045   */\n      0x0c\n        /* \"#utility.yul\":9023:9041   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9016:9046   */\n      mstore\n      shl(0xa0, 0x4e6f206c6971756964697479)\n        /* \"#utility.yul\":9062:9080   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9055:9097   */\n      mstore\n        /* \"#utility.yul\":9114:9132   */\n      0x64\n      add\n        /* \"contracts/1_Storage.sol\":3976:4010  require(total > 0, \"No liquidity\") */\n      tag_60\n        /* \"#utility.yul\":8802:9138   */\n      jump\n        /* \"contracts/1_Storage.sol\":3976:4010  require(total > 0, \"No liquidity\") */\n    tag_117:\n        /* \"contracts/1_Storage.sol\":4077:4089  res.reserveA */\n      dup2\n      sload\n        /* \"contracts/1_Storage.sol\":4104:4109  total */\n      dup2\n      swap1\n        /* \"contracts/1_Storage.sol\":4077:4101  res.reserveA * liquidity */\n      tag_120\n      swap1\n        /* \"contracts/1_Storage.sol\":4092:4101  liquidity */\n      dup13\n      swap1\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"contracts/1_Storage.sol\":4077:4089  res.reserveA */\n      and\n        /* \"contracts/1_Storage.sol\":4077:4101  res.reserveA * liquidity */\n      tag_63\n      jump\t// in\n    tag_120:\n        /* \"contracts/1_Storage.sol\":4077:4109  res.reserveA * liquidity / total */\n      tag_121\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_121:\n        /* \"contracts/1_Storage.sol\":4129:4141  res.reserveB */\n      dup3\n      sload\n        /* \"contracts/1_Storage.sol\":4067:4109  amountA = res.reserveA * liquidity / total */\n      swap1\n      swap6\n      pop\n        /* \"contracts/1_Storage.sol\":4156:4161  total */\n      dup2\n      swap1\n        /* \"contracts/1_Storage.sol\":4129:4153  res.reserveB * liquidity */\n      tag_122\n      swap1\n        /* \"contracts/1_Storage.sol\":4144:4153  liquidity */\n      dup13\n      swap1\n      shl(0x70, 0x01)\n        /* \"contracts/1_Storage.sol\":4129:4141  res.reserveB */\n      swap1\n      div\n      sub(shl(0x70, 0x01), 0x01)\n      and\n        /* \"contracts/1_Storage.sol\":4129:4153  res.reserveB * liquidity */\n      tag_63\n      jump\t// in\n    tag_122:\n        /* \"contracts/1_Storage.sol\":4129:4161  res.reserveB * liquidity / total */\n      tag_123\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_123:\n        /* \"contracts/1_Storage.sol\":4119:4161  amountB = res.reserveB * liquidity / total */\n      swap4\n      pop\n        /* \"contracts/1_Storage.sol\":4191:4201  amountAMin */\n      dup9\n        /* \"contracts/1_Storage.sol\":4180:4187  amountA */\n      dup6\n        /* \"contracts/1_Storage.sol\":4180:4201  amountA >= amountAMin */\n      lt\n      iszero\n        /* \"contracts/1_Storage.sol\":4180:4226  amountA >= amountAMin && amountB >= amountBMin */\n      dup1\n      iszero\n      tag_124\n      jumpi\n      pop\n        /* \"contracts/1_Storage.sol\":4216:4226  amountBMin */\n      dup8\n        /* \"contracts/1_Storage.sol\":4205:4212  amountB */\n      dup5\n        /* \"contracts/1_Storage.sol\":4205:4226  amountB >= amountBMin */\n      lt\n      iszero\n        /* \"contracts/1_Storage.sol\":4180:4226  amountA >= amountAMin && amountB >= amountBMin */\n    tag_124:\n        /* \"contracts/1_Storage.sol\":4172:4239  require(amountA >= amountAMin && amountB >= amountBMin, \"Slippage\") */\n      tag_125\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9345:9347   */\n      0x20\n        /* \"contracts/1_Storage.sol\":4172:4239  require(amountA >= amountAMin && amountB >= amountBMin, \"Slippage\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9327:9348   */\n      mstore\n        /* \"#utility.yul\":9384:9385   */\n      0x08\n        /* \"#utility.yul\":9364:9382   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9357:9386   */\n      mstore\n      shl(0xc0, 0x536c697070616765)\n        /* \"#utility.yul\":9402:9420   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9395:9433   */\n      mstore\n        /* \"#utility.yul\":9450:9468   */\n      0x64\n      add\n        /* \"contracts/1_Storage.sol\":4172:4239  require(amountA >= amountAMin && amountB >= amountBMin, \"Slippage\") */\n      tag_60\n        /* \"#utility.yul\":9143:9474   */\n      jump\n        /* \"contracts/1_Storage.sol\":4172:4239  require(amountA >= amountAMin && amountB >= amountBMin, \"Slippage\") */\n    tag_125:\n        /* \"contracts/1_Storage.sol\":4295:4321  liquidityBalance[pairHash] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"contracts/1_Storage.sol\":4295:4311  liquidityBalance */\n      0x02\n        /* \"contracts/1_Storage.sol\":4295:4321  liquidityBalance[pairHash] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/1_Storage.sol\":4322:4332  msg.sender */\n      caller\n        /* \"contracts/1_Storage.sol\":4295:4333  liquidityBalance[pairHash][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"contracts/1_Storage.sol\":4295:4346  liquidityBalance[pairHash][msg.sender] -= liquidity */\n      dup1\n      sload\n        /* \"contracts/1_Storage.sol\":4337:4346  liquidity */\n      dup13\n      swap3\n        /* \"contracts/1_Storage.sol\":4295:4321  liquidityBalance[pairHash] */\n      swap1\n        /* \"contracts/1_Storage.sol\":4295:4346  liquidityBalance[pairHash][msg.sender] -= liquidity */\n      tag_128\n      swap1\n        /* \"contracts/1_Storage.sol\":4337:4346  liquidity */\n      dup5\n      swap1\n        /* \"contracts/1_Storage.sol\":4295:4346  liquidityBalance[pairHash][msg.sender] -= liquidity */\n      tag_129\n      jump\t// in\n    tag_128:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/1_Storage.sol\":4356:4380  totalLiquidity[pairHash] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"contracts/1_Storage.sol\":4356:4370  totalLiquidity */\n      0x01\n        /* \"contracts/1_Storage.sol\":4356:4380  totalLiquidity[pairHash] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/1_Storage.sol\":4356:4393  totalLiquidity[pairHash] -= liquidity */\n      dup1\n      sload\n        /* \"contracts/1_Storage.sol\":4384:4393  liquidity */\n      dup13\n      swap3\n        /* \"contracts/1_Storage.sol\":4356:4380  totalLiquidity[pairHash] */\n      swap1\n        /* \"contracts/1_Storage.sol\":4356:4393  totalLiquidity[pairHash] -= liquidity */\n      tag_130\n      swap1\n        /* \"contracts/1_Storage.sol\":4384:4393  liquidity */\n      dup5\n      swap1\n        /* \"contracts/1_Storage.sol\":4356:4393  totalLiquidity[pairHash] -= liquidity */\n      tag_129\n      jump\t// in\n    tag_130:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/1_Storage.sol\":4403:4435  res.reserveA -= uint112(amountA) */\n      dup2\n      sload\n        /* \"contracts/1_Storage.sol\":4427:4434  amountA */\n      dup6\n      swap1\n        /* \"contracts/1_Storage.sol\":4403:4406  res */\n      dup4\n      swap1\n        /* \"contracts/1_Storage.sol\":4403:4415  res.reserveA */\n      0x00\n      swap1\n        /* \"contracts/1_Storage.sol\":4403:4435  res.reserveA -= uint112(amountA) */\n      tag_131\n      swap1\n        /* \"contracts/1_Storage.sol\":4427:4434  amountA */\n      dup5\n      swap1\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"contracts/1_Storage.sol\":4403:4435  res.reserveA -= uint112(amountA) */\n      and\n      tag_132\n      jump\t// in\n    tag_131:\n      swap3\n      pop\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      sub(shl(0x70, 0x01), 0x01)\n      mul\n      not\n      and\n      swap1\n      dup4\n      sub(shl(0x70, 0x01), 0x01)\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/1_Storage.sol\":4469:4476  amountB */\n      dup4\n        /* \"contracts/1_Storage.sol\":4445:4448  res */\n      dup3\n        /* \"contracts/1_Storage.sol\":4445:4457  res.reserveB */\n      0x00\n      add\n      0x0e\n        /* \"contracts/1_Storage.sol\":4445:4477  res.reserveB -= uint112(amountB) */\n      dup3\n      dup3\n      dup3\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0x70, 0x01), 0x01)\n      and\n      tag_133\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_133:\n      swap3\n      pop\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      sub(shl(0x70, 0x01), 0x01)\n      mul\n      not\n      and\n      swap1\n      dup4\n      sub(shl(0x70, 0x01), 0x01)\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/1_Storage.sol\":4524:4564  IERC20(tokenA).safeTransfer(to, amountA) */\n      tag_134\n        /* \"contracts/1_Storage.sol\":4552:4554  to */\n      dup8\n        /* \"contracts/1_Storage.sol\":4556:4563  amountA */\n      dup7\n        /* \"contracts/1_Storage.sol\":4531:4537  tokenA */\n      dup15\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/1_Storage.sol\":4524:4551  IERC20(tokenA).safeTransfer */\n      and\n      tag_135\n      swap1\n        /* \"contracts/1_Storage.sol\":4524:4564  IERC20(tokenA).safeTransfer(to, amountA) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_134:\n        /* \"contracts/1_Storage.sol\":4574:4614  IERC20(tokenB).safeTransfer(to, amountB) */\n      tag_136\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/1_Storage.sol\":4574:4601  IERC20(tokenB).safeTransfer */\n      dup13\n      and\n        /* \"contracts/1_Storage.sol\":4602:4604  to */\n      dup9\n        /* \"contracts/1_Storage.sol\":4606:4613  amountB */\n      dup7\n        /* \"contracts/1_Storage.sol\":4574:4601  IERC20(tokenB).safeTransfer */\n      tag_135\n        /* \"contracts/1_Storage.sol\":4574:4614  IERC20(tokenB).safeTransfer(to, amountB) */\n      jump\t// in\n    tag_136:\n        /* \"contracts/1_Storage.sol\":3754:4621  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/1_Storage.sol\":3512:4621  function removeLiquidity(... */\n      swap8\n      pop\n      swap8\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/1_Storage.sol\":1792:2944  function addLiquidity(... */\n    tag_53:\n        /* \"contracts/1_Storage.sol\":2037:2049  uint amountA */\n      0x00\n        /* \"contracts/1_Storage.sol\":2051:2063  uint amountB */\n      0x00\n        /* \"contracts/1_Storage.sol\":2065:2079  uint liquidity */\n      0x00\n        /* \"contracts/1_Storage.sol\":2118:2126  deadline */\n      dup4\n        /* \"contracts/1_Storage.sol\":2099:2114  block.timestamp */\n      timestamp\n        /* \"contracts/1_Storage.sol\":2099:2126  block.timestamp <= deadline */\n      gt\n      iszero\n        /* \"contracts/1_Storage.sol\":2091:2138  require(block.timestamp <= deadline, \"Expired\") */\n      tag_138\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_60\n      swap1\n      tag_73\n      jump\t// in\n    tag_138:\n        /* \"contracts/1_Storage.sol\":2149:2165  bytes32 pairHash */\n      0x00\n        /* \"contracts/1_Storage.sol\":2168:2196  _getPairHash(tokenA, tokenB) */\n      tag_140\n        /* \"contracts/1_Storage.sol\":2181:2187  tokenA */\n      dup13\n        /* \"contracts/1_Storage.sol\":2189:2195  tokenB */\n      dup13\n        /* \"contracts/1_Storage.sol\":2168:2180  _getPairHash */\n      tag_104\n        /* \"contracts/1_Storage.sol\":2168:2196  _getPairHash(tokenA, tokenB) */\n      jump\t// in\n    tag_140:\n        /* \"contracts/1_Storage.sol\":2206:2225  Reserve storage res */\n      0x00\n        /* \"contracts/1_Storage.sol\":2228:2246  reserves[pairHash] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/1_Storage.sol\":2457:2469  res.reserveA */\n      dup1\n      sload\n        /* \"contracts/1_Storage.sol\":2149:2196  bytes32 pairHash = _getPairHash(tokenA, tokenB) */\n      swap2\n      swap3\n      pop\n        /* \"contracts/1_Storage.sol\":2228:2246  reserves[pairHash] */\n      swap1\n        /* \"contracts/1_Storage.sol\":2417:2609  _calculateLiquidityAmounts(... */\n      tag_141\n      swap1\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"contracts/1_Storage.sol\":2457:2469  res.reserveA */\n      dup1\n      dup3\n      and\n      swap2\n      shl(0x70, 0x01)\n        /* \"contracts/1_Storage.sol\":2483:2495  res.reserveB */\n      swap1\n      div\n      and\n        /* \"contracts/1_Storage.sol\":2509:2523  amountADesired */\n      dup14\n        /* \"contracts/1_Storage.sol\":2537:2551  amountBDesired */\n      dup14\n        /* \"contracts/1_Storage.sol\":2565:2575  amountAMin */\n      dup14\n        /* \"contracts/1_Storage.sol\":2589:2599  amountBMin */\n      dup14\n        /* \"contracts/1_Storage.sol\":2417:2443  _calculateLiquidityAmounts */\n      tag_142\n        /* \"contracts/1_Storage.sol\":2417:2609  _calculateLiquidityAmounts(... */\n      jump\t// in\n    tag_141:\n        /* \"contracts/1_Storage.sol\":2396:2609  (amountA, amountB) = _calculateLiquidityAmounts(... */\n      swap1\n      swap6\n      pop\n      swap4\n      pop\n        /* \"contracts/1_Storage.sol\":2655:2718  _performAddLiquidityTransfers(tokenA, tokenB, amountA, amountB) */\n      tag_143\n        /* \"contracts/1_Storage.sol\":2685:2691  tokenA */\n      dup14\n        /* \"contracts/1_Storage.sol\":2693:2699  tokenB */\n      dup14\n        /* \"contracts/1_Storage.sol\":2396:2609  (amountA, amountB) = _calculateLiquidityAmounts(... */\n      dup8\n      dup8\n        /* \"contracts/1_Storage.sol\":2655:2684  _performAddLiquidityTransfers */\n      tag_144\n        /* \"contracts/1_Storage.sol\":2655:2718  _performAddLiquidityTransfers(tokenA, tokenB, amountA, amountB) */\n      jump\t// in\n    tag_143:\n        /* \"contracts/1_Storage.sol\":2869:2937  _mintLiquidityAndUpdateReserves(pairHash, amountA, amountB, to, res) */\n      tag_145\n        /* \"contracts/1_Storage.sol\":2901:2909  pairHash */\n      dup3\n        /* \"contracts/1_Storage.sol\":2911:2918  amountA */\n      dup7\n        /* \"contracts/1_Storage.sol\":2920:2927  amountB */\n      dup7\n        /* \"contracts/1_Storage.sol\":2929:2931  to */\n      dup11\n        /* \"contracts/1_Storage.sol\":2933:2936  res */\n      dup6\n        /* \"contracts/1_Storage.sol\":2869:2900  _mintLiquidityAndUpdateReserves */\n      tag_146\n        /* \"contracts/1_Storage.sol\":2869:2937  _mintLiquidityAndUpdateReserves(pairHash, amountA, amountB, to, res) */\n      jump\t// in\n    tag_145:\n        /* \"contracts/1_Storage.sol\":2857:2937  liquidity = _mintLiquidityAndUpdateReserves(pairHash, amountA, amountB, to, res) */\n      swap3\n      pop\n        /* \"contracts/1_Storage.sol\":2081:2944  {... */\n      pop\n      pop\n        /* \"contracts/1_Storage.sol\":1792:2944  function addLiquidity(... */\n      swap9\n      pop\n      swap9\n      pop\n      swap9\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/1_Storage.sol\":9656:10031  function _calculateSwapOutput(uint amountIn, address tokenIn, address tokenOut) internal view returns (uint) {... */\n    tag_86:\n        /* \"contracts/1_Storage.sol\":9759:9763  uint */\n      0x00\n        /* \"contracts/1_Storage.sol\":9775:9791  bytes32 pairHash */\n      0x00\n        /* \"contracts/1_Storage.sol\":9794:9825  _getPairHash(tokenIn, tokenOut) */\n      tag_148\n        /* \"contracts/1_Storage.sol\":9807:9814  tokenIn */\n      dup5\n        /* \"contracts/1_Storage.sol\":9816:9824  tokenOut */\n      dup5\n        /* \"contracts/1_Storage.sol\":9794:9806  _getPairHash */\n      tag_104\n        /* \"contracts/1_Storage.sol\":9794:9825  _getPairHash(tokenIn, tokenOut) */\n      jump\t// in\n    tag_148:\n        /* \"contracts/1_Storage.sol\":9835:9853  Reserve memory res */\n      0x00\n        /* \"contracts/1_Storage.sol\":9856:9874  reserves[pairHash] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/1_Storage.sol\":9835:9874  Reserve memory res = reserves[pairHash] */\n      dup2\n      mload\n      dup1\n      dup4\n      add\n      swap1\n      swap3\n      mstore\n      sload\n      sub(shl(0x70, 0x01), 0x01)\n      dup1\n      dup3\n      and\n      dup4\n      mstore\n      shl(0x70, 0x01)\n      swap1\n      swap2\n      div\n      and\n      swap2\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"contracts/1_Storage.sol\":9775:9825  bytes32 pairHash = _getPairHash(tokenIn, tokenOut) */\n      swap2\n      swap3\n      pop\n        /* \"contracts/1_Storage.sol\":9835:9853  Reserve memory res */\n      dup1\n        /* \"contracts/1_Storage.sol\":9920:9962  _getSortedReserves(tokenIn, tokenOut, res) */\n      tag_149\n        /* \"contracts/1_Storage.sol\":9939:9946  tokenIn */\n      dup8\n        /* \"contracts/1_Storage.sol\":9948:9956  tokenOut */\n      dup8\n        /* \"contracts/1_Storage.sol\":9835:9874  Reserve memory res = reserves[pairHash] */\n      dup6\n        /* \"contracts/1_Storage.sol\":9920:9938  _getSortedReserves */\n      tag_106\n        /* \"contracts/1_Storage.sol\":9920:9962  _getSortedReserves(tokenIn, tokenOut, res) */\n      jump\t// in\n    tag_149:\n        /* \"contracts/1_Storage.sol\":9884:9962  (uint reserveIn, uint reserveOut) = _getSortedReserves(tokenIn, tokenOut, res) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/1_Storage.sol\":9979:10024  getAmountOut(amountIn, reserveIn, reserveOut) */\n      tag_150\n        /* \"contracts/1_Storage.sol\":9992:10000  amountIn */\n      dup9\n        /* \"contracts/1_Storage.sol\":10002:10011  reserveIn */\n      dup4\n        /* \"contracts/1_Storage.sol\":10013:10023  reserveOut */\n      dup4\n        /* \"contracts/1_Storage.sol\":9979:9991  getAmountOut */\n      tag_21\n        /* \"contracts/1_Storage.sol\":9979:10024  getAmountOut(amountIn, reserveIn, reserveOut) */\n      jump\t// in\n    tag_150:\n        /* \"contracts/1_Storage.sol\":9972:10024  return getAmountOut(amountIn, reserveIn, reserveOut) */\n      swap9\n        /* \"contracts/1_Storage.sol\":9656:10031  function _calculateSwapOutput(uint amountIn, address tokenIn, address tokenOut) internal view returns (uint) {... */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/1_Storage.sol\":10104:10362  function _performSwapTransfers(address tokenIn, address tokenOut, uint amountIn, uint amountOut, address to) internal {... */\n    tag_91:\n        /* \"contracts/1_Storage.sol\":10232:10301  IERC20(tokenIn).safeTransferFrom(msg.sender, address(this), amountIn) */\n      tag_152\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/1_Storage.sol\":10232:10264  IERC20(tokenIn).safeTransferFrom */\n      dup7\n      and\n        /* \"contracts/1_Storage.sol\":10265:10275  msg.sender */\n      caller\n        /* \"contracts/1_Storage.sol\":10285:10289  this */\n      address\n        /* \"contracts/1_Storage.sol\":10292:10300  amountIn */\n      dup7\n        /* \"contracts/1_Storage.sol\":10232:10264  IERC20(tokenIn).safeTransferFrom */\n      tag_153\n        /* \"contracts/1_Storage.sol\":10232:10301  IERC20(tokenIn).safeTransferFrom(msg.sender, address(this), amountIn) */\n      jump\t// in\n    tag_152:\n        /* \"contracts/1_Storage.sol\":10311:10355  IERC20(tokenOut).safeTransfer(to, amountOut) */\n      tag_154\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/1_Storage.sol\":10311:10340  IERC20(tokenOut).safeTransfer */\n      dup6\n      and\n        /* \"contracts/1_Storage.sol\":10341:10343  to */\n      dup3\n        /* \"contracts/1_Storage.sol\":10345:10354  amountOut */\n      dup5\n        /* \"contracts/1_Storage.sol\":10311:10340  IERC20(tokenOut).safeTransfer */\n      tag_135\n        /* \"contracts/1_Storage.sol\":10311:10355  IERC20(tokenOut).safeTransfer(to, amountOut) */\n      jump\t// in\n    tag_154:\n        /* \"contracts/1_Storage.sol\":10104:10362  function _performSwapTransfers(address tokenIn, address tokenOut, uint amountIn, uint amountOut, address to) internal {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/1_Storage.sol\":10429:10906  function _updateReservesAfterSwap(address tokenIn, address tokenOut, uint amountIn, uint amountOut) internal {... */\n    tag_93:\n        /* \"contracts/1_Storage.sol\":10548:10564  bytes32 pairHash */\n      0x00\n        /* \"contracts/1_Storage.sol\":10567:10598  _getPairHash(tokenIn, tokenOut) */\n      tag_156\n        /* \"contracts/1_Storage.sol\":10580:10587  tokenIn */\n      dup6\n        /* \"contracts/1_Storage.sol\":10589:10597  tokenOut */\n      dup6\n        /* \"contracts/1_Storage.sol\":10567:10579  _getPairHash */\n      tag_104\n        /* \"contracts/1_Storage.sol\":10567:10598  _getPairHash(tokenIn, tokenOut) */\n      jump\t// in\n    tag_156:\n        /* \"contracts/1_Storage.sol\":10608:10627  Reserve storage res */\n      0x00\n        /* \"contracts/1_Storage.sol\":10630:10648  reserves[pairHash] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/1_Storage.sol\":10548:10598  bytes32 pairHash = _getPairHash(tokenIn, tokenOut) */\n      swap1\n      swap2\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/1_Storage.sol\":10662:10680  tokenIn < tokenOut */\n      dup1\n      dup7\n      and\n      swap1\n      dup8\n      and\n      lt\n        /* \"contracts/1_Storage.sol\":10658:10900  if (tokenIn < tokenOut) {... */\n      iszero\n      tag_157\n      jumpi\n        /* \"contracts/1_Storage.sol\":10696:10729  res.reserveA += uint112(amountIn) */\n      dup1\n      sload\n        /* \"contracts/1_Storage.sol\":10720:10728  amountIn */\n      dup5\n      swap1\n        /* \"contracts/1_Storage.sol\":10696:10699  res */\n      dup3\n      swap1\n        /* \"contracts/1_Storage.sol\":10696:10708  res.reserveA */\n      0x00\n      swap1\n        /* \"contracts/1_Storage.sol\":10696:10729  res.reserveA += uint112(amountIn) */\n      tag_158\n      swap1\n        /* \"contracts/1_Storage.sol\":10720:10728  amountIn */\n      dup5\n      swap1\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"contracts/1_Storage.sol\":10696:10729  res.reserveA += uint112(amountIn) */\n      and\n      tag_159\n      jump\t// in\n    tag_158:\n      swap3\n      pop\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      sub(shl(0x70, 0x01), 0x01)\n      mul\n      not\n      and\n      swap1\n      dup4\n      sub(shl(0x70, 0x01), 0x01)\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/1_Storage.sol\":10767:10776  amountOut */\n      dup3\n        /* \"contracts/1_Storage.sol\":10743:10746  res */\n      dup2\n        /* \"contracts/1_Storage.sol\":10743:10755  res.reserveB */\n      0x00\n      add\n      0x0e\n        /* \"contracts/1_Storage.sol\":10743:10777  res.reserveB -= uint112(amountOut) */\n      dup3\n      dup3\n      dup3\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0x70, 0x01), 0x01)\n      and\n      tag_160\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_160:\n      swap3\n      pop\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      sub(shl(0x70, 0x01), 0x01)\n      mul\n      not\n      and\n      swap1\n      dup4\n      sub(shl(0x70, 0x01), 0x01)\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/1_Storage.sol\":10658:10900  if (tokenIn < tokenOut) {... */\n      jump(tag_161)\n    tag_157:\n        /* \"contracts/1_Storage.sol\":10808:10841  res.reserveB += uint112(amountIn) */\n      dup1\n      sload\n        /* \"contracts/1_Storage.sol\":10832:10840  amountIn */\n      dup5\n      swap1\n        /* \"contracts/1_Storage.sol\":10808:10841  res.reserveB += uint112(amountIn) */\n      dup3\n      swap1\n        /* \"contracts/1_Storage.sol\":10808:10820  res.reserveB */\n      0x0e\n      swap1\n        /* \"contracts/1_Storage.sol\":10808:10841  res.reserveB += uint112(amountIn) */\n      tag_162\n      swap1\n        /* \"contracts/1_Storage.sol\":10832:10840  amountIn */\n      dup5\n      swap1\n      shl(0x70, 0x01)\n        /* \"contracts/1_Storage.sol\":10808:10841  res.reserveB += uint112(amountIn) */\n      swap1\n      div\n      sub(shl(0x70, 0x01), 0x01)\n      and\n      tag_159\n      jump\t// in\n    tag_162:\n      swap3\n      pop\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      sub(shl(0x70, 0x01), 0x01)\n      mul\n      not\n      and\n      swap1\n      dup4\n      sub(shl(0x70, 0x01), 0x01)\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/1_Storage.sol\":10879:10888  amountOut */\n      dup3\n        /* \"contracts/1_Storage.sol\":10855:10858  res */\n      dup2\n        /* \"contracts/1_Storage.sol\":10855:10867  res.reserveA */\n      0x00\n      add\n      0x00\n        /* \"contracts/1_Storage.sol\":10855:10889  res.reserveA -= uint112(amountOut) */\n      dup3\n      dup3\n      dup3\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0x70, 0x01), 0x01)\n      and\n      tag_163\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_163:\n      swap3\n      pop\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      sub(shl(0x70, 0x01), 0x01)\n      mul\n      not\n      and\n      swap1\n      dup4\n      sub(shl(0x70, 0x01), 0x01)\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/1_Storage.sol\":10658:10900  if (tokenIn < tokenOut) {... */\n    tag_161:\n        /* \"contracts/1_Storage.sol\":10538:10906  {... */\n      pop\n      pop\n        /* \"contracts/1_Storage.sol\":10429:10906  function _updateReservesAfterSwap(address tokenIn, address tokenOut, uint amountIn, uint amountOut) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/1_Storage.sol\":10976:11183  function _getPairHash(address tokenA, address tokenB) internal pure returns (bytes32) {... */\n    tag_104:\n        /* \"contracts/1_Storage.sol\":11053:11060  bytes32 */\n      0x00\n        /* \"contracts/1_Storage.sol\":11115:11121  tokenB */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/1_Storage.sol\":11106:11121  tokenA < tokenB */\n      and\n        /* \"contracts/1_Storage.sol\":11106:11112  tokenA */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/1_Storage.sol\":11106:11121  tokenA < tokenB */\n      and\n      lt\n        /* \"contracts/1_Storage.sol\":11106:11139  tokenA < tokenB ? tokenA : tokenB */\n      tag_165\n      jumpi\n        /* \"contracts/1_Storage.sol\":11133:11139  tokenB */\n      dup2\n        /* \"contracts/1_Storage.sol\":11106:11139  tokenA < tokenB ? tokenA : tokenB */\n      jump(tag_166)\n    tag_165:\n        /* \"contracts/1_Storage.sol\":11124:11130  tokenA */\n      dup3\n        /* \"contracts/1_Storage.sol\":11106:11139  tokenA < tokenB ? tokenA : tokenB */\n    tag_166:\n        /* \"contracts/1_Storage.sol\":11150:11156  tokenB */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/1_Storage.sol\":11141:11156  tokenA < tokenB */\n      and\n        /* \"contracts/1_Storage.sol\":11141:11147  tokenA */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/1_Storage.sol\":11141:11156  tokenA < tokenB */\n      and\n      lt\n        /* \"contracts/1_Storage.sol\":11141:11174  tokenA < tokenB ? tokenB : tokenA */\n      tag_167\n      jumpi\n        /* \"contracts/1_Storage.sol\":11168:11174  tokenA */\n      dup4\n        /* \"contracts/1_Storage.sol\":11141:11174  tokenA < tokenB ? tokenB : tokenA */\n      jump(tag_168)\n    tag_167:\n        /* \"contracts/1_Storage.sol\":11159:11165  tokenB */\n      dup3\n        /* \"contracts/1_Storage.sol\":11141:11174  tokenA < tokenB ? tokenB : tokenA */\n    tag_168:\n        /* \"contracts/1_Storage.sol\":11089:11175  abi.encodePacked(tokenA < tokenB ? tokenA : tokenB, tokenA < tokenB ? tokenB : tokenA) */\n      mload(0x40)\n      not(0xffffffffffffffffffffffff)\n        /* \"#utility.yul\":10258:10260   */\n      0x60\n        /* \"#utility.yul\":10254:10269   */\n      swap4\n      dup5\n      shl\n        /* \"#utility.yul\":10250:10303   */\n      dup2\n      and\n        /* \"contracts/1_Storage.sol\":11089:11175  abi.encodePacked(tokenA < tokenB ? tokenA : tokenB, tokenA < tokenB ? tokenB : tokenA) */\n      0x20\n      dup4\n      add\n        /* \"#utility.yul\":10238:10304   */\n      mstore\n        /* \"#utility.yul\":10338:10353   */\n      swap2\n      swap1\n      swap3\n      shl\n        /* \"#utility.yul\":10334:10387   */\n      and\n        /* \"#utility.yul\":10320:10332   */\n      0x34\n      dup3\n      add\n        /* \"#utility.yul\":10313:10388   */\n      mstore\n        /* \"#utility.yul\":10404:10416   */\n      0x48\n      add\n        /* \"contracts/1_Storage.sol\":11089:11175  abi.encodePacked(tokenA < tokenB ? tokenA : tokenB, tokenA < tokenB ? tokenB : tokenA) */\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/1_Storage.sol\":11079:11176  keccak256(abi.encodePacked(tokenA < tokenB ? tokenA : tokenB, tokenA < tokenB ? tokenB : tokenA)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/1_Storage.sol\":11072:11176  return keccak256(abi.encodePacked(tokenA < tokenB ? tokenA : tokenB, tokenA < tokenB ? tokenB : tokenA)) */\n      swap1\n      pop\n        /* \"contracts/1_Storage.sol\":10976:11183  function _getPairHash(address tokenA, address tokenB) internal pure returns (bytes32) {... */\n    tag_164:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/1_Storage.sol\":11250:11466  function _getSortedReserves(address tokenA, address tokenB, Reserve memory res) internal pure returns (uint, uint) {... */\n    tag_106:\n        /* \"contracts/1_Storage.sol\":11353:11357  uint */\n      0x00\n        /* \"contracts/1_Storage.sol\":11359:11363  uint */\n      0x00\n        /* \"contracts/1_Storage.sol\":11391:11397  tokenB */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/1_Storage.sol\":11382:11397  tokenA < tokenB */\n      and\n        /* \"contracts/1_Storage.sol\":11382:11388  tokenA */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/1_Storage.sol\":11382:11397  tokenA < tokenB */\n      and\n      lt\n        /* \"contracts/1_Storage.sol\":11382:11459  tokenA < tokenB ? (res.reserveA, res.reserveB) : (res.reserveB, res.reserveA) */\n      tag_172\n      jumpi\n        /* \"contracts/1_Storage.sol\":11432:11444  res.reserveB */\n      0x20\n      dup4\n      add\n      mload\n        /* \"contracts/1_Storage.sol\":11446:11458  res.reserveA */\n      dup4\n      mload\n        /* \"contracts/1_Storage.sol\":11382:11459  tokenA < tokenB ? (res.reserveA, res.reserveB) : (res.reserveB, res.reserveA) */\n      jump(tag_173)\n    tag_172:\n        /* \"contracts/1_Storage.sol\":11401:11413  res.reserveA */\n      dup3\n      mload\n        /* \"contracts/1_Storage.sol\":11415:11427  res.reserveB */\n      0x20\n      dup5\n      add\n      mload\n        /* \"contracts/1_Storage.sol\":11382:11459  tokenA < tokenB ? (res.reserveA, res.reserveB) : (res.reserveB, res.reserveA) */\n    tag_173:\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"contracts/1_Storage.sol\":11375:11459  return tokenA < tokenB ? (res.reserveA, res.reserveB) : (res.reserveB, res.reserveA) */\n      swap2\n      dup3\n      and\n      swap8\n      swap2\n      and\n      swap6\n      pop\n        /* \"contracts/1_Storage.sol\":11250:11466  function _getSortedReserves(address tokenA, address tokenB, Reserve memory res) internal pure returns (uint, uint) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_135:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":10619:10651   */\n      dup4\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":10601:10652   */\n      mstore\n        /* \"#utility.yul\":10668:10686   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10661:10695   */\n      dup4\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_175\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1321:1326  token */\n      dup6\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1357  token.transfer */\n      dup3\n      and\n      swap1\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":10574:10592   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n    tag_176:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1320  _callOptionalReturn */\n      tag_178\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_175:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/1_Storage.sol\":7446:8605  function _calculateLiquidityAmounts(... */\n    tag_142:\n        /* \"contracts/1_Storage.sol\":7685:7707  uint calculatedAmountA */\n      0x00\n      dup1\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"contracts/1_Storage.sol\":7747:7767  currentReserveA == 0 */\n      dup9\n      and\n      iszero\n        /* \"contracts/1_Storage.sol\":7747:7791  currentReserveA == 0 && currentReserveB == 0 */\n      dup1\n      iszero\n      tag_180\n      jumpi\n      pop\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"contracts/1_Storage.sol\":7771:7791  currentReserveB == 0 */\n      dup8\n      and\n      iszero\n        /* \"contracts/1_Storage.sol\":7747:7791  currentReserveA == 0 && currentReserveB == 0 */\n    tag_180:\n        /* \"contracts/1_Storage.sol\":7743:8599  if (currentReserveA == 0 && currentReserveB == 0) {... */\n      iszero\n      tag_181\n      jumpi\n      pop\n        /* \"contracts/1_Storage.sol\":7902:7916  amountADesired */\n      dup5\n      swap1\n      pop\n        /* \"contracts/1_Storage.sol\":7918:7932  amountBDesired */\n      dup4\n        /* \"contracts/1_Storage.sol\":7743:8599  if (currentReserveA == 0 && currentReserveB == 0) {... */\n      jump(tag_182)\n    tag_181:\n        /* \"contracts/1_Storage.sol\":8011:8030  uint amountBOptimal */\n      0x00\n        /* \"contracts/1_Storage.sol\":8068:8083  currentReserveA */\n      dup9\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"contracts/1_Storage.sol\":8033:8083  amountADesired * currentReserveB / currentReserveA */\n      and\n        /* \"contracts/1_Storage.sol\":8050:8065  currentReserveB */\n      dup9\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"contracts/1_Storage.sol\":8033:8065  amountADesired * currentReserveB */\n      and\n        /* \"contracts/1_Storage.sol\":8033:8047  amountADesired */\n      dup9\n        /* \"contracts/1_Storage.sol\":8033:8065  amountADesired * currentReserveB */\n      tag_183\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_183:\n        /* \"contracts/1_Storage.sol\":8033:8083  amountADesired * currentReserveB / currentReserveA */\n      tag_184\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_184:\n        /* \"contracts/1_Storage.sol\":8011:8083  uint amountBOptimal = amountADesired * currentReserveB / currentReserveA */\n      swap1\n      pop\n        /* \"contracts/1_Storage.sol\":8119:8133  amountBDesired */\n      dup6\n        /* \"contracts/1_Storage.sol\":8101:8115  amountBOptimal */\n      dup2\n        /* \"contracts/1_Storage.sol\":8101:8133  amountBOptimal <= amountBDesired */\n      gt\n        /* \"contracts/1_Storage.sol\":8097:8589  if (amountBOptimal <= amountBDesired) {... */\n      tag_185\n      jumpi\n        /* \"contracts/1_Storage.sol\":8179:8189  amountBMin */\n      dup4\n        /* \"contracts/1_Storage.sol\":8161:8175  amountBOptimal */\n      dup2\n        /* \"contracts/1_Storage.sol\":8161:8189  amountBOptimal >= amountBMin */\n      lt\n      iszero\n        /* \"contracts/1_Storage.sol\":8153:8208  require(amountBOptimal >= amountBMin, \"Insufficient B\") */\n      tag_186\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10908:10910   */\n      0x20\n        /* \"contracts/1_Storage.sol\":8153:8208  require(amountBOptimal >= amountBMin, \"Insufficient B\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10890:10911   */\n      mstore\n        /* \"#utility.yul\":10947:10949   */\n      0x0e\n        /* \"#utility.yul\":10927:10945   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10920:10950   */\n      mstore\n      shl(0x91, 0x24b739bab33334b1b4b2b73a1021)\n        /* \"#utility.yul\":10966:10984   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10959:11003   */\n      mstore\n        /* \"#utility.yul\":11020:11038   */\n      0x64\n      add\n        /* \"contracts/1_Storage.sol\":8153:8208  require(amountBOptimal >= amountBMin, \"Insufficient B\") */\n      tag_60\n        /* \"#utility.yul\":10706:11044   */\n      jump\n        /* \"contracts/1_Storage.sol\":8153:8208  require(amountBOptimal >= amountBMin, \"Insufficient B\") */\n    tag_186:\n        /* \"contracts/1_Storage.sol\":8268:8282  amountADesired */\n      dup7\n      swap3\n      pop\n        /* \"contracts/1_Storage.sol\":8284:8298  amountBOptimal */\n      swap1\n      pop\n      dup1\n        /* \"contracts/1_Storage.sol\":8097:8589  if (amountBOptimal <= amountBDesired) {... */\n      jump(tag_189)\n    tag_185:\n        /* \"contracts/1_Storage.sol\":8338:8357  uint amountAOptimal */\n      0x00\n        /* \"contracts/1_Storage.sol\":8395:8410  currentReserveB */\n      dup9\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"contracts/1_Storage.sol\":8360:8410  amountBDesired * currentReserveA / currentReserveB */\n      and\n        /* \"contracts/1_Storage.sol\":8377:8392  currentReserveA */\n      dup11\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"contracts/1_Storage.sol\":8360:8392  amountBDesired * currentReserveA */\n      and\n        /* \"contracts/1_Storage.sol\":8360:8374  amountBDesired */\n      dup9\n        /* \"contracts/1_Storage.sol\":8360:8392  amountBDesired * currentReserveA */\n      tag_190\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_190:\n        /* \"contracts/1_Storage.sol\":8360:8410  amountBDesired * currentReserveA / currentReserveB */\n      tag_191\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_191:\n        /* \"contracts/1_Storage.sol\":8338:8410  uint amountAOptimal = amountBDesired * currentReserveA / currentReserveB */\n      swap1\n      pop\n        /* \"contracts/1_Storage.sol\":8454:8464  amountAMin */\n      dup6\n        /* \"contracts/1_Storage.sol\":8436:8450  amountAOptimal */\n      dup2\n        /* \"contracts/1_Storage.sol\":8436:8464  amountAOptimal >= amountAMin */\n      lt\n      iszero\n        /* \"contracts/1_Storage.sol\":8428:8483  require(amountAOptimal >= amountAMin, \"Insufficient A\") */\n      tag_192\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11251:11253   */\n      0x20\n        /* \"contracts/1_Storage.sol\":8428:8483  require(amountAOptimal >= amountAMin, \"Insufficient A\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11233:11254   */\n      mstore\n        /* \"#utility.yul\":11290:11292   */\n      0x0e\n        /* \"#utility.yul\":11270:11288   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11263:11293   */\n      mstore\n      shl(0x90, 0x496e73756666696369656e742041)\n        /* \"#utility.yul\":11309:11327   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11302:11346   */\n      mstore\n        /* \"#utility.yul\":11363:11381   */\n      0x64\n      add\n        /* \"contracts/1_Storage.sol\":8428:8483  require(amountAOptimal >= amountAMin, \"Insufficient A\") */\n      tag_60\n        /* \"#utility.yul\":11049:11387   */\n      jump\n        /* \"contracts/1_Storage.sol\":8428:8483  require(amountAOptimal >= amountAMin, \"Insufficient A\") */\n    tag_192:\n        /* \"contracts/1_Storage.sol\":8543:8557  amountAOptimal */\n      swap3\n      pop\n        /* \"contracts/1_Storage.sol\":8559:8573  amountBDesired */\n      dup6\n      swap2\n      pop\n        /* \"contracts/1_Storage.sol\":8097:8589  if (amountBOptimal <= amountBDesired) {... */\n    tag_189:\n        /* \"contracts/1_Storage.sol\":7950:8599  {... */\n      pop\n        /* \"contracts/1_Storage.sol\":7743:8599  if (currentReserveA == 0 && currentReserveB == 0) {... */\n    tag_182:\n        /* \"contracts/1_Storage.sol\":7446:8605  function _calculateLiquidityAmounts(... */\n      swap7\n      pop\n      swap7\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/1_Storage.sol\":8674:8981  function _performAddLiquidityTransfers(... */\n    tag_144:\n        /* \"contracts/1_Storage.sol\":8830:8897  IERC20(tokenA).safeTransferFrom(msg.sender, address(this), amountA) */\n      tag_196\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/1_Storage.sol\":8830:8861  IERC20(tokenA).safeTransferFrom */\n      dup6\n      and\n        /* \"contracts/1_Storage.sol\":8862:8872  msg.sender */\n      caller\n        /* \"contracts/1_Storage.sol\":8882:8886  this */\n      address\n        /* \"contracts/1_Storage.sol\":8889:8896  amountA */\n      dup6\n        /* \"contracts/1_Storage.sol\":8830:8861  IERC20(tokenA).safeTransferFrom */\n      tag_153\n        /* \"contracts/1_Storage.sol\":8830:8897  IERC20(tokenA).safeTransferFrom(msg.sender, address(this), amountA) */\n      jump\t// in\n    tag_196:\n        /* \"contracts/1_Storage.sol\":8907:8974  IERC20(tokenB).safeTransferFrom(msg.sender, address(this), amountB) */\n      tag_197\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/1_Storage.sol\":8907:8938  IERC20(tokenB).safeTransferFrom */\n      dup5\n      and\n        /* \"contracts/1_Storage.sol\":8939:8949  msg.sender */\n      caller\n        /* \"contracts/1_Storage.sol\":8959:8963  this */\n      address\n        /* \"contracts/1_Storage.sol\":8966:8973  amountB */\n      dup5\n        /* \"contracts/1_Storage.sol\":8907:8938  IERC20(tokenB).safeTransferFrom */\n      tag_153\n        /* \"contracts/1_Storage.sol\":8907:8974  IERC20(tokenB).safeTransferFrom(msg.sender, address(this), amountB) */\n      jump\t// in\n    tag_197:\n        /* \"contracts/1_Storage.sol\":8674:8981  function _performAddLiquidityTransfers(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/1_Storage.sol\":9050:9520  function _mintLiquidityAndUpdateReserves(... */\n    tag_146:\n        /* \"contracts/1_Storage.sol\":9273:9287  uint liquidity */\n      0x00\n        /* \"contracts/1_Storage.sol\":9311:9328  amountA + amountB */\n      tag_199\n        /* \"contracts/1_Storage.sol\":9321:9328  amountB */\n      dup5\n        /* \"contracts/1_Storage.sol\":9311:9318  amountA */\n      dup7\n        /* \"contracts/1_Storage.sol\":9311:9328  amountA + amountB */\n      tag_67\n      jump\t// in\n    tag_199:\n        /* \"contracts/1_Storage.sol\":9299:9328  liquidity = amountA + amountB */\n      swap1\n      pop\n        /* \"contracts/1_Storage.sol\":9366:9375  liquidity */\n      dup1\n        /* \"contracts/1_Storage.sol\":9338:9352  totalLiquidity */\n      0x01\n        /* \"contracts/1_Storage.sol\":9338:9362  totalLiquidity[pairHash] */\n      0x00\n        /* \"contracts/1_Storage.sol\":9353:9361  pairHash */\n      dup9\n        /* \"contracts/1_Storage.sol\":9338:9362  totalLiquidity[pairHash] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/1_Storage.sol\":9338:9375  totalLiquidity[pairHash] += liquidity */\n      dup3\n      dup3\n      sload\n      tag_200\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_200:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/1_Storage.sol\":9385:9411  liquidityBalance[pairHash] */\n      0x00\n      dup7\n      dup2\n      mstore\n        /* \"contracts/1_Storage.sol\":9385:9401  liquidityBalance */\n      0x02\n        /* \"contracts/1_Storage.sol\":9385:9411  liquidityBalance[pairHash] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/1_Storage.sol\":9385:9415  liquidityBalance[pairHash][to] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"contracts/1_Storage.sol\":9385:9428  liquidityBalance[pairHash][to] += liquidity */\n      dup1\n      sload\n        /* \"contracts/1_Storage.sol\":9419:9428  liquidity */\n      dup4\n      swap3\n        /* \"contracts/1_Storage.sol\":9385:9411  liquidityBalance[pairHash] */\n      swap1\n        /* \"contracts/1_Storage.sol\":9385:9428  liquidityBalance[pairHash][to] += liquidity */\n      tag_201\n      swap1\n        /* \"contracts/1_Storage.sol\":9419:9428  liquidity */\n      dup5\n      swap1\n        /* \"contracts/1_Storage.sol\":9385:9428  liquidityBalance[pairHash][to] += liquidity */\n      tag_67\n      jump\t// in\n    tag_201:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/1_Storage.sol\":9439:9471  res.reserveA += uint112(amountA) */\n      dup2\n      sload\n        /* \"contracts/1_Storage.sol\":9463:9470  amountA */\n      dup6\n      swap1\n        /* \"contracts/1_Storage.sol\":9439:9442  res */\n      dup4\n      swap1\n        /* \"contracts/1_Storage.sol\":9439:9451  res.reserveA */\n      0x00\n      swap1\n        /* \"contracts/1_Storage.sol\":9439:9471  res.reserveA += uint112(amountA) */\n      tag_202\n      swap1\n        /* \"contracts/1_Storage.sol\":9463:9470  amountA */\n      dup5\n      swap1\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"contracts/1_Storage.sol\":9439:9471  res.reserveA += uint112(amountA) */\n      and\n      tag_159\n      jump\t// in\n    tag_202:\n      swap3\n      pop\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      sub(shl(0x70, 0x01), 0x01)\n      mul\n      not\n      and\n      swap1\n      dup4\n      sub(shl(0x70, 0x01), 0x01)\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/1_Storage.sol\":9505:9512  amountB */\n      dup4\n        /* \"contracts/1_Storage.sol\":9481:9484  res */\n      dup3\n        /* \"contracts/1_Storage.sol\":9481:9493  res.reserveB */\n      0x00\n      add\n      0x0e\n        /* \"contracts/1_Storage.sol\":9481:9513  res.reserveB += uint112(amountB) */\n      dup3\n      dup3\n      dup3\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0x70, 0x01), 0x01)\n      and\n      tag_203\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_203:\n      swap3\n      pop\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      sub(shl(0x70, 0x01), 0x01)\n      mul\n      not\n      and\n      swap1\n      dup4\n      sub(shl(0x70, 0x01), 0x01)\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/1_Storage.sol\":9050:9520  function _mintLiquidityAndUpdateReserves(... */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_153:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":11612:11644   */\n      dup5\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":11594:11645   */\n      mstore\n        /* \"#utility.yul\":11681:11713   */\n      dup4\n      dup2\n      and\n        /* \"#utility.yul\":11661:11679   */\n      0x44\n      dup4\n      add\n        /* \"#utility.yul\":11654:11714   */\n      mstore\n        /* \"#utility.yul\":11730:11748   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11723:11757   */\n      dup4\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_197\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1738:1743  token */\n      dup7\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1778  token.transferFrom */\n      dup3\n      and\n      swap1\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":11567:11585   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      tag_176\n        /* \"#utility.yul\":11392:11763   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_178:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8450:8468  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8478:8497  uint256 returnValue */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8616:8620  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8613:8614  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8606:8610  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8600:8611  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8593:8597  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8587:8591  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8583:8598  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8580:8581  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8573:8578  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8566:8571  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8561:8621  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8673:8680  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n      tag_209\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8717:8721  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8711:8722  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8762:8778  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8759:8760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8754:8757  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8739:8779  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8808:8824  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8803:8806  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8796:8825  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n    tag_209:\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8916:8917  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8910:8918  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8866:8882  returndatasize() */\n      returndatasize\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8957  returnSize == 0 */\n      dup2\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_210\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9005  returnValue */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9009:9010  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9010  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_211)\n    tag_210:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8986  address(token).code.length */\n      dup5\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8991  address(token).code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_211:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_197\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      shl(0xe0, 0x5274afe7)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":11932:11964   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11914:11965   */\n      mstore\n        /* \"#utility.yul\":11887:11905   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      tag_60\n        /* \"#utility.yul\":11768:11971   */\n      jump\n        /* \"#utility.yul\":14:240   */\n    tag_14:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_219\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      0x00\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_219:\n      pop\n        /* \"#utility.yul\":187:210   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":14:240   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":572:1038   */\n    tag_20:\n        /* \"#utility.yul\":649:655   */\n      0x00\n        /* \"#utility.yul\":657:663   */\n      0x00\n        /* \"#utility.yul\":665:671   */\n      0x00\n        /* \"#utility.yul\":718:720   */\n      0x60\n        /* \"#utility.yul\":706:715   */\n      dup5\n        /* \"#utility.yul\":697:704   */\n      dup7\n        /* \"#utility.yul\":693:716   */\n      sub\n        /* \"#utility.yul\":689:721   */\n      slt\n        /* \"#utility.yul\":686:738   */\n      iszero\n      tag_222\n      jumpi\n        /* \"#utility.yul\":734:735   */\n      0x00\n        /* \"#utility.yul\":731:732   */\n      0x00\n        /* \"#utility.yul\":724:736   */\n      revert\n        /* \"#utility.yul\":686:738   */\n    tag_222:\n      pop\n      pop\n        /* \"#utility.yul\":779:802   */\n      dup2\n      calldataload\n      swap4\n        /* \"#utility.yul\":899:901   */\n      0x20\n        /* \"#utility.yul\":884:902   */\n      dup4\n      add\n        /* \"#utility.yul\":871:903   */\n      calldataload\n      swap4\n      pop\n        /* \"#utility.yul\":1002:1004   */\n      0x40\n        /* \"#utility.yul\":987:1005   */\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":974:1006   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":572:1038   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1225:1398   */\n    tag_215:\n        /* \"#utility.yul\":1293:1313   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1342:1373   */\n      dup2\n      and\n        /* \"#utility.yul\":1332:1374   */\n      dup2\n      eq\n        /* \"#utility.yul\":1322:1392   */\n      tag_225\n      jumpi\n        /* \"#utility.yul\":1388:1389   */\n      0x00\n        /* \"#utility.yul\":1385:1386   */\n      0x00\n        /* \"#utility.yul\":1378:1390   */\n      revert\n        /* \"#utility.yul\":1322:1392   */\n    tag_225:\n        /* \"#utility.yul\":1225:1398   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1403:2443   */\n    tag_26:\n        /* \"#utility.yul\":1525:1531   */\n      0x00\n        /* \"#utility.yul\":1533:1539   */\n      0x00\n        /* \"#utility.yul\":1541:1547   */\n      0x00\n        /* \"#utility.yul\":1549:1555   */\n      0x00\n        /* \"#utility.yul\":1557:1563   */\n      0x00\n        /* \"#utility.yul\":1565:1571   */\n      0x00\n        /* \"#utility.yul\":1618:1621   */\n      0xa0\n        /* \"#utility.yul\":1606:1615   */\n      dup8\n        /* \"#utility.yul\":1597:1604   */\n      dup10\n        /* \"#utility.yul\":1593:1616   */\n      sub\n        /* \"#utility.yul\":1589:1622   */\n      slt\n        /* \"#utility.yul\":1586:1639   */\n      iszero\n      tag_227\n      jumpi\n        /* \"#utility.yul\":1635:1636   */\n      0x00\n        /* \"#utility.yul\":1632:1633   */\n      0x00\n        /* \"#utility.yul\":1625:1637   */\n      revert\n        /* \"#utility.yul\":1586:1639   */\n    tag_227:\n        /* \"#utility.yul\":1680:1703   */\n      dup7\n      calldataload\n      swap6\n      pop\n        /* \"#utility.yul\":1800:1802   */\n      0x20\n        /* \"#utility.yul\":1785:1803   */\n      dup8\n      add\n        /* \"#utility.yul\":1772:1804   */\n      calldataload\n      swap5\n      pop\n        /* \"#utility.yul\":1881:1883   */\n      0x40\n        /* \"#utility.yul\":1866:1884   */\n      dup8\n      add\n        /* \"#utility.yul\":1853:1885   */\n      calldataload\n        /* \"#utility.yul\":1908:1926   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1897:1927   */\n      dup2\n      gt\n        /* \"#utility.yul\":1894:1944   */\n      iszero\n      tag_228\n      jumpi\n        /* \"#utility.yul\":1940:1941   */\n      0x00\n        /* \"#utility.yul\":1937:1938   */\n      0x00\n        /* \"#utility.yul\":1930:1942   */\n      revert\n        /* \"#utility.yul\":1894:1944   */\n    tag_228:\n        /* \"#utility.yul\":1963:1985   */\n      dup8\n      add\n        /* \"#utility.yul\":2016:2020   */\n      0x1f\n        /* \"#utility.yul\":2008:2021   */\n      dup2\n      add\n        /* \"#utility.yul\":2004:2031   */\n      dup10\n      sgt\n        /* \"#utility.yul\":1994:2049   */\n      tag_229\n      jumpi\n        /* \"#utility.yul\":2045:2046   */\n      0x00\n        /* \"#utility.yul\":2042:2043   */\n      0x00\n        /* \"#utility.yul\":2035:2047   */\n      revert\n        /* \"#utility.yul\":1994:2049   */\n    tag_229:\n        /* \"#utility.yul\":2085:2087   */\n      dup1\n        /* \"#utility.yul\":2072:2088   */\n      calldataload\n        /* \"#utility.yul\":2111:2129   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2103:2109   */\n      dup2\n        /* \"#utility.yul\":2100:2130   */\n      gt\n        /* \"#utility.yul\":2097:2147   */\n      iszero\n      tag_230\n      jumpi\n        /* \"#utility.yul\":2143:2144   */\n      0x00\n        /* \"#utility.yul\":2140:2141   */\n      0x00\n        /* \"#utility.yul\":2133:2145   */\n      revert\n        /* \"#utility.yul\":2097:2147   */\n    tag_230:\n        /* \"#utility.yul\":2196:2203   */\n      dup10\n        /* \"#utility.yul\":2191:2193   */\n      0x20\n        /* \"#utility.yul\":2181:2187   */\n      dup3\n        /* \"#utility.yul\":2178:2179   */\n      0x05\n        /* \"#utility.yul\":2174:2188   */\n      shl\n        /* \"#utility.yul\":2170:2172   */\n      dup5\n        /* \"#utility.yul\":2166:2189   */\n      add\n        /* \"#utility.yul\":2162:2194   */\n      add\n        /* \"#utility.yul\":2159:2204   */\n      gt\n        /* \"#utility.yul\":2156:2221   */\n      iszero\n      tag_231\n      jumpi\n        /* \"#utility.yul\":2217:2218   */\n      0x00\n        /* \"#utility.yul\":2214:2215   */\n      0x00\n        /* \"#utility.yul\":2207:2219   */\n      revert\n        /* \"#utility.yul\":2156:2221   */\n    tag_231:\n        /* \"#utility.yul\":2248:2250   */\n      0x20\n        /* \"#utility.yul\":2240:2251   */\n      swap2\n      swap1\n      swap2\n      add\n      swap5\n      pop\n        /* \"#utility.yul\":2270:2276   */\n      swap3\n      pop\n        /* \"#utility.yul\":2295:2333   */\n      tag_232\n        /* \"#utility.yul\":2329:2331   */\n      0x60\n        /* \"#utility.yul\":2314:2332   */\n      dup9\n      add\n        /* \"#utility.yul\":2295:2333   */\n      tag_215\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":1403:2443   */\n      swap6\n      swap9\n      swap5\n      swap8\n      pop\n      swap3\n      swap6\n      swap2\n      swap5\n      swap4\n        /* \"#utility.yul\":2406:2409   */\n      0x80\n        /* \"#utility.yul\":2391:2410   */\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":2378:2411   */\n      calldataload\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":1403:2443   */\n      jump\t// out\n        /* \"#utility.yul\":2448:3059   */\n    tag_29:\n        /* \"#utility.yul\":2638:2640   */\n      0x20\n        /* \"#utility.yul\":2650:2671   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":2720:2733   */\n      dup3\n      mload\n        /* \"#utility.yul\":2623:2641   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":2742:2764   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":2590:2594   */\n      0x00\n      swap2\n        /* \"#utility.yul\":2821:2836   */\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":2795:2797   */\n      0x40\n        /* \"#utility.yul\":2780:2798   */\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":2590:2594   */\n      dup4\n        /* \"#utility.yul\":2864:3033   */\n    tag_234:\n        /* \"#utility.yul\":2878:2884   */\n      dup2\n        /* \"#utility.yul\":2875:2876   */\n      dup2\n        /* \"#utility.yul\":2872:2885   */\n      lt\n        /* \"#utility.yul\":2864:3033   */\n      iszero\n      tag_236\n      jumpi\n        /* \"#utility.yul\":2939:2952   */\n      dup4\n      mload\n        /* \"#utility.yul\":2927:2953   */\n      dup4\n      mstore\n        /* \"#utility.yul\":2982:2984   */\n      0x20\n        /* \"#utility.yul\":3008:3023   */\n      swap4\n      dup5\n      add\n      swap4\n        /* \"#utility.yul\":2973:2985   */\n      swap1\n      swap3\n      add\n      swap2\n        /* \"#utility.yul\":2900:2901   */\n      0x01\n        /* \"#utility.yul\":2893:2902   */\n      add\n        /* \"#utility.yul\":2864:3033   */\n      jump(tag_234)\n    tag_236:\n      pop\n        /* \"#utility.yul\":3050:3053   */\n      swap1\n      swap6\n        /* \"#utility.yul\":2448:3059   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3064:3324   */\n    tag_36:\n        /* \"#utility.yul\":3132:3138   */\n      0x00\n        /* \"#utility.yul\":3140:3146   */\n      0x00\n        /* \"#utility.yul\":3193:3195   */\n      0x40\n        /* \"#utility.yul\":3181:3190   */\n      dup4\n        /* \"#utility.yul\":3172:3179   */\n      dup6\n        /* \"#utility.yul\":3168:3191   */\n      sub\n        /* \"#utility.yul\":3164:3196   */\n      slt\n        /* \"#utility.yul\":3161:3213   */\n      iszero\n      tag_238\n      jumpi\n        /* \"#utility.yul\":3209:3210   */\n      0x00\n        /* \"#utility.yul\":3206:3207   */\n      0x00\n        /* \"#utility.yul\":3199:3211   */\n      revert\n        /* \"#utility.yul\":3161:3213   */\n    tag_238:\n        /* \"#utility.yul\":3232:3261   */\n      tag_239\n        /* \"#utility.yul\":3251:3260   */\n      dup4\n        /* \"#utility.yul\":3232:3261   */\n      tag_215\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":3222:3261   */\n      swap2\n      pop\n        /* \"#utility.yul\":3280:3318   */\n      tag_240\n        /* \"#utility.yul\":3314:3316   */\n      0x20\n        /* \"#utility.yul\":3303:3312   */\n      dup5\n        /* \"#utility.yul\":3299:3317   */\n      add\n        /* \"#utility.yul\":3280:3318   */\n      tag_215\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":3270:3318   */\n      swap1\n      pop\n        /* \"#utility.yul\":3064:3324   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3329:4141   */\n    tag_41:\n        /* \"#utility.yul\":3442:3448   */\n      0x00\n        /* \"#utility.yul\":3450:3456   */\n      0x00\n        /* \"#utility.yul\":3458:3464   */\n      0x00\n        /* \"#utility.yul\":3466:3472   */\n      0x00\n        /* \"#utility.yul\":3474:3480   */\n      0x00\n        /* \"#utility.yul\":3482:3488   */\n      0x00\n        /* \"#utility.yul\":3490:3496   */\n      0x00\n        /* \"#utility.yul\":3543:3546   */\n      0xe0\n        /* \"#utility.yul\":3531:3540   */\n      dup9\n        /* \"#utility.yul\":3522:3529   */\n      dup11\n        /* \"#utility.yul\":3518:3541   */\n      sub\n        /* \"#utility.yul\":3514:3547   */\n      slt\n        /* \"#utility.yul\":3511:3564   */\n      iszero\n      tag_242\n      jumpi\n        /* \"#utility.yul\":3560:3561   */\n      0x00\n        /* \"#utility.yul\":3557:3558   */\n      0x00\n        /* \"#utility.yul\":3550:3562   */\n      revert\n        /* \"#utility.yul\":3511:3564   */\n    tag_242:\n        /* \"#utility.yul\":3583:3612   */\n      tag_243\n        /* \"#utility.yul\":3602:3611   */\n      dup9\n        /* \"#utility.yul\":3583:3612   */\n      tag_215\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":3573:3612   */\n      swap7\n      pop\n        /* \"#utility.yul\":3631:3669   */\n      tag_244\n        /* \"#utility.yul\":3665:3667   */\n      0x20\n        /* \"#utility.yul\":3654:3663   */\n      dup10\n        /* \"#utility.yul\":3650:3668   */\n      add\n        /* \"#utility.yul\":3631:3669   */\n      tag_215\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":3621:3669   */\n      swap6\n      pop\n        /* \"#utility.yul\":3738:3740   */\n      0x40\n        /* \"#utility.yul\":3723:3741   */\n      dup9\n      add\n        /* \"#utility.yul\":3710:3742   */\n      calldataload\n      swap5\n      pop\n        /* \"#utility.yul\":3839:3841   */\n      0x60\n        /* \"#utility.yul\":3824:3842   */\n      dup9\n      add\n        /* \"#utility.yul\":3811:3843   */\n      calldataload\n      swap4\n      pop\n        /* \"#utility.yul\":3942:3945   */\n      0x80\n        /* \"#utility.yul\":3927:3946   */\n      dup9\n      add\n        /* \"#utility.yul\":3914:3947   */\n      calldataload\n      swap3\n      pop\n        /* \"#utility.yul\":3992:4031   */\n      tag_245\n        /* \"#utility.yul\":4026:4029   */\n      0xa0\n        /* \"#utility.yul\":4011:4030   */\n      dup10\n      add\n        /* \"#utility.yul\":3992:4031   */\n      tag_215\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":3329:4141   */\n      swap7\n      swap10\n      swap6\n      swap9\n      pop\n      swap4\n      swap7\n      swap3\n      swap6\n      swap2\n      swap5\n      swap2\n      swap4\n      pop\n      pop\n        /* \"#utility.yul\":4104:4107   */\n      0xc0\n        /* \"#utility.yul\":4089:4108   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":4076:4109   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":3329:4141   */\n      jump\t// out\n        /* \"#utility.yul\":4399:4699   */\n    tag_47:\n        /* \"#utility.yul\":4467:4473   */\n      0x00\n        /* \"#utility.yul\":4475:4481   */\n      0x00\n        /* \"#utility.yul\":4528:4530   */\n      0x40\n        /* \"#utility.yul\":4516:4525   */\n      dup4\n        /* \"#utility.yul\":4507:4514   */\n      dup6\n        /* \"#utility.yul\":4503:4526   */\n      sub\n        /* \"#utility.yul\":4499:4531   */\n      slt\n        /* \"#utility.yul\":4496:4548   */\n      iszero\n      tag_248\n      jumpi\n        /* \"#utility.yul\":4544:4545   */\n      0x00\n        /* \"#utility.yul\":4541:4542   */\n      0x00\n        /* \"#utility.yul\":4534:4546   */\n      revert\n        /* \"#utility.yul\":4496:4548   */\n    tag_248:\n        /* \"#utility.yul\":4589:4612   */\n      dup3\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":4655:4693   */\n      tag_240\n        /* \"#utility.yul\":4689:4691   */\n      0x20\n        /* \"#utility.yul\":4674:4692   */\n      dup5\n      add\n        /* \"#utility.yul\":4655:4693   */\n      tag_215\n      jump\t// in\n        /* \"#utility.yul\":4704:5637   */\n    tag_52:\n        /* \"#utility.yul\":4826:4832   */\n      0x00\n        /* \"#utility.yul\":4834:4840   */\n      0x00\n        /* \"#utility.yul\":4842:4848   */\n      0x00\n        /* \"#utility.yul\":4850:4856   */\n      0x00\n        /* \"#utility.yul\":4858:4864   */\n      0x00\n        /* \"#utility.yul\":4866:4872   */\n      0x00\n        /* \"#utility.yul\":4874:4880   */\n      0x00\n        /* \"#utility.yul\":4882:4888   */\n      0x00\n        /* \"#utility.yul\":4935:4938   */\n      0x0100\n        /* \"#utility.yul\":4923:4932   */\n      dup10\n        /* \"#utility.yul\":4914:4921   */\n      dup12\n        /* \"#utility.yul\":4910:4933   */\n      sub\n        /* \"#utility.yul\":4906:4939   */\n      slt\n        /* \"#utility.yul\":4903:4956   */\n      iszero\n      tag_251\n      jumpi\n        /* \"#utility.yul\":4952:4953   */\n      0x00\n        /* \"#utility.yul\":4949:4950   */\n      0x00\n        /* \"#utility.yul\":4942:4954   */\n      revert\n        /* \"#utility.yul\":4903:4956   */\n    tag_251:\n        /* \"#utility.yul\":4975:5004   */\n      tag_252\n        /* \"#utility.yul\":4994:5003   */\n      dup10\n        /* \"#utility.yul\":4975:5004   */\n      tag_215\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":4965:5004   */\n      swap8\n      pop\n        /* \"#utility.yul\":5023:5061   */\n      tag_253\n        /* \"#utility.yul\":5057:5059   */\n      0x20\n        /* \"#utility.yul\":5046:5055   */\n      dup11\n        /* \"#utility.yul\":5042:5060   */\n      add\n        /* \"#utility.yul\":5023:5061   */\n      tag_215\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":5013:5061   */\n      swap7\n      pop\n        /* \"#utility.yul\":5130:5132   */\n      0x40\n        /* \"#utility.yul\":5115:5133   */\n      dup10\n      add\n        /* \"#utility.yul\":5102:5134   */\n      calldataload\n      swap6\n      pop\n        /* \"#utility.yul\":5231:5233   */\n      0x60\n        /* \"#utility.yul\":5216:5234   */\n      dup10\n      add\n        /* \"#utility.yul\":5203:5235   */\n      calldataload\n      swap5\n      pop\n        /* \"#utility.yul\":5334:5337   */\n      0x80\n        /* \"#utility.yul\":5319:5338   */\n      dup10\n      add\n        /* \"#utility.yul\":5306:5339   */\n      calldataload\n      swap4\n      pop\n        /* \"#utility.yul\":5438:5441   */\n      0xa0\n        /* \"#utility.yul\":5423:5442   */\n      dup10\n      add\n        /* \"#utility.yul\":5410:5443   */\n      calldataload\n      swap3\n      pop\n        /* \"#utility.yul\":5488:5527   */\n      tag_254\n        /* \"#utility.yul\":5522:5525   */\n      0xc0\n        /* \"#utility.yul\":5507:5526   */\n      dup11\n      add\n        /* \"#utility.yul\":5488:5527   */\n      tag_215\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":4704:5637   */\n      swap8\n      swap11\n      swap7\n      swap10\n      pop\n      swap5\n      swap8\n      swap4\n      swap7\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n        /* \"#utility.yul\":5478:5527   */\n      swap2\n      swap3\n        /* \"#utility.yul\":5600:5603   */\n      0xe0\n        /* \"#utility.yul\":5585:5604   */\n      add\n        /* \"#utility.yul\":5572:5605   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":4704:5637   */\n      jump\t// out\n        /* \"#utility.yul\":6311:6438   */\n    tag_216:\n        /* \"#utility.yul\":6372:6382   */\n      0x4e487b71\n        /* \"#utility.yul\":6367:6370   */\n      0xe0\n        /* \"#utility.yul\":6363:6383   */\n      shl\n        /* \"#utility.yul\":6360:6361   */\n      0x00\n        /* \"#utility.yul\":6353:6384   */\n      mstore\n        /* \"#utility.yul\":6403:6407   */\n      0x11\n        /* \"#utility.yul\":6400:6401   */\n      0x04\n        /* \"#utility.yul\":6393:6408   */\n      mstore\n        /* \"#utility.yul\":6427:6431   */\n      0x24\n        /* \"#utility.yul\":6424:6425   */\n      0x00\n        /* \"#utility.yul\":6417:6432   */\n      revert\n        /* \"#utility.yul\":6443:6611   */\n    tag_63:\n        /* \"#utility.yul\":6516:6525   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":6547:6556   */\n      dup2\n      iszero\n        /* \"#utility.yul\":6564:6579   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":6558:6580   */\n      dup5\n      eq\n        /* \"#utility.yul\":6544:6581   */\n      or\n        /* \"#utility.yul\":6534:6605   */\n      tag_164\n      jumpi\n        /* \"#utility.yul\":6585:6603   */\n      tag_164\n      tag_216\n      jump\t// in\n        /* \"#utility.yul\":6616:6741   */\n    tag_67:\n        /* \"#utility.yul\":6681:6690   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":6702:6712   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":6699:6735   */\n      iszero\n      tag_164\n      jumpi\n        /* \"#utility.yul\":6715:6733   */\n      tag_164\n      tag_216\n      jump\t// in\n        /* \"#utility.yul\":6746:6963   */\n    tag_69:\n        /* \"#utility.yul\":6786:6787   */\n      0x00\n        /* \"#utility.yul\":6812:6813   */\n      dup3\n        /* \"#utility.yul\":6802:6934   */\n      tag_265\n      jumpi\n        /* \"#utility.yul\":6856:6866   */\n      0x4e487b71\n        /* \"#utility.yul\":6851:6854   */\n      0xe0\n        /* \"#utility.yul\":6847:6867   */\n      shl\n        /* \"#utility.yul\":6844:6845   */\n      0x00\n        /* \"#utility.yul\":6837:6868   */\n      mstore\n        /* \"#utility.yul\":6891:6895   */\n      0x12\n        /* \"#utility.yul\":6888:6889   */\n      0x04\n        /* \"#utility.yul\":6881:6896   */\n      mstore\n        /* \"#utility.yul\":6919:6923   */\n      0x24\n        /* \"#utility.yul\":6916:6917   */\n      0x00\n        /* \"#utility.yul\":6909:6924   */\n      revert\n        /* \"#utility.yul\":6802:6934   */\n    tag_265:\n      pop\n        /* \"#utility.yul\":6948:6957   */\n      div\n      swap1\n        /* \"#utility.yul\":6746:6963   */\n      jump\t// out\n        /* \"#utility.yul\":6968:7298   */\n    tag_73:\n        /* \"#utility.yul\":7170:7172   */\n      0x20\n        /* \"#utility.yul\":7152:7173   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7209:7210   */\n      0x07\n        /* \"#utility.yul\":7189:7207   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7182:7211   */\n      mstore\n      shl(0xca, 0x115e1c1a5c9959)\n        /* \"#utility.yul\":7242:7244   */\n      0x40\n        /* \"#utility.yul\":7227:7245   */\n      dup3\n      add\n        /* \"#utility.yul\":7220:7257   */\n      mstore\n        /* \"#utility.yul\":7289:7291   */\n      0x60\n        /* \"#utility.yul\":7274:7292   */\n      add\n      swap1\n        /* \"#utility.yul\":6968:7298   */\n      jump\t// out\n        /* \"#utility.yul\":7659:7786   */\n    tag_79:\n        /* \"#utility.yul\":7720:7730   */\n      0x4e487b71\n        /* \"#utility.yul\":7715:7718   */\n      0xe0\n        /* \"#utility.yul\":7711:7731   */\n      shl\n        /* \"#utility.yul\":7708:7709   */\n      0x00\n        /* \"#utility.yul\":7701:7732   */\n      mstore\n        /* \"#utility.yul\":7751:7755   */\n      0x32\n        /* \"#utility.yul\":7748:7749   */\n      0x04\n        /* \"#utility.yul\":7741:7756   */\n      mstore\n        /* \"#utility.yul\":7775:7779   */\n      0x24\n        /* \"#utility.yul\":7772:7773   */\n      0x00\n        /* \"#utility.yul\":7765:7780   */\n      revert\n        /* \"#utility.yul\":7791:7977   */\n    tag_81:\n        /* \"#utility.yul\":7850:7856   */\n      0x00\n        /* \"#utility.yul\":7903:7905   */\n      0x20\n        /* \"#utility.yul\":7891:7900   */\n      dup3\n        /* \"#utility.yul\":7882:7889   */\n      dup5\n        /* \"#utility.yul\":7878:7901   */\n      sub\n        /* \"#utility.yul\":7874:7906   */\n      slt\n        /* \"#utility.yul\":7871:7923   */\n      iszero\n      tag_270\n      jumpi\n        /* \"#utility.yul\":7919:7920   */\n      0x00\n        /* \"#utility.yul\":7916:7917   */\n      0x00\n        /* \"#utility.yul\":7909:7921   */\n      revert\n        /* \"#utility.yul\":7871:7923   */\n    tag_270:\n        /* \"#utility.yul\":7942:7971   */\n      tag_271\n        /* \"#utility.yul\":7961:7970   */\n      dup3\n        /* \"#utility.yul\":7942:7971   */\n      tag_215\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":7932:7971   */\n      swap4\n        /* \"#utility.yul\":7791:7977   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9479:9607   */\n    tag_129:\n        /* \"#utility.yul\":9546:9555   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":9567:9578   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":9564:9601   */\n      iszero\n      tag_164\n      jumpi\n        /* \"#utility.yul\":9581:9599   */\n      tag_164\n      tag_216\n      jump\t// in\n        /* \"#utility.yul\":9612:9843   */\n    tag_132:\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"#utility.yul\":9723:9761   */\n      dup3\n      dup2\n      and\n        /* \"#utility.yul\":9683:9721   */\n      dup3\n      dup3\n      and\n        /* \"#utility.yul\":9679:9762   */\n      sub\n      swap1\n        /* \"#utility.yul\":9774:9814   */\n      dup2\n      gt\n        /* \"#utility.yul\":9771:9837   */\n      iszero\n      tag_164\n      jumpi\n        /* \"#utility.yul\":9817:9835   */\n      tag_164\n      tag_216\n      jump\t// in\n        /* \"#utility.yul\":9848:10076   */\n    tag_159:\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"#utility.yul\":9917:9955   */\n      dup2\n      dup2\n      and\n        /* \"#utility.yul\":9957:9995   */\n      dup4\n      dup3\n      and\n        /* \"#utility.yul\":9913:9996   */\n      add\n      swap1\n        /* \"#utility.yul\":10008:10047   */\n      dup2\n      gt\n        /* \"#utility.yul\":10005:10070   */\n      iszero\n      tag_164\n      jumpi\n        /* \"#utility.yul\":10050:10068   */\n      tag_164\n      tag_216\n      jump\t// in\n\n    auxdata: 0xa26469706673582212206f6c62f49a7f678eec9b851aa1b24212e2aafa7515b6671161d3839c453e7bef64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f5ffd5b5061115c8061001c5f395ff3fe608060405234801561000f575f5ffd5b5060043610610084575f3560e01c8063ac41865a11610058578063ac41865a14610140578063baa2abde14610153578063bb521a301461017b578063e8e33700146101a5575f5ffd5b8062bbf1e414610088578063054d50d4146100e057806338ed17391461010157806354b7a8f714610121575b5f5ffd5b6100bb610096366004610dbd565b5f602081905290815260409020546001600160701b0380821691600160701b90041682565b604080516001600160701b039384168152929091166020830152015b60405180910390f35b6100f36100ee366004610dd4565b6101d3565b6040519081526020016100d7565b61011461010f366004610e18565b61027c565b6040516100d79190610eb6565b6100f361012f366004610dbd565b60016020525f908152604090205481565b6100f361014e366004610ef8565b61041c565b610166610161366004610f29565b6104d4565b604080519283526020830191909152016100d7565b6100f3610189366004610f91565b600260209081525f928352604080842090915290825290205481565b6101b86101b3366004610fb2565b610708565b604080519384526020840192909252908201526060016100d7565b5f5f841180156101e257505f83115b80156101ed57505f82115b6102315760405162461bcd60e51b815260206004820152601060248201526f496e76616c696420726573657276657360801b60448201526064015b60405180910390fd5b5f61023e856103e5611037565b90505f61024b8483611037565b90505f8261025b876103e8611037565b610265919061104e565b90506102718183611061565b979650505050505050565b60608142111561029e5760405162461bcd60e51b815260040161022890611080565b600284146102ee5760405162461bcd60e51b815260206004820152601b60248201527f4f6e6c7920322d746f6b656e207061746820737570706f7274656400000000006044820152606401610228565b5f85855f818110610301576103016110a1565b905060200201602081019061031691906110b5565b90505f8686600181811061032c5761032c6110a1565b905060200201602081019061034191906110b5565b90505f61034f8a848461079a565b9050888110156103975760405162461bcd60e51b8152602060048201526013602482015272125b9cdd59999a58da595b9d081bdd5d1c1d5d606a1b6044820152606401610228565b6103a483838c848a610804565b6103b083838c84610834565b604080516002808252606082018352909160208301908036833701905050935089845f815181106103e3576103e36110a1565b6020026020010181815250508084600181518110610403576104036110a1565b6020026020010181815250505050509695505050505050565b5f5f610428848461098a565b5f818152602081815260408083208151808301909252546001600160701b038082168352600160701b90910416918101919091529192508061046b878785610a16565b915091505f8211801561047d57505f81115b6104b75760405162461bcd60e51b815260206004820152600b60248201526a4e6f20726573657276657360a81b6044820152606401610228565b816104ca82670de0b6b3a7640000611037565b6102719190611061565b5f5f824211156104f65760405162461bcd60e51b815260040161022890611080565b5f6105018a8a61098a565b5f8181526020818152604080832060019092529091205491925090806105585760405162461bcd60e51b815260206004820152600c60248201526b4e6f206c697175696469747960a01b6044820152606401610228565b81548190610570908c906001600160701b0316611037565b61057a9190611061565b8254909550819061059c908c90600160701b90046001600160701b0316611037565b6105a69190611061565b93508885101580156105b85750878410155b6105ef5760405162461bcd60e51b8152602060048201526008602482015267536c69707061676560c01b6044820152606401610228565b5f838152600260209081526040808320338452909152812080548c92906106179084906110d5565b90915550505f83815260016020526040812080548c92906106399084906110d5565b90915550508154859083905f9061065a9084906001600160701b03166110e8565b92506101000a8154816001600160701b0302191690836001600160701b0316021790555083825f01600e8282829054906101000a90046001600160701b03166106a391906110e8565b92506101000a8154816001600160701b0302191690836001600160701b031602179055506106e587868e6001600160a01b0316610a5c9092919063ffffffff16565b6106f96001600160a01b038c168886610a5c565b50505097509795505050505050565b5f5f5f8342111561072b5760405162461bcd60e51b815260040161022890611080565b5f6107368c8c61098a565b5f81815260208190526040902080549192509061076a906001600160701b0380821691600160701b9004168d8d8d8d610ac0565b909550935061077b8d8d8787610bee565b6107888286868a85610c1e565b92505050985098509895505050505050565b5f5f6107a6848461098a565b5f818152602081815260408083208151808301909252546001600160701b038082168352600160701b9091041691810191909152919250806107e9878785610a16565b915091506107f88883836101d3565b98975050505050505050565b6108196001600160a01b038616333086610d18565b61082d6001600160a01b0385168284610a5c565b5050505050565b5f61083f858561098a565b5f8181526020819052604090209091506001600160a01b0380861690871610156108f1578054849082905f9061087f9084906001600160701b0316611107565b92506101000a8154816001600160701b0302191690836001600160701b0316021790555082815f01600e8282829054906101000a90046001600160701b03166108c891906110e8565b92506101000a8154816001600160701b0302191690836001600160701b03160217905550610982565b805484908290600e90610915908490600160701b90046001600160701b0316611107565b92506101000a8154816001600160701b0302191690836001600160701b0316021790555082815f015f8282829054906101000a90046001600160701b031661095d91906110e8565b92506101000a8154816001600160701b0302191690836001600160701b031602179055505b505050505050565b5f816001600160a01b0316836001600160a01b0316106109aa57816109ac565b825b826001600160a01b0316846001600160a01b0316106109cb57836109cd565b825b6040516bffffffffffffffffffffffff19606093841b811660208301529190921b1660348201526048016040516020818303038152906040528051906020012090505b92915050565b5f5f836001600160a01b0316856001600160a01b031610610a3d5760208301518351610a45565b825160208401515b6001600160701b0391821697911695509350505050565b6040516001600160a01b03838116602483015260448201839052610abb91859182169063a9059cbb906064015b604051602081830303815290604052915060e01b6020820180516001600160e01b038381831617835250505050610d51565b505050565b5f806001600160701b038816158015610ae057506001600160701b038716155b15610aef575084905083610be3565b5f886001600160701b0316886001600160701b031688610b0f9190611037565b610b199190611061565b9050858111610b6e5783811015610b635760405162461bcd60e51b815260206004820152600e60248201526d24b739bab33334b1b4b2b73a102160911b6044820152606401610228565b869250905080610be1565b5f886001600160701b03168a6001600160701b031688610b8e9190611037565b610b989190611061565b905085811015610bdb5760405162461bcd60e51b815260206004820152600e60248201526d496e73756666696369656e74204160901b6044820152606401610228565b92508591505b505b965096945050505050565b610c036001600160a01b038516333085610d18565b610c186001600160a01b038416333084610d18565b50505050565b5f610c29848661104e565b90508060015f8881526020019081526020015f205f828254610c4b919061104e565b90915550505f8681526002602090815260408083206001600160a01b038716845290915281208054839290610c8190849061104e565b90915550508154859083905f90610ca29084906001600160701b0316611107565b92506101000a8154816001600160701b0302191690836001600160701b0316021790555083825f01600e8282829054906101000a90046001600160701b0316610ceb9190611107565b92506101000a8154816001600160701b0302191690836001600160701b0316021790555095945050505050565b6040516001600160a01b038481166024830152838116604483015260648201839052610c189186918216906323b872dd90608401610a89565b5f5f60205f8451602086015f885af180610d70576040513d5f823e3d81fd5b50505f513d91508115610d87578060011415610d94565b6001600160a01b0384163b155b15610c1857604051635274afe760e01b81526001600160a01b0385166004820152602401610228565b5f60208284031215610dcd575f5ffd5b5035919050565b5f5f5f60608486031215610de6575f5ffd5b505081359360208301359350604090920135919050565b80356001600160a01b0381168114610e13575f5ffd5b919050565b5f5f5f5f5f5f60a08789031215610e2d575f5ffd5b8635955060208701359450604087013567ffffffffffffffff811115610e51575f5ffd5b8701601f81018913610e61575f5ffd5b803567ffffffffffffffff811115610e77575f5ffd5b8960208260051b8401011115610e8b575f5ffd5b60209190910194509250610ea160608801610dfd565b95989497509295919493608090920135925050565b602080825282518282018190525f918401906040840190835b81811015610eed578351835260209384019390920191600101610ecf565b509095945050505050565b5f5f60408385031215610f09575f5ffd5b610f1283610dfd565b9150610f2060208401610dfd565b90509250929050565b5f5f5f5f5f5f5f60e0888a031215610f3f575f5ffd5b610f4888610dfd565b9650610f5660208901610dfd565b9550604088013594506060880135935060808801359250610f7960a08901610dfd565b96999598509396929591949193505060c09091013590565b5f5f60408385031215610fa2575f5ffd5b82359150610f2060208401610dfd565b5f5f5f5f5f5f5f5f610100898b031215610fca575f5ffd5b610fd389610dfd565b9750610fe160208a01610dfd565b965060408901359550606089013594506080890135935060a0890135925061100b60c08a01610dfd565b979a969950949793969295919450919260e001359150565b634e487b7160e01b5f52601160045260245ffd5b8082028115828204841417610a1057610a10611023565b80820180821115610a1057610a10611023565b5f8261107b57634e487b7160e01b5f52601260045260245ffd5b500490565b602080825260079082015266115e1c1a5c995960ca1b604082015260600190565b634e487b7160e01b5f52603260045260245ffd5b5f602082840312156110c5575f5ffd5b6110ce82610dfd565b9392505050565b81810381811115610a1057610a10611023565b6001600160701b038281168282160390811115610a1057610a10611023565b6001600160701b038181168382160190811115610a1057610a1061102356fea26469706673582212206f6c62f49a7f678eec9b851aa1b24212e2aafa7515b6671161d3839c453e7bef64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x115C DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x84 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAC41865A GT PUSH2 0x58 JUMPI DUP1 PUSH4 0xAC41865A EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0xBAA2ABDE EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0xBB521A30 EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0xE8E33700 EQ PUSH2 0x1A5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH3 0xBBF1E4 EQ PUSH2 0x88 JUMPI DUP1 PUSH4 0x54D50D4 EQ PUSH2 0xE0 JUMPI DUP1 PUSH4 0x38ED1739 EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x54B7A8F7 EQ PUSH2 0x121 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xBB PUSH2 0x96 CALLDATASIZE PUSH1 0x4 PUSH2 0xDBD JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV AND DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF3 PUSH2 0xEE CALLDATASIZE PUSH1 0x4 PUSH2 0xDD4 JUMP JUMPDEST PUSH2 0x1D3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD7 JUMP JUMPDEST PUSH2 0x114 PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0xE18 JUMP JUMPDEST PUSH2 0x27C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD7 SWAP2 SWAP1 PUSH2 0xEB6 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x12F CALLDATASIZE PUSH1 0x4 PUSH2 0xDBD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x14E CALLDATASIZE PUSH1 0x4 PUSH2 0xEF8 JUMP JUMPDEST PUSH2 0x41C JUMP JUMPDEST PUSH2 0x166 PUSH2 0x161 CALLDATASIZE PUSH1 0x4 PUSH2 0xF29 JUMP JUMPDEST PUSH2 0x4D4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0xD7 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x189 CALLDATASIZE PUSH1 0x4 PUSH2 0xF91 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1B8 PUSH2 0x1B3 CALLDATASIZE PUSH1 0x4 PUSH2 0xFB2 JUMP JUMPDEST PUSH2 0x708 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0xD7 JUMP JUMPDEST PUSH0 PUSH0 DUP5 GT DUP1 ISZERO PUSH2 0x1E2 JUMPI POP PUSH0 DUP4 GT JUMPDEST DUP1 ISZERO PUSH2 0x1ED JUMPI POP PUSH0 DUP3 GT JUMPDEST PUSH2 0x231 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x496E76616C6964207265736572766573 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x23E DUP6 PUSH2 0x3E5 PUSH2 0x1037 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x24B DUP5 DUP4 PUSH2 0x1037 JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH2 0x25B DUP8 PUSH2 0x3E8 PUSH2 0x1037 JUMP JUMPDEST PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x104E JUMP JUMPDEST SWAP1 POP PUSH2 0x271 DUP2 DUP4 PUSH2 0x1061 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 TIMESTAMP GT ISZERO PUSH2 0x29E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x228 SWAP1 PUSH2 0x1080 JUMP JUMPDEST PUSH1 0x2 DUP5 EQ PUSH2 0x2EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920322D746F6B656E207061746820737570706F727465640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x228 JUMP JUMPDEST PUSH0 DUP6 DUP6 PUSH0 DUP2 DUP2 LT PUSH2 0x301 JUMPI PUSH2 0x301 PUSH2 0x10A1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x316 SWAP2 SWAP1 PUSH2 0x10B5 JUMP JUMPDEST SWAP1 POP PUSH0 DUP7 DUP7 PUSH1 0x1 DUP2 DUP2 LT PUSH2 0x32C JUMPI PUSH2 0x32C PUSH2 0x10A1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x341 SWAP2 SWAP1 PUSH2 0x10B5 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x34F DUP11 DUP5 DUP5 PUSH2 0x79A JUMP JUMPDEST SWAP1 POP DUP9 DUP2 LT ISZERO PUSH2 0x397 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x125B9CDD59999A58DA595B9D081BDD5D1C1D5D PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x228 JUMP JUMPDEST PUSH2 0x3A4 DUP4 DUP4 DUP13 DUP5 DUP11 PUSH2 0x804 JUMP JUMPDEST PUSH2 0x3B0 DUP4 DUP4 DUP13 DUP5 PUSH2 0x834 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE SWAP1 SWAP2 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP4 POP DUP10 DUP5 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x3E3 JUMPI PUSH2 0x3E3 PUSH2 0x10A1 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP5 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x403 JUMPI PUSH2 0x403 PUSH2 0x10A1 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP POP POP POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x428 DUP5 DUP5 PUSH2 0x98A JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP3 AND DUP4 MSTORE PUSH1 0x1 PUSH1 0x70 SHL SWAP1 SWAP2 DIV AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP3 POP DUP1 PUSH2 0x46B DUP8 DUP8 DUP6 PUSH2 0xA16 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH0 DUP3 GT DUP1 ISZERO PUSH2 0x47D JUMPI POP PUSH0 DUP2 GT JUMPDEST PUSH2 0x4B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x4E6F207265736572766573 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x228 JUMP JUMPDEST DUP2 PUSH2 0x4CA DUP3 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1037 JUMP JUMPDEST PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x1061 JUMP JUMPDEST PUSH0 PUSH0 DUP3 TIMESTAMP GT ISZERO PUSH2 0x4F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x228 SWAP1 PUSH2 0x1080 JUMP JUMPDEST PUSH0 PUSH2 0x501 DUP11 DUP11 PUSH2 0x98A JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD SWAP2 SWAP3 POP SWAP1 DUP1 PUSH2 0x558 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x4E6F206C6971756964697479 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x228 JUMP JUMPDEST DUP2 SLOAD DUP2 SWAP1 PUSH2 0x570 SWAP1 DUP13 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND PUSH2 0x1037 JUMP JUMPDEST PUSH2 0x57A SWAP2 SWAP1 PUSH2 0x1061 JUMP JUMPDEST DUP3 SLOAD SWAP1 SWAP6 POP DUP2 SWAP1 PUSH2 0x59C SWAP1 DUP13 SWAP1 PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND PUSH2 0x1037 JUMP JUMPDEST PUSH2 0x5A6 SWAP2 SWAP1 PUSH2 0x1061 JUMP JUMPDEST SWAP4 POP DUP9 DUP6 LT ISZERO DUP1 ISZERO PUSH2 0x5B8 JUMPI POP DUP8 DUP5 LT ISZERO JUMPDEST PUSH2 0x5EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH8 0x536C697070616765 PUSH1 0xC0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x228 JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP13 SWAP3 SWAP1 PUSH2 0x617 SWAP1 DUP5 SWAP1 PUSH2 0x10D5 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP13 SWAP3 SWAP1 PUSH2 0x639 SWAP1 DUP5 SWAP1 PUSH2 0x10D5 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP2 SLOAD DUP6 SWAP1 DUP4 SWAP1 PUSH0 SWAP1 PUSH2 0x65A SWAP1 DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND PUSH2 0x10E8 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP4 DUP3 PUSH0 ADD PUSH1 0xE DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND PUSH2 0x6A3 SWAP2 SWAP1 PUSH2 0x10E8 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH2 0x6E5 DUP8 DUP7 DUP15 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xA5C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x6F9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP9 DUP7 PUSH2 0xA5C JUMP JUMPDEST POP POP POP SWAP8 POP SWAP8 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 TIMESTAMP GT ISZERO PUSH2 0x72B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x228 SWAP1 PUSH2 0x1080 JUMP JUMPDEST PUSH0 PUSH2 0x736 DUP13 DUP13 PUSH2 0x98A JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0x76A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV AND DUP14 DUP14 DUP14 DUP14 PUSH2 0xAC0 JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP PUSH2 0x77B DUP14 DUP14 DUP8 DUP8 PUSH2 0xBEE JUMP JUMPDEST PUSH2 0x788 DUP3 DUP7 DUP7 DUP11 DUP6 PUSH2 0xC1E JUMP JUMPDEST SWAP3 POP POP POP SWAP9 POP SWAP9 POP SWAP9 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x7A6 DUP5 DUP5 PUSH2 0x98A JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP3 AND DUP4 MSTORE PUSH1 0x1 PUSH1 0x70 SHL SWAP1 SWAP2 DIV AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP3 POP DUP1 PUSH2 0x7E9 DUP8 DUP8 DUP6 PUSH2 0xA16 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x7F8 DUP9 DUP4 DUP4 PUSH2 0x1D3 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x819 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND CALLER ADDRESS DUP7 PUSH2 0xD18 JUMP JUMPDEST PUSH2 0x82D PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP3 DUP5 PUSH2 0xA5C JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x83F DUP6 DUP6 PUSH2 0x98A JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND SWAP1 DUP8 AND LT ISZERO PUSH2 0x8F1 JUMPI DUP1 SLOAD DUP5 SWAP1 DUP3 SWAP1 PUSH0 SWAP1 PUSH2 0x87F SWAP1 DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND PUSH2 0x1107 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP3 DUP2 PUSH0 ADD PUSH1 0xE DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND PUSH2 0x8C8 SWAP2 SWAP1 PUSH2 0x10E8 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH2 0x982 JUMP JUMPDEST DUP1 SLOAD DUP5 SWAP1 DUP3 SWAP1 PUSH1 0xE SWAP1 PUSH2 0x915 SWAP1 DUP5 SWAP1 PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND PUSH2 0x1107 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP3 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND PUSH2 0x95D SWAP2 SWAP1 PUSH2 0x10E8 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND MUL OR SWAP1 SSTORE POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT PUSH2 0x9AA JUMPI DUP2 PUSH2 0x9AC JUMP JUMPDEST DUP3 JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT PUSH2 0x9CB JUMPI DUP4 PUSH2 0x9CD JUMP JUMPDEST DUP3 JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 SWAP4 DUP5 SHL DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE SWAP2 SWAP1 SWAP3 SHL AND PUSH1 0x34 DUP3 ADD MSTORE PUSH1 0x48 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT PUSH2 0xA3D JUMPI PUSH1 0x20 DUP4 ADD MLOAD DUP4 MLOAD PUSH2 0xA45 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x20 DUP5 ADD MLOAD JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SWAP2 DUP3 AND SWAP8 SWAP2 AND SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0xABB SWAP2 DUP6 SWAP2 DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xD51 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP9 AND ISZERO DUP1 ISZERO PUSH2 0xAE0 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP8 AND ISZERO JUMPDEST ISZERO PUSH2 0xAEF JUMPI POP DUP5 SWAP1 POP DUP4 PUSH2 0xBE3 JUMP JUMPDEST PUSH0 DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND DUP9 PUSH2 0xB0F SWAP2 SWAP1 PUSH2 0x1037 JUMP JUMPDEST PUSH2 0xB19 SWAP2 SWAP1 PUSH2 0x1061 JUMP JUMPDEST SWAP1 POP DUP6 DUP2 GT PUSH2 0xB6E JUMPI DUP4 DUP2 LT ISZERO PUSH2 0xB63 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x24B739BAB33334B1B4B2B73A1021 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x228 JUMP JUMPDEST DUP7 SWAP3 POP SWAP1 POP DUP1 PUSH2 0xBE1 JUMP JUMPDEST PUSH0 DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND DUP9 PUSH2 0xB8E SWAP2 SWAP1 PUSH2 0x1037 JUMP JUMPDEST PUSH2 0xB98 SWAP2 SWAP1 PUSH2 0x1061 JUMP JUMPDEST SWAP1 POP DUP6 DUP2 LT ISZERO PUSH2 0xBDB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x496E73756666696369656E742041 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x228 JUMP JUMPDEST SWAP3 POP DUP6 SWAP2 POP JUMPDEST POP JUMPDEST SWAP7 POP SWAP7 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xC03 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER ADDRESS DUP6 PUSH2 0xD18 JUMP JUMPDEST PUSH2 0xC18 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND CALLER ADDRESS DUP5 PUSH2 0xD18 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC29 DUP5 DUP7 PUSH2 0x104E JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xC4B SWAP2 SWAP1 PUSH2 0x104E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH0 DUP7 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xC81 SWAP1 DUP5 SWAP1 PUSH2 0x104E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP2 SLOAD DUP6 SWAP1 DUP4 SWAP1 PUSH0 SWAP1 PUSH2 0xCA2 SWAP1 DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND PUSH2 0x1107 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP4 DUP3 PUSH0 ADD PUSH1 0xE DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND PUSH2 0xCEB SWAP2 SWAP1 PUSH2 0x1107 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND MUL OR SWAP1 SSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0xC18 SWAP2 DUP7 SWAP2 DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x84 ADD PUSH2 0xA89 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0xD70 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST POP POP PUSH0 MLOAD RETURNDATASIZE SWAP2 POP DUP2 ISZERO PUSH2 0xD87 JUMPI DUP1 PUSH1 0x1 EQ ISZERO PUSH2 0xD94 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0xC18 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x228 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDCD JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xDE6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE13 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0xE2D JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP7 CALLDATALOAD SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE51 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP8 ADD PUSH1 0x1F DUP2 ADD DUP10 SGT PUSH2 0xE61 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE77 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP10 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP5 ADD ADD GT ISZERO PUSH2 0xE8B JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP5 POP SWAP3 POP PUSH2 0xEA1 PUSH1 0x60 DUP9 ADD PUSH2 0xDFD JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP3 SWAP6 SWAP2 SWAP5 SWAP4 PUSH1 0x80 SWAP1 SWAP3 ADD CALLDATALOAD SWAP3 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP2 DUP5 ADD SWAP1 PUSH1 0x40 DUP5 ADD SWAP1 DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xEED JUMPI DUP4 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xECF JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF09 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xF12 DUP4 PUSH2 0xDFD JUMP JUMPDEST SWAP2 POP PUSH2 0xF20 PUSH1 0x20 DUP5 ADD PUSH2 0xDFD JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0xF3F JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xF48 DUP9 PUSH2 0xDFD JUMP JUMPDEST SWAP7 POP PUSH2 0xF56 PUSH1 0x20 DUP10 ADD PUSH2 0xDFD JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP3 POP PUSH2 0xF79 PUSH1 0xA0 DUP10 ADD PUSH2 0xDFD JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP2 SWAP5 SWAP2 SWAP4 POP POP PUSH1 0xC0 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFA2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0xF20 PUSH1 0x20 DUP5 ADD PUSH2 0xDFD JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0xFCA JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xFD3 DUP10 PUSH2 0xDFD JUMP JUMPDEST SWAP8 POP PUSH2 0xFE1 PUSH1 0x20 DUP11 ADD PUSH2 0xDFD JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD SWAP4 POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD SWAP3 POP PUSH2 0x100B PUSH1 0xC0 DUP11 ADD PUSH2 0xDFD JUMP JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 SWAP4 SWAP7 SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP2 SWAP3 PUSH1 0xE0 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xA10 JUMPI PUSH2 0xA10 PUSH2 0x1023 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xA10 JUMPI PUSH2 0xA10 PUSH2 0x1023 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x107B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x7 SWAP1 DUP3 ADD MSTORE PUSH7 0x115E1C1A5C9959 PUSH1 0xCA SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10C5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x10CE DUP3 PUSH2 0xDFD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xA10 JUMPI PUSH2 0xA10 PUSH2 0x1023 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP3 DUP2 AND DUP3 DUP3 AND SUB SWAP1 DUP2 GT ISZERO PUSH2 0xA10 JUMPI PUSH2 0xA10 PUSH2 0x1023 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP2 GT ISZERO PUSH2 0xA10 JUMPI PUSH2 0xA10 PUSH2 0x1023 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0x6C62F49A7F678EEC9B851AA1B24212E2 0xAA STATICCALL PUSH22 0x15B6671161D3839C453E7BEF64736F6C634300081E00 CALLER ",
							"sourceMap": "543:10925:6:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_calculateLiquidityAmounts_1190": {
									"entryPoint": 2752,
									"id": 1190,
									"parameterSlots": 6,
									"returnSlots": 2
								},
								"@_calculateSwapOutput_1328": {
									"entryPoint": 1946,
									"id": 1328,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_callOptionalReturn_589": {
									"entryPoint": 3409,
									"id": 589,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_getPairHash_1462": {
									"entryPoint": 2442,
									"id": 1462,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_getSortedReserves_1493": {
									"entryPoint": 2582,
									"id": 1493,
									"parameterSlots": 3,
									"returnSlots": 2
								},
								"@_mintLiquidityAndUpdateReserves_1285": {
									"entryPoint": 3102,
									"id": 1285,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@_performAddLiquidityTransfers_1229": {
									"entryPoint": 3054,
									"id": 1229,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_performSwapTransfers_1364": {
									"entryPoint": 2052,
									"id": 1364,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_updateReservesAfterSwap_1433": {
									"entryPoint": 2100,
									"id": 1433,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@addLiquidity_757": {
									"entryPoint": 1800,
									"id": 757,
									"parameterSlots": 8,
									"returnSlots": 3
								},
								"@getAmountOut_1099": {
									"entryPoint": 467,
									"id": 1099,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getPrice_1045": {
									"entryPoint": 1052,
									"id": 1045,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@liquidityBalance_676": {
									"entryPoint": null,
									"id": 676,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@removeLiquidity_893": {
									"entryPoint": 1236,
									"id": 893,
									"parameterSlots": 7,
									"returnSlots": 2
								},
								"@reserves_664": {
									"entryPoint": null,
									"id": 664,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_239": {
									"entryPoint": 3352,
									"id": 239,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_212": {
									"entryPoint": 2652,
									"id": 212,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@swapExactTokensForTokens_990": {
									"entryPoint": 636,
									"id": 990,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"@totalLiquidity_669": {
									"entryPoint": null,
									"id": 669,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 3581,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4277,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3832,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_addresst_uint256": {
									"entryPoint": 3881,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 7
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_uint256t_addresst_uint256": {
									"entryPoint": 4018,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 8
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 3517,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 3985,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256t_array$_t_address_$dyn_calldata_ptrt_addresst_uint256": {
									"entryPoint": 3608,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256": {
									"entryPoint": 3540,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 3766,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_00c0664002c3a7ab9481655483f753aa6ee21854999370a38d90a0549f0cf8f4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_185a9d5da6de3eebfb2e4ad4adad189f402b098c61f6e8e0c8d2b4a20a1faa2a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1999f60f5526a13cb17eac3c04d030e47d1c41d4e55af8ccb43358373aec7eb8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_28ee48a047f51c165a70ae36f179330afc265bf4c05f56e1a1f02c2668dcead2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_379a432f00aa43993bfbf4e01492a8eab5138dcd2e395864ede728644390fc31__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f183c8b0f89612f6f096bf1f0017061404d2019bd0580f7b18bddb8dcc0d7a13__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4224,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8d6698763d2d0ff1e31fa7f43b504a63f09c2932b87b9842c093ff74de4d766__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fb87c09e63b5ee5d76fa5ada5f7c2fd9de8980c2964f73a791eaef9c4602f114__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ffebb6789a62ed60836fc38e566e8cbcff27ebb3acadee53ee5da9825f1b14e1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint112_t_uint112__to_t_uint112_t_uint112__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"checked_add_t_uint112": {
									"entryPoint": 4359,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4174,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4193,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4151,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint112": {
									"entryPoint": 4328,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4309,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4131,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 4257,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:11973:7",
										"nodeType": "YulBlock",
										"src": "0:11973:7",
										"statements": [
											{
												"nativeSrc": "6:3:7",
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "84:156:7",
													"nodeType": "YulBlock",
													"src": "84:156:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "130:16:7",
																"nodeType": "YulBlock",
																"src": "130:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "139:1:7",
																					"nodeType": "YulLiteral",
																					"src": "139:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "142:1:7",
																					"nodeType": "YulLiteral",
																					"src": "142:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "132:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:7"
																			},
																			"nativeSrc": "132:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:7"
																		},
																		"nativeSrc": "132:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "105:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "114:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "101:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:7"
																		},
																		"nativeSrc": "101:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "126:2:7",
																		"nodeType": "YulLiteral",
																		"src": "126:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "97:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:7"
																},
																"nativeSrc": "97:32:7",
																"nodeType": "YulFunctionCall",
																"src": "97:32:7"
															},
															"nativeSrc": "94:52:7",
															"nodeType": "YulIf",
															"src": "94:52:7"
														},
														{
															"nativeSrc": "155:14:7",
															"nodeType": "YulVariableDeclaration",
															"src": "155:14:7",
															"value": {
																"kind": "number",
																"nativeSrc": "168:1:7",
																"nodeType": "YulLiteral",
																"src": "168:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "159:5:7",
																	"nodeType": "YulTypedName",
																	"src": "159:5:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "178:32:7",
															"nodeType": "YulAssignment",
															"src": "178:32:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "200:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "200:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "187:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "187:12:7"
																},
																"nativeSrc": "187:23:7",
																"nodeType": "YulFunctionCall",
																"src": "187:23:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "178:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "178:5:7"
																}
															]
														},
														{
															"nativeSrc": "219:15:7",
															"nodeType": "YulAssignment",
															"src": "219:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "229:5:7",
																"nodeType": "YulIdentifier",
																"src": "229:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "219:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "219:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "14:226:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "50:9:7",
														"nodeType": "YulTypedName",
														"src": "50:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "61:7:7",
														"nodeType": "YulTypedName",
														"src": "61:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "73:6:7",
														"nodeType": "YulTypedName",
														"src": "73:6:7",
														"type": ""
													}
												],
												"src": "14:226:7"
											},
											{
												"body": {
													"nativeSrc": "374:193:7",
													"nodeType": "YulBlock",
													"src": "374:193:7",
													"statements": [
														{
															"nativeSrc": "384:26:7",
															"nodeType": "YulAssignment",
															"src": "384:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "396:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "396:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "407:2:7",
																		"nodeType": "YulLiteral",
																		"src": "407:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "392:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "392:3:7"
																},
																"nativeSrc": "392:18:7",
																"nodeType": "YulFunctionCall",
																"src": "392:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "384:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "384:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "426:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "426:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "441:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "441:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "449:30:7",
																				"nodeType": "YulLiteral",
																				"src": "449:30:7",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "437:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "437:3:7"
																		},
																		"nativeSrc": "437:43:7",
																		"nodeType": "YulFunctionCall",
																		"src": "437:43:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "419:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "419:6:7"
																},
																"nativeSrc": "419:62:7",
																"nodeType": "YulFunctionCall",
																"src": "419:62:7"
															},
															"nativeSrc": "419:62:7",
															"nodeType": "YulExpressionStatement",
															"src": "419:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "501:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "501:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "512:2:7",
																				"nodeType": "YulLiteral",
																				"src": "512:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "497:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "497:3:7"
																		},
																		"nativeSrc": "497:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "497:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "521:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "521:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "529:30:7",
																				"nodeType": "YulLiteral",
																				"src": "529:30:7",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "517:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "517:3:7"
																		},
																		"nativeSrc": "517:43:7",
																		"nodeType": "YulFunctionCall",
																		"src": "517:43:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "490:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:7"
																},
																"nativeSrc": "490:71:7",
																"nodeType": "YulFunctionCall",
																"src": "490:71:7"
															},
															"nativeSrc": "490:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "490:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint112_t_uint112__to_t_uint112_t_uint112__fromStack_reversed",
												"nativeSrc": "245:322:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "335:9:7",
														"nodeType": "YulTypedName",
														"src": "335:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "346:6:7",
														"nodeType": "YulTypedName",
														"src": "346:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "354:6:7",
														"nodeType": "YulTypedName",
														"src": "354:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "365:4:7",
														"nodeType": "YulTypedName",
														"src": "365:4:7",
														"type": ""
													}
												],
												"src": "245:322:7"
											},
											{
												"body": {
													"nativeSrc": "676:362:7",
													"nodeType": "YulBlock",
													"src": "676:362:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "722:16:7",
																"nodeType": "YulBlock",
																"src": "722:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "731:1:7",
																					"nodeType": "YulLiteral",
																					"src": "731:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "734:1:7",
																					"nodeType": "YulLiteral",
																					"src": "734:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "724:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "724:6:7"
																			},
																			"nativeSrc": "724:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "724:12:7"
																		},
																		"nativeSrc": "724:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "724:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "697:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "697:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "706:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "706:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "693:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "693:3:7"
																		},
																		"nativeSrc": "693:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "693:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "718:2:7",
																		"nodeType": "YulLiteral",
																		"src": "718:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "689:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "689:3:7"
																},
																"nativeSrc": "689:32:7",
																"nodeType": "YulFunctionCall",
																"src": "689:32:7"
															},
															"nativeSrc": "686:52:7",
															"nodeType": "YulIf",
															"src": "686:52:7"
														},
														{
															"nativeSrc": "747:14:7",
															"nodeType": "YulVariableDeclaration",
															"src": "747:14:7",
															"value": {
																"kind": "number",
																"nativeSrc": "760:1:7",
																"nodeType": "YulLiteral",
																"src": "760:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "751:5:7",
																	"nodeType": "YulTypedName",
																	"src": "751:5:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "770:32:7",
															"nodeType": "YulAssignment",
															"src": "770:32:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "792:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "792:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "779:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "779:12:7"
																},
																"nativeSrc": "779:23:7",
																"nodeType": "YulFunctionCall",
																"src": "779:23:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "770:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "770:5:7"
																}
															]
														},
														{
															"nativeSrc": "811:15:7",
															"nodeType": "YulAssignment",
															"src": "811:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "821:5:7",
																"nodeType": "YulIdentifier",
																"src": "821:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "811:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "811:6:7"
																}
															]
														},
														{
															"nativeSrc": "835:16:7",
															"nodeType": "YulVariableDeclaration",
															"src": "835:16:7",
															"value": {
																"kind": "number",
																"nativeSrc": "850:1:7",
																"nodeType": "YulLiteral",
																"src": "850:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "839:7:7",
																	"nodeType": "YulTypedName",
																	"src": "839:7:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "860:43:7",
															"nodeType": "YulAssignment",
															"src": "860:43:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "888:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "888:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "899:2:7",
																				"nodeType": "YulLiteral",
																				"src": "899:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "884:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "884:3:7"
																		},
																		"nativeSrc": "884:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "884:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "871:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "871:12:7"
																},
																"nativeSrc": "871:32:7",
																"nodeType": "YulFunctionCall",
																"src": "871:32:7"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "860:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "860:7:7"
																}
															]
														},
														{
															"nativeSrc": "912:17:7",
															"nodeType": "YulAssignment",
															"src": "912:17:7",
															"value": {
																"name": "value_1",
																"nativeSrc": "922:7:7",
																"nodeType": "YulIdentifier",
																"src": "922:7:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "912:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "912:6:7"
																}
															]
														},
														{
															"nativeSrc": "938:16:7",
															"nodeType": "YulVariableDeclaration",
															"src": "938:16:7",
															"value": {
																"kind": "number",
																"nativeSrc": "953:1:7",
																"nodeType": "YulLiteral",
																"src": "953:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nativeSrc": "942:7:7",
																	"nodeType": "YulTypedName",
																	"src": "942:7:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "963:43:7",
															"nodeType": "YulAssignment",
															"src": "963:43:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "991:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "991:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1002:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1002:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "987:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "987:3:7"
																		},
																		"nativeSrc": "987:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "987:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "974:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "974:12:7"
																},
																"nativeSrc": "974:32:7",
																"nodeType": "YulFunctionCall",
																"src": "974:32:7"
															},
															"variableNames": [
																{
																	"name": "value_2",
																	"nativeSrc": "963:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "963:7:7"
																}
															]
														},
														{
															"nativeSrc": "1015:17:7",
															"nodeType": "YulAssignment",
															"src": "1015:17:7",
															"value": {
																"name": "value_2",
																"nativeSrc": "1025:7:7",
																"nodeType": "YulIdentifier",
																"src": "1025:7:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1015:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1015:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256",
												"nativeSrc": "572:466:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "626:9:7",
														"nodeType": "YulTypedName",
														"src": "626:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "637:7:7",
														"nodeType": "YulTypedName",
														"src": "637:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "649:6:7",
														"nodeType": "YulTypedName",
														"src": "649:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "657:6:7",
														"nodeType": "YulTypedName",
														"src": "657:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "665:6:7",
														"nodeType": "YulTypedName",
														"src": "665:6:7",
														"type": ""
													}
												],
												"src": "572:466:7"
											},
											{
												"body": {
													"nativeSrc": "1144:76:7",
													"nodeType": "YulBlock",
													"src": "1144:76:7",
													"statements": [
														{
															"nativeSrc": "1154:26:7",
															"nodeType": "YulAssignment",
															"src": "1154:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1166:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1166:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1177:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1177:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1162:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1162:3:7"
																},
																"nativeSrc": "1162:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1162:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1154:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1154:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1196:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1196:9:7"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1207:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1207:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1189:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1189:6:7"
																},
																"nativeSrc": "1189:25:7",
																"nodeType": "YulFunctionCall",
																"src": "1189:25:7"
															},
															"nativeSrc": "1189:25:7",
															"nodeType": "YulExpressionStatement",
															"src": "1189:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1043:177:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1113:9:7",
														"nodeType": "YulTypedName",
														"src": "1113:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1124:6:7",
														"nodeType": "YulTypedName",
														"src": "1124:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1135:4:7",
														"nodeType": "YulTypedName",
														"src": "1135:4:7",
														"type": ""
													}
												],
												"src": "1043:177:7"
											},
											{
												"body": {
													"nativeSrc": "1274:124:7",
													"nodeType": "YulBlock",
													"src": "1274:124:7",
													"statements": [
														{
															"nativeSrc": "1284:29:7",
															"nodeType": "YulAssignment",
															"src": "1284:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1306:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1306:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1293:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "1293:12:7"
																},
																"nativeSrc": "1293:20:7",
																"nodeType": "YulFunctionCall",
																"src": "1293:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1284:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1284:5:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1376:16:7",
																"nodeType": "YulBlock",
																"src": "1376:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1385:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1385:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1388:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1388:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1378:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1378:6:7"
																			},
																			"nativeSrc": "1378:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1378:12:7"
																		},
																		"nativeSrc": "1378:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1378:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1335:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1335:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1346:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1346:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1361:3:7",
																										"nodeType": "YulLiteral",
																										"src": "1361:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1366:1:7",
																										"nodeType": "YulLiteral",
																										"src": "1366:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1357:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "1357:3:7"
																								},
																								"nativeSrc": "1357:11:7",
																								"nodeType": "YulFunctionCall",
																								"src": "1357:11:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1370:1:7",
																								"nodeType": "YulLiteral",
																								"src": "1370:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "1353:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "1353:3:7"
																						},
																						"nativeSrc": "1353:19:7",
																						"nodeType": "YulFunctionCall",
																						"src": "1353:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1342:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1342:3:7"
																				},
																				"nativeSrc": "1342:31:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1342:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1332:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1332:2:7"
																		},
																		"nativeSrc": "1332:42:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1332:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1325:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1325:6:7"
																},
																"nativeSrc": "1325:50:7",
																"nodeType": "YulFunctionCall",
																"src": "1325:50:7"
															},
															"nativeSrc": "1322:70:7",
															"nodeType": "YulIf",
															"src": "1322:70:7"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "1225:173:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1253:6:7",
														"nodeType": "YulTypedName",
														"src": "1253:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1264:5:7",
														"nodeType": "YulTypedName",
														"src": "1264:5:7",
														"type": ""
													}
												],
												"src": "1225:173:7"
											},
											{
												"body": {
													"nativeSrc": "1576:867:7",
													"nodeType": "YulBlock",
													"src": "1576:867:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1623:16:7",
																"nodeType": "YulBlock",
																"src": "1623:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1632:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1632:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1635:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1635:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1625:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1625:6:7"
																			},
																			"nativeSrc": "1625:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1625:12:7"
																		},
																		"nativeSrc": "1625:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1625:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1597:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1597:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1606:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1606:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1593:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1593:3:7"
																		},
																		"nativeSrc": "1593:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1593:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1618:3:7",
																		"nodeType": "YulLiteral",
																		"src": "1618:3:7",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1589:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1589:3:7"
																},
																"nativeSrc": "1589:33:7",
																"nodeType": "YulFunctionCall",
																"src": "1589:33:7"
															},
															"nativeSrc": "1586:53:7",
															"nodeType": "YulIf",
															"src": "1586:53:7"
														},
														{
															"nativeSrc": "1648:14:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1648:14:7",
															"value": {
																"kind": "number",
																"nativeSrc": "1661:1:7",
																"nodeType": "YulLiteral",
																"src": "1661:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1652:5:7",
																	"nodeType": "YulTypedName",
																	"src": "1652:5:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1671:32:7",
															"nodeType": "YulAssignment",
															"src": "1671:32:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1693:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1693:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1680:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "1680:12:7"
																},
																"nativeSrc": "1680:23:7",
																"nodeType": "YulFunctionCall",
																"src": "1680:23:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1671:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1671:5:7"
																}
															]
														},
														{
															"nativeSrc": "1712:15:7",
															"nodeType": "YulAssignment",
															"src": "1712:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "1722:5:7",
																"nodeType": "YulIdentifier",
																"src": "1722:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1712:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1712:6:7"
																}
															]
														},
														{
															"nativeSrc": "1736:16:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1736:16:7",
															"value": {
																"kind": "number",
																"nativeSrc": "1751:1:7",
																"nodeType": "YulLiteral",
																"src": "1751:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "1740:7:7",
																	"nodeType": "YulTypedName",
																	"src": "1740:7:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1761:43:7",
															"nodeType": "YulAssignment",
															"src": "1761:43:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1789:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1789:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1800:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1800:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1785:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1785:3:7"
																		},
																		"nativeSrc": "1785:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1785:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1772:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "1772:12:7"
																},
																"nativeSrc": "1772:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1772:32:7"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "1761:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1761:7:7"
																}
															]
														},
														{
															"nativeSrc": "1813:17:7",
															"nodeType": "YulAssignment",
															"src": "1813:17:7",
															"value": {
																"name": "value_1",
																"nativeSrc": "1823:7:7",
																"nodeType": "YulIdentifier",
																"src": "1823:7:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1813:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1813:6:7"
																}
															]
														},
														{
															"nativeSrc": "1839:46:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1839:46:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1870:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1870:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1881:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1881:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1866:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1866:3:7"
																		},
																		"nativeSrc": "1866:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1853:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "1853:12:7"
																},
																"nativeSrc": "1853:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1853:32:7"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1843:6:7",
																	"nodeType": "YulTypedName",
																	"src": "1843:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1928:16:7",
																"nodeType": "YulBlock",
																"src": "1928:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1937:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1937:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1940:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1940:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1930:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1930:6:7"
																			},
																			"nativeSrc": "1930:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1930:12:7"
																		},
																		"nativeSrc": "1930:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1930:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1900:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1900:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1908:18:7",
																		"nodeType": "YulLiteral",
																		"src": "1908:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1897:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1897:2:7"
																},
																"nativeSrc": "1897:30:7",
																"nodeType": "YulFunctionCall",
																"src": "1897:30:7"
															},
															"nativeSrc": "1894:50:7",
															"nodeType": "YulIf",
															"src": "1894:50:7"
														},
														{
															"nativeSrc": "1953:32:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1953:32:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1967:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1967:9:7"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "1978:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1978:6:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1963:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1963:3:7"
																},
																"nativeSrc": "1963:22:7",
																"nodeType": "YulFunctionCall",
																"src": "1963:22:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "1957:2:7",
																	"nodeType": "YulTypedName",
																	"src": "1957:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2033:16:7",
																"nodeType": "YulBlock",
																"src": "2033:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2042:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2042:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2045:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2045:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2035:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2035:6:7"
																			},
																			"nativeSrc": "2035:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2035:12:7"
																		},
																		"nativeSrc": "2035:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2035:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "2012:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "2012:2:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2016:4:7",
																						"nodeType": "YulLiteral",
																						"src": "2016:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2008:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2008:3:7"
																				},
																				"nativeSrc": "2008:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2008:13:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2023:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2023:7:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2004:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2004:3:7"
																		},
																		"nativeSrc": "2004:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2004:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1997:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1997:6:7"
																},
																"nativeSrc": "1997:35:7",
																"nodeType": "YulFunctionCall",
																"src": "1997:35:7"
															},
															"nativeSrc": "1994:55:7",
															"nodeType": "YulIf",
															"src": "1994:55:7"
														},
														{
															"nativeSrc": "2058:30:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2058:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "2085:2:7",
																		"nodeType": "YulIdentifier",
																		"src": "2085:2:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2072:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2072:12:7"
																},
																"nativeSrc": "2072:16:7",
																"nodeType": "YulFunctionCall",
																"src": "2072:16:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2062:6:7",
																	"nodeType": "YulTypedName",
																	"src": "2062:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2131:16:7",
																"nodeType": "YulBlock",
																"src": "2131:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2140:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2140:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2143:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2143:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2133:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2133:6:7"
																			},
																			"nativeSrc": "2133:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2133:12:7"
																		},
																		"nativeSrc": "2133:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2133:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2103:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2103:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2111:18:7",
																		"nodeType": "YulLiteral",
																		"src": "2111:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2100:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2100:2:7"
																},
																"nativeSrc": "2100:30:7",
																"nodeType": "YulFunctionCall",
																"src": "2100:30:7"
															},
															"nativeSrc": "2097:50:7",
															"nodeType": "YulIf",
															"src": "2097:50:7"
														},
														{
															"body": {
																"nativeSrc": "2205:16:7",
																"nodeType": "YulBlock",
																"src": "2205:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2214:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2214:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2217:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2217:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2207:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2207:6:7"
																			},
																			"nativeSrc": "2207:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2207:12:7"
																		},
																		"nativeSrc": "2207:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2207:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "2170:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "2170:2:7"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2178:1:7",
																								"nodeType": "YulLiteral",
																								"src": "2178:1:7",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "length",
																								"nativeSrc": "2181:6:7",
																								"nodeType": "YulIdentifier",
																								"src": "2181:6:7"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2174:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "2174:3:7"
																						},
																						"nativeSrc": "2174:14:7",
																						"nodeType": "YulFunctionCall",
																						"src": "2174:14:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2166:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2166:3:7"
																				},
																				"nativeSrc": "2166:23:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:23:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2191:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2191:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2162:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2162:3:7"
																		},
																		"nativeSrc": "2162:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2162:32:7"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "2196:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "2196:7:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2159:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2159:2:7"
																},
																"nativeSrc": "2159:45:7",
																"nodeType": "YulFunctionCall",
																"src": "2159:45:7"
															},
															"nativeSrc": "2156:65:7",
															"nodeType": "YulIf",
															"src": "2156:65:7"
														},
														{
															"nativeSrc": "2230:21:7",
															"nodeType": "YulAssignment",
															"src": "2230:21:7",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "2244:2:7",
																		"nodeType": "YulIdentifier",
																		"src": "2244:2:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2248:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2248:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2240:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2240:3:7"
																},
																"nativeSrc": "2240:11:7",
																"nodeType": "YulFunctionCall",
																"src": "2240:11:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2230:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2230:6:7"
																}
															]
														},
														{
															"nativeSrc": "2260:16:7",
															"nodeType": "YulAssignment",
															"src": "2260:16:7",
															"value": {
																"name": "length",
																"nativeSrc": "2270:6:7",
																"nodeType": "YulIdentifier",
																"src": "2270:6:7"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "2260:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2260:6:7"
																}
															]
														},
														{
															"nativeSrc": "2285:48:7",
															"nodeType": "YulAssignment",
															"src": "2285:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2318:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2318:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2329:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2329:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2314:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2314:3:7"
																		},
																		"nativeSrc": "2314:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2314:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2295:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "2295:18:7"
																},
																"nativeSrc": "2295:38:7",
																"nodeType": "YulFunctionCall",
																"src": "2295:38:7"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "2285:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2285:6:7"
																}
															]
														},
														{
															"nativeSrc": "2342:16:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2342:16:7",
															"value": {
																"kind": "number",
																"nativeSrc": "2357:1:7",
																"nodeType": "YulLiteral",
																"src": "2357:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nativeSrc": "2346:7:7",
																	"nodeType": "YulTypedName",
																	"src": "2346:7:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2367:44:7",
															"nodeType": "YulAssignment",
															"src": "2367:44:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2395:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2395:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2406:3:7",
																				"nodeType": "YulLiteral",
																				"src": "2406:3:7",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2391:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2391:3:7"
																		},
																		"nativeSrc": "2391:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2391:19:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2378:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2378:12:7"
																},
																"nativeSrc": "2378:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2378:33:7"
															},
															"variableNames": [
																{
																	"name": "value_2",
																	"nativeSrc": "2367:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2367:7:7"
																}
															]
														},
														{
															"nativeSrc": "2420:17:7",
															"nodeType": "YulAssignment",
															"src": "2420:17:7",
															"value": {
																"name": "value_2",
																"nativeSrc": "2430:7:7",
																"nodeType": "YulIdentifier",
																"src": "2430:7:7"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nativeSrc": "2420:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2420:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_array$_t_address_$dyn_calldata_ptrt_addresst_uint256",
												"nativeSrc": "1403:1040:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1502:9:7",
														"nodeType": "YulTypedName",
														"src": "1502:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1513:7:7",
														"nodeType": "YulTypedName",
														"src": "1513:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1525:6:7",
														"nodeType": "YulTypedName",
														"src": "1525:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1533:6:7",
														"nodeType": "YulTypedName",
														"src": "1533:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1541:6:7",
														"nodeType": "YulTypedName",
														"src": "1541:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1549:6:7",
														"nodeType": "YulTypedName",
														"src": "1549:6:7",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "1557:6:7",
														"nodeType": "YulTypedName",
														"src": "1557:6:7",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "1565:6:7",
														"nodeType": "YulTypedName",
														"src": "1565:6:7",
														"type": ""
													}
												],
												"src": "1403:1040:7"
											},
											{
												"body": {
													"nativeSrc": "2599:460:7",
													"nodeType": "YulBlock",
													"src": "2599:460:7",
													"statements": [
														{
															"nativeSrc": "2609:32:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2609:32:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2627:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2627:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2638:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2638:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2623:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2623:3:7"
																},
																"nativeSrc": "2623:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2623:18:7"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "2613:6:7",
																	"nodeType": "YulTypedName",
																	"src": "2613:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2657:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2657:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2668:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2668:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2650:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2650:6:7"
																},
																"nativeSrc": "2650:21:7",
																"nodeType": "YulFunctionCall",
																"src": "2650:21:7"
															},
															"nativeSrc": "2650:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "2650:21:7"
														},
														{
															"nativeSrc": "2680:17:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2680:17:7",
															"value": {
																"name": "tail_1",
																"nativeSrc": "2691:6:7",
																"nodeType": "YulIdentifier",
																"src": "2691:6:7"
															},
															"variables": [
																{
																	"name": "pos",
																	"nativeSrc": "2684:3:7",
																	"nodeType": "YulTypedName",
																	"src": "2684:3:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2706:27:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2706:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2726:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2726:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2720:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2720:5:7"
																},
																"nativeSrc": "2720:13:7",
																"nodeType": "YulFunctionCall",
																"src": "2720:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2710:6:7",
																	"nodeType": "YulTypedName",
																	"src": "2710:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nativeSrc": "2749:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2749:6:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2757:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2757:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2742:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2742:6:7"
																},
																"nativeSrc": "2742:22:7",
																"nodeType": "YulFunctionCall",
																"src": "2742:22:7"
															},
															"nativeSrc": "2742:22:7",
															"nodeType": "YulExpressionStatement",
															"src": "2742:22:7"
														},
														{
															"nativeSrc": "2773:25:7",
															"nodeType": "YulAssignment",
															"src": "2773:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2784:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2784:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2795:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2795:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2780:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2780:3:7"
																},
																"nativeSrc": "2780:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2780:18:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2773:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2773:3:7"
																}
															]
														},
														{
															"nativeSrc": "2807:29:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2807:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2825:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2825:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2833:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2833:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2821:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2821:3:7"
																},
																"nativeSrc": "2821:15:7",
																"nodeType": "YulFunctionCall",
																"src": "2821:15:7"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "2811:6:7",
																	"nodeType": "YulTypedName",
																	"src": "2811:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2845:10:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2845:10:7",
															"value": {
																"kind": "number",
																"nativeSrc": "2854:1:7",
																"nodeType": "YulLiteral",
																"src": "2854:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "2849:1:7",
																	"nodeType": "YulTypedName",
																	"src": "2849:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2913:120:7",
																"nodeType": "YulBlock",
																"src": "2913:120:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "2934:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2934:3:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nativeSrc": "2945:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "2945:6:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "2939:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2939:5:7"
																					},
																					"nativeSrc": "2939:13:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2939:13:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2927:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2927:6:7"
																			},
																			"nativeSrc": "2927:26:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2927:26:7"
																		},
																		"nativeSrc": "2927:26:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2927:26:7"
																	},
																	{
																		"nativeSrc": "2966:19:7",
																		"nodeType": "YulAssignment",
																		"src": "2966:19:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "2977:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2977:3:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2982:2:7",
																					"nodeType": "YulLiteral",
																					"src": "2982:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2973:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2973:3:7"
																			},
																			"nativeSrc": "2973:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2973:12:7"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "2966:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2966:3:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "2998:25:7",
																		"nodeType": "YulAssignment",
																		"src": "2998:25:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "3012:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "3012:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3020:2:7",
																					"nodeType": "YulLiteral",
																					"src": "3020:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3008:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "3008:3:7"
																			},
																			"nativeSrc": "3008:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3008:15:7"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "2998:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2998:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "2875:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "2875:1:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2878:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2878:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2872:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2872:2:7"
																},
																"nativeSrc": "2872:13:7",
																"nodeType": "YulFunctionCall",
																"src": "2872:13:7"
															},
															"nativeSrc": "2864:169:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2886:18:7",
																"nodeType": "YulBlock",
																"src": "2886:18:7",
																"statements": [
																	{
																		"nativeSrc": "2888:14:7",
																		"nodeType": "YulAssignment",
																		"src": "2888:14:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "2897:1:7",
																					"nodeType": "YulIdentifier",
																					"src": "2897:1:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2900:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2900:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2893:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2893:3:7"
																			},
																			"nativeSrc": "2893:9:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2893:9:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "2888:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "2888:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2868:3:7",
																"nodeType": "YulBlock",
																"src": "2868:3:7",
																"statements": []
															},
															"src": "2864:169:7"
														},
														{
															"nativeSrc": "3042:11:7",
															"nodeType": "YulAssignment",
															"src": "3042:11:7",
															"value": {
																"name": "pos",
																"nativeSrc": "3050:3:7",
																"nodeType": "YulIdentifier",
																"src": "3050:3:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3042:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3042:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "2448:611:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2568:9:7",
														"nodeType": "YulTypedName",
														"src": "2568:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2579:6:7",
														"nodeType": "YulTypedName",
														"src": "2579:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2590:4:7",
														"nodeType": "YulTypedName",
														"src": "2590:4:7",
														"type": ""
													}
												],
												"src": "2448:611:7"
											},
											{
												"body": {
													"nativeSrc": "3151:173:7",
													"nodeType": "YulBlock",
													"src": "3151:173:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3197:16:7",
																"nodeType": "YulBlock",
																"src": "3197:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3206:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3206:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3209:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3209:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3199:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3199:6:7"
																			},
																			"nativeSrc": "3199:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3199:12:7"
																		},
																		"nativeSrc": "3199:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3199:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3172:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3172:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3181:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3181:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3168:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3168:3:7"
																		},
																		"nativeSrc": "3168:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3168:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3193:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3193:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3164:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3164:3:7"
																},
																"nativeSrc": "3164:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3164:32:7"
															},
															"nativeSrc": "3161:52:7",
															"nodeType": "YulIf",
															"src": "3161:52:7"
														},
														{
															"nativeSrc": "3222:39:7",
															"nodeType": "YulAssignment",
															"src": "3222:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3251:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3251:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3232:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "3232:18:7"
																},
																"nativeSrc": "3232:29:7",
																"nodeType": "YulFunctionCall",
																"src": "3232:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3222:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3222:6:7"
																}
															]
														},
														{
															"nativeSrc": "3270:48:7",
															"nodeType": "YulAssignment",
															"src": "3270:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3303:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3303:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3314:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3314:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3299:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3299:3:7"
																		},
																		"nativeSrc": "3299:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3299:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3280:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "3280:18:7"
																},
																"nativeSrc": "3280:38:7",
																"nodeType": "YulFunctionCall",
																"src": "3280:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3270:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3270:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "3064:260:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3109:9:7",
														"nodeType": "YulTypedName",
														"src": "3109:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3120:7:7",
														"nodeType": "YulTypedName",
														"src": "3120:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3132:6:7",
														"nodeType": "YulTypedName",
														"src": "3132:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3140:6:7",
														"nodeType": "YulTypedName",
														"src": "3140:6:7",
														"type": ""
													}
												],
												"src": "3064:260:7"
											},
											{
												"body": {
													"nativeSrc": "3501:640:7",
													"nodeType": "YulBlock",
													"src": "3501:640:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3548:16:7",
																"nodeType": "YulBlock",
																"src": "3548:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3557:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3557:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3560:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3560:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3550:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3550:6:7"
																			},
																			"nativeSrc": "3550:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3550:12:7"
																		},
																		"nativeSrc": "3550:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3550:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3522:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3522:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3531:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3531:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3518:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3518:3:7"
																		},
																		"nativeSrc": "3518:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3518:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3543:3:7",
																		"nodeType": "YulLiteral",
																		"src": "3543:3:7",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3514:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3514:3:7"
																},
																"nativeSrc": "3514:33:7",
																"nodeType": "YulFunctionCall",
																"src": "3514:33:7"
															},
															"nativeSrc": "3511:53:7",
															"nodeType": "YulIf",
															"src": "3511:53:7"
														},
														{
															"nativeSrc": "3573:39:7",
															"nodeType": "YulAssignment",
															"src": "3573:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3602:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3602:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3583:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "3583:18:7"
																},
																"nativeSrc": "3583:29:7",
																"nodeType": "YulFunctionCall",
																"src": "3583:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3573:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3573:6:7"
																}
															]
														},
														{
															"nativeSrc": "3621:48:7",
															"nodeType": "YulAssignment",
															"src": "3621:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3654:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3654:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3665:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3665:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3650:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3650:3:7"
																		},
																		"nativeSrc": "3650:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3650:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3631:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "3631:18:7"
																},
																"nativeSrc": "3631:38:7",
																"nodeType": "YulFunctionCall",
																"src": "3631:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3621:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3621:6:7"
																}
															]
														},
														{
															"nativeSrc": "3678:14:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3678:14:7",
															"value": {
																"kind": "number",
																"nativeSrc": "3691:1:7",
																"nodeType": "YulLiteral",
																"src": "3691:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3682:5:7",
																	"nodeType": "YulTypedName",
																	"src": "3682:5:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3701:41:7",
															"nodeType": "YulAssignment",
															"src": "3701:41:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3727:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3727:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3738:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3738:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3723:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3723:3:7"
																		},
																		"nativeSrc": "3723:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3723:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3710:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "3710:12:7"
																},
																"nativeSrc": "3710:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3710:32:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3701:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3701:5:7"
																}
															]
														},
														{
															"nativeSrc": "3751:15:7",
															"nodeType": "YulAssignment",
															"src": "3751:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "3761:5:7",
																"nodeType": "YulIdentifier",
																"src": "3761:5:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "3751:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3751:6:7"
																}
															]
														},
														{
															"nativeSrc": "3775:16:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3775:16:7",
															"value": {
																"kind": "number",
																"nativeSrc": "3790:1:7",
																"nodeType": "YulLiteral",
																"src": "3790:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "3779:7:7",
																	"nodeType": "YulTypedName",
																	"src": "3779:7:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3800:43:7",
															"nodeType": "YulAssignment",
															"src": "3800:43:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3828:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3828:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3839:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3839:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3824:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3824:3:7"
																		},
																		"nativeSrc": "3824:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3824:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3811:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "3811:12:7"
																},
																"nativeSrc": "3811:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3811:32:7"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "3800:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "3800:7:7"
																}
															]
														},
														{
															"nativeSrc": "3852:17:7",
															"nodeType": "YulAssignment",
															"src": "3852:17:7",
															"value": {
																"name": "value_1",
																"nativeSrc": "3862:7:7",
																"nodeType": "YulIdentifier",
																"src": "3862:7:7"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "3852:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3852:6:7"
																}
															]
														},
														{
															"nativeSrc": "3878:16:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3878:16:7",
															"value": {
																"kind": "number",
																"nativeSrc": "3893:1:7",
																"nodeType": "YulLiteral",
																"src": "3893:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nativeSrc": "3882:7:7",
																	"nodeType": "YulTypedName",
																	"src": "3882:7:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3903:44:7",
															"nodeType": "YulAssignment",
															"src": "3903:44:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3931:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3931:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3942:3:7",
																				"nodeType": "YulLiteral",
																				"src": "3942:3:7",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3927:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3927:3:7"
																		},
																		"nativeSrc": "3927:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3927:19:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3914:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "3914:12:7"
																},
																"nativeSrc": "3914:33:7",
																"nodeType": "YulFunctionCall",
																"src": "3914:33:7"
															},
															"variableNames": [
																{
																	"name": "value_2",
																	"nativeSrc": "3903:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "3903:7:7"
																}
															]
														},
														{
															"nativeSrc": "3956:17:7",
															"nodeType": "YulAssignment",
															"src": "3956:17:7",
															"value": {
																"name": "value_2",
																"nativeSrc": "3966:7:7",
																"nodeType": "YulIdentifier",
																"src": "3966:7:7"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "3956:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3956:6:7"
																}
															]
														},
														{
															"nativeSrc": "3982:49:7",
															"nodeType": "YulAssignment",
															"src": "3982:49:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4015:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4015:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4026:3:7",
																				"nodeType": "YulLiteral",
																				"src": "4026:3:7",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4011:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4011:3:7"
																		},
																		"nativeSrc": "4011:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4011:19:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3992:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "3992:18:7"
																},
																"nativeSrc": "3992:39:7",
																"nodeType": "YulFunctionCall",
																"src": "3992:39:7"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nativeSrc": "3982:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3982:6:7"
																}
															]
														},
														{
															"nativeSrc": "4040:16:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4040:16:7",
															"value": {
																"kind": "number",
																"nativeSrc": "4055:1:7",
																"nodeType": "YulLiteral",
																"src": "4055:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_3",
																	"nativeSrc": "4044:7:7",
																	"nodeType": "YulTypedName",
																	"src": "4044:7:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4065:44:7",
															"nodeType": "YulAssignment",
															"src": "4065:44:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4093:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4093:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4104:3:7",
																				"nodeType": "YulLiteral",
																				"src": "4104:3:7",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4089:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4089:3:7"
																		},
																		"nativeSrc": "4089:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4089:19:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4076:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "4076:12:7"
																},
																"nativeSrc": "4076:33:7",
																"nodeType": "YulFunctionCall",
																"src": "4076:33:7"
															},
															"variableNames": [
																{
																	"name": "value_3",
																	"nativeSrc": "4065:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "4065:7:7"
																}
															]
														},
														{
															"nativeSrc": "4118:17:7",
															"nodeType": "YulAssignment",
															"src": "4118:17:7",
															"value": {
																"name": "value_3",
																"nativeSrc": "4128:7:7",
																"nodeType": "YulIdentifier",
																"src": "4128:7:7"
															},
															"variableNames": [
																{
																	"name": "value6",
																	"nativeSrc": "4118:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4118:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_addresst_uint256",
												"nativeSrc": "3329:812:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3419:9:7",
														"nodeType": "YulTypedName",
														"src": "3419:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3430:7:7",
														"nodeType": "YulTypedName",
														"src": "3430:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3442:6:7",
														"nodeType": "YulTypedName",
														"src": "3442:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3450:6:7",
														"nodeType": "YulTypedName",
														"src": "3450:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3458:6:7",
														"nodeType": "YulTypedName",
														"src": "3458:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3466:6:7",
														"nodeType": "YulTypedName",
														"src": "3466:6:7",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "3474:6:7",
														"nodeType": "YulTypedName",
														"src": "3474:6:7",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "3482:6:7",
														"nodeType": "YulTypedName",
														"src": "3482:6:7",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "3490:6:7",
														"nodeType": "YulTypedName",
														"src": "3490:6:7",
														"type": ""
													}
												],
												"src": "3329:812:7"
											},
											{
												"body": {
													"nativeSrc": "4275:119:7",
													"nodeType": "YulBlock",
													"src": "4275:119:7",
													"statements": [
														{
															"nativeSrc": "4285:26:7",
															"nodeType": "YulAssignment",
															"src": "4285:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4297:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4297:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4308:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4308:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4293:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4293:3:7"
																},
																"nativeSrc": "4293:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4293:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4285:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4285:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4327:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4327:9:7"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "4338:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4338:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4320:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4320:6:7"
																},
																"nativeSrc": "4320:25:7",
																"nodeType": "YulFunctionCall",
																"src": "4320:25:7"
															},
															"nativeSrc": "4320:25:7",
															"nodeType": "YulExpressionStatement",
															"src": "4320:25:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4365:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4365:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4376:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4376:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4361:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4361:3:7"
																		},
																		"nativeSrc": "4361:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4361:18:7"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "4381:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4381:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4354:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4354:6:7"
																},
																"nativeSrc": "4354:34:7",
																"nodeType": "YulFunctionCall",
																"src": "4354:34:7"
															},
															"nativeSrc": "4354:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "4354:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "4146:248:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4236:9:7",
														"nodeType": "YulTypedName",
														"src": "4236:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4247:6:7",
														"nodeType": "YulTypedName",
														"src": "4247:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4255:6:7",
														"nodeType": "YulTypedName",
														"src": "4255:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4266:4:7",
														"nodeType": "YulTypedName",
														"src": "4266:4:7",
														"type": ""
													}
												],
												"src": "4146:248:7"
											},
											{
												"body": {
													"nativeSrc": "4486:213:7",
													"nodeType": "YulBlock",
													"src": "4486:213:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4532:16:7",
																"nodeType": "YulBlock",
																"src": "4532:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4541:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4541:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4544:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4544:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4534:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4534:6:7"
																			},
																			"nativeSrc": "4534:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4534:12:7"
																		},
																		"nativeSrc": "4534:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4534:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4507:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4507:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4516:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4516:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4503:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4503:3:7"
																		},
																		"nativeSrc": "4503:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4503:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4528:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4528:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4499:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4499:3:7"
																},
																"nativeSrc": "4499:32:7",
																"nodeType": "YulFunctionCall",
																"src": "4499:32:7"
															},
															"nativeSrc": "4496:52:7",
															"nodeType": "YulIf",
															"src": "4496:52:7"
														},
														{
															"nativeSrc": "4557:14:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4557:14:7",
															"value": {
																"kind": "number",
																"nativeSrc": "4570:1:7",
																"nodeType": "YulLiteral",
																"src": "4570:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "4561:5:7",
																	"nodeType": "YulTypedName",
																	"src": "4561:5:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4580:32:7",
															"nodeType": "YulAssignment",
															"src": "4580:32:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4602:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4602:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4589:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "4589:12:7"
																},
																"nativeSrc": "4589:23:7",
																"nodeType": "YulFunctionCall",
																"src": "4589:23:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4580:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "4580:5:7"
																}
															]
														},
														{
															"nativeSrc": "4621:15:7",
															"nodeType": "YulAssignment",
															"src": "4621:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "4631:5:7",
																"nodeType": "YulIdentifier",
																"src": "4631:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4621:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4621:6:7"
																}
															]
														},
														{
															"nativeSrc": "4645:48:7",
															"nodeType": "YulAssignment",
															"src": "4645:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4678:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4678:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4689:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4689:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4674:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4674:3:7"
																		},
																		"nativeSrc": "4674:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4674:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4655:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "4655:18:7"
																},
																"nativeSrc": "4655:38:7",
																"nodeType": "YulFunctionCall",
																"src": "4655:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4645:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4645:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "4399:300:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4444:9:7",
														"nodeType": "YulTypedName",
														"src": "4444:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4455:7:7",
														"nodeType": "YulTypedName",
														"src": "4455:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4467:6:7",
														"nodeType": "YulTypedName",
														"src": "4467:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4475:6:7",
														"nodeType": "YulTypedName",
														"src": "4475:6:7",
														"type": ""
													}
												],
												"src": "4399:300:7"
											},
											{
												"body": {
													"nativeSrc": "4893:744:7",
													"nodeType": "YulBlock",
													"src": "4893:744:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4940:16:7",
																"nodeType": "YulBlock",
																"src": "4940:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4949:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4949:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4952:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4952:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4942:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4942:6:7"
																			},
																			"nativeSrc": "4942:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4942:12:7"
																		},
																		"nativeSrc": "4942:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4942:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4914:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4914:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4923:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4923:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4910:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4910:3:7"
																		},
																		"nativeSrc": "4910:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4910:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4935:3:7",
																		"nodeType": "YulLiteral",
																		"src": "4935:3:7",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4906:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4906:3:7"
																},
																"nativeSrc": "4906:33:7",
																"nodeType": "YulFunctionCall",
																"src": "4906:33:7"
															},
															"nativeSrc": "4903:53:7",
															"nodeType": "YulIf",
															"src": "4903:53:7"
														},
														{
															"nativeSrc": "4965:39:7",
															"nodeType": "YulAssignment",
															"src": "4965:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4994:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4994:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4975:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "4975:18:7"
																},
																"nativeSrc": "4975:29:7",
																"nodeType": "YulFunctionCall",
																"src": "4975:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4965:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4965:6:7"
																}
															]
														},
														{
															"nativeSrc": "5013:48:7",
															"nodeType": "YulAssignment",
															"src": "5013:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5046:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5046:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5057:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5057:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5042:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5042:3:7"
																		},
																		"nativeSrc": "5042:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5042:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "5023:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "5023:18:7"
																},
																"nativeSrc": "5023:38:7",
																"nodeType": "YulFunctionCall",
																"src": "5023:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "5013:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5013:6:7"
																}
															]
														},
														{
															"nativeSrc": "5070:14:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5070:14:7",
															"value": {
																"kind": "number",
																"nativeSrc": "5083:1:7",
																"nodeType": "YulLiteral",
																"src": "5083:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "5074:5:7",
																	"nodeType": "YulTypedName",
																	"src": "5074:5:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5093:41:7",
															"nodeType": "YulAssignment",
															"src": "5093:41:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5119:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5119:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5130:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5130:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5115:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5115:3:7"
																		},
																		"nativeSrc": "5115:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5115:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5102:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "5102:12:7"
																},
																"nativeSrc": "5102:32:7",
																"nodeType": "YulFunctionCall",
																"src": "5102:32:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5093:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "5093:5:7"
																}
															]
														},
														{
															"nativeSrc": "5143:15:7",
															"nodeType": "YulAssignment",
															"src": "5143:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "5153:5:7",
																"nodeType": "YulIdentifier",
																"src": "5153:5:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "5143:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5143:6:7"
																}
															]
														},
														{
															"nativeSrc": "5167:16:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5167:16:7",
															"value": {
																"kind": "number",
																"nativeSrc": "5182:1:7",
																"nodeType": "YulLiteral",
																"src": "5182:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "5171:7:7",
																	"nodeType": "YulTypedName",
																	"src": "5171:7:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5192:43:7",
															"nodeType": "YulAssignment",
															"src": "5192:43:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5220:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5220:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5231:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5231:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5216:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5216:3:7"
																		},
																		"nativeSrc": "5216:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5216:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5203:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "5203:12:7"
																},
																"nativeSrc": "5203:32:7",
																"nodeType": "YulFunctionCall",
																"src": "5203:32:7"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "5192:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "5192:7:7"
																}
															]
														},
														{
															"nativeSrc": "5244:17:7",
															"nodeType": "YulAssignment",
															"src": "5244:17:7",
															"value": {
																"name": "value_1",
																"nativeSrc": "5254:7:7",
																"nodeType": "YulIdentifier",
																"src": "5254:7:7"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "5244:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5244:6:7"
																}
															]
														},
														{
															"nativeSrc": "5270:16:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5270:16:7",
															"value": {
																"kind": "number",
																"nativeSrc": "5285:1:7",
																"nodeType": "YulLiteral",
																"src": "5285:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nativeSrc": "5274:7:7",
																	"nodeType": "YulTypedName",
																	"src": "5274:7:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5295:44:7",
															"nodeType": "YulAssignment",
															"src": "5295:44:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5323:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5323:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5334:3:7",
																				"nodeType": "YulLiteral",
																				"src": "5334:3:7",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5319:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5319:3:7"
																		},
																		"nativeSrc": "5319:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5319:19:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5306:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "5306:12:7"
																},
																"nativeSrc": "5306:33:7",
																"nodeType": "YulFunctionCall",
																"src": "5306:33:7"
															},
															"variableNames": [
																{
																	"name": "value_2",
																	"nativeSrc": "5295:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "5295:7:7"
																}
															]
														},
														{
															"nativeSrc": "5348:17:7",
															"nodeType": "YulAssignment",
															"src": "5348:17:7",
															"value": {
																"name": "value_2",
																"nativeSrc": "5358:7:7",
																"nodeType": "YulIdentifier",
																"src": "5358:7:7"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "5348:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5348:6:7"
																}
															]
														},
														{
															"nativeSrc": "5374:16:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5374:16:7",
															"value": {
																"kind": "number",
																"nativeSrc": "5389:1:7",
																"nodeType": "YulLiteral",
																"src": "5389:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_3",
																	"nativeSrc": "5378:7:7",
																	"nodeType": "YulTypedName",
																	"src": "5378:7:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5399:44:7",
															"nodeType": "YulAssignment",
															"src": "5399:44:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5427:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5427:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5438:3:7",
																				"nodeType": "YulLiteral",
																				"src": "5438:3:7",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5423:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5423:3:7"
																		},
																		"nativeSrc": "5423:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5423:19:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5410:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "5410:12:7"
																},
																"nativeSrc": "5410:33:7",
																"nodeType": "YulFunctionCall",
																"src": "5410:33:7"
															},
															"variableNames": [
																{
																	"name": "value_3",
																	"nativeSrc": "5399:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "5399:7:7"
																}
															]
														},
														{
															"nativeSrc": "5452:17:7",
															"nodeType": "YulAssignment",
															"src": "5452:17:7",
															"value": {
																"name": "value_3",
																"nativeSrc": "5462:7:7",
																"nodeType": "YulIdentifier",
																"src": "5462:7:7"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nativeSrc": "5452:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5452:6:7"
																}
															]
														},
														{
															"nativeSrc": "5478:49:7",
															"nodeType": "YulAssignment",
															"src": "5478:49:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5511:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5511:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5522:3:7",
																				"nodeType": "YulLiteral",
																				"src": "5522:3:7",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5507:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5507:3:7"
																		},
																		"nativeSrc": "5507:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5507:19:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "5488:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "5488:18:7"
																},
																"nativeSrc": "5488:39:7",
																"nodeType": "YulFunctionCall",
																"src": "5488:39:7"
															},
															"variableNames": [
																{
																	"name": "value6",
																	"nativeSrc": "5478:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5478:6:7"
																}
															]
														},
														{
															"nativeSrc": "5536:16:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5536:16:7",
															"value": {
																"kind": "number",
																"nativeSrc": "5551:1:7",
																"nodeType": "YulLiteral",
																"src": "5551:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_4",
																	"nativeSrc": "5540:7:7",
																	"nodeType": "YulTypedName",
																	"src": "5540:7:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5561:44:7",
															"nodeType": "YulAssignment",
															"src": "5561:44:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5589:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5589:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5600:3:7",
																				"nodeType": "YulLiteral",
																				"src": "5600:3:7",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5585:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5585:3:7"
																		},
																		"nativeSrc": "5585:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5585:19:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5572:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "5572:12:7"
																},
																"nativeSrc": "5572:33:7",
																"nodeType": "YulFunctionCall",
																"src": "5572:33:7"
															},
															"variableNames": [
																{
																	"name": "value_4",
																	"nativeSrc": "5561:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "5561:7:7"
																}
															]
														},
														{
															"nativeSrc": "5614:17:7",
															"nodeType": "YulAssignment",
															"src": "5614:17:7",
															"value": {
																"name": "value_4",
																"nativeSrc": "5624:7:7",
																"nodeType": "YulIdentifier",
																"src": "5624:7:7"
															},
															"variableNames": [
																{
																	"name": "value7",
																	"nativeSrc": "5614:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5614:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_uint256t_addresst_uint256",
												"nativeSrc": "4704:933:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4803:9:7",
														"nodeType": "YulTypedName",
														"src": "4803:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4814:7:7",
														"nodeType": "YulTypedName",
														"src": "4814:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4826:6:7",
														"nodeType": "YulTypedName",
														"src": "4826:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4834:6:7",
														"nodeType": "YulTypedName",
														"src": "4834:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4842:6:7",
														"nodeType": "YulTypedName",
														"src": "4842:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "4850:6:7",
														"nodeType": "YulTypedName",
														"src": "4850:6:7",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "4858:6:7",
														"nodeType": "YulTypedName",
														"src": "4858:6:7",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "4866:6:7",
														"nodeType": "YulTypedName",
														"src": "4866:6:7",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "4874:6:7",
														"nodeType": "YulTypedName",
														"src": "4874:6:7",
														"type": ""
													},
													{
														"name": "value7",
														"nativeSrc": "4882:6:7",
														"nodeType": "YulTypedName",
														"src": "4882:6:7",
														"type": ""
													}
												],
												"src": "4704:933:7"
											},
											{
												"body": {
													"nativeSrc": "5799:162:7",
													"nodeType": "YulBlock",
													"src": "5799:162:7",
													"statements": [
														{
															"nativeSrc": "5809:26:7",
															"nodeType": "YulAssignment",
															"src": "5809:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5821:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5821:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5832:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5832:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5817:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5817:3:7"
																},
																"nativeSrc": "5817:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5817:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5809:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5809:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5851:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5851:9:7"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "5862:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5862:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5844:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5844:6:7"
																},
																"nativeSrc": "5844:25:7",
																"nodeType": "YulFunctionCall",
																"src": "5844:25:7"
															},
															"nativeSrc": "5844:25:7",
															"nodeType": "YulExpressionStatement",
															"src": "5844:25:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5889:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5889:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5900:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5900:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5885:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5885:3:7"
																		},
																		"nativeSrc": "5885:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5885:18:7"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "5905:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5905:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5878:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5878:6:7"
																},
																"nativeSrc": "5878:34:7",
																"nodeType": "YulFunctionCall",
																"src": "5878:34:7"
															},
															"nativeSrc": "5878:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "5878:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5932:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5932:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5943:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5943:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5928:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5928:3:7"
																		},
																		"nativeSrc": "5928:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5928:18:7"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "5948:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5948:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5921:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5921:6:7"
																},
																"nativeSrc": "5921:34:7",
																"nodeType": "YulFunctionCall",
																"src": "5921:34:7"
															},
															"nativeSrc": "5921:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "5921:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "5642:319:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5752:9:7",
														"nodeType": "YulTypedName",
														"src": "5752:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5763:6:7",
														"nodeType": "YulTypedName",
														"src": "5763:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5771:6:7",
														"nodeType": "YulTypedName",
														"src": "5771:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5779:6:7",
														"nodeType": "YulTypedName",
														"src": "5779:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5790:4:7",
														"nodeType": "YulTypedName",
														"src": "5790:4:7",
														"type": ""
													}
												],
												"src": "5642:319:7"
											},
											{
												"body": {
													"nativeSrc": "6140:166:7",
													"nodeType": "YulBlock",
													"src": "6140:166:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6157:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6157:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6168:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6168:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6150:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6150:6:7"
																},
																"nativeSrc": "6150:21:7",
																"nodeType": "YulFunctionCall",
																"src": "6150:21:7"
															},
															"nativeSrc": "6150:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "6150:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6191:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6191:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6202:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6202:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6187:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6187:3:7"
																		},
																		"nativeSrc": "6187:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6187:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6207:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6207:2:7",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6180:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6180:6:7"
																},
																"nativeSrc": "6180:30:7",
																"nodeType": "YulFunctionCall",
																"src": "6180:30:7"
															},
															"nativeSrc": "6180:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "6180:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6230:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6230:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6241:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6241:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6226:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6226:3:7"
																		},
																		"nativeSrc": "6226:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6226:18:7"
																	},
																	{
																		"hexValue": "496e76616c6964207265736572766573",
																		"kind": "string",
																		"nativeSrc": "6246:18:7",
																		"nodeType": "YulLiteral",
																		"src": "6246:18:7",
																		"type": "",
																		"value": "Invalid reserves"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6219:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6219:6:7"
																},
																"nativeSrc": "6219:46:7",
																"nodeType": "YulFunctionCall",
																"src": "6219:46:7"
															},
															"nativeSrc": "6219:46:7",
															"nodeType": "YulExpressionStatement",
															"src": "6219:46:7"
														},
														{
															"nativeSrc": "6274:26:7",
															"nodeType": "YulAssignment",
															"src": "6274:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6286:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6286:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6297:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6297:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6282:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6282:3:7"
																},
																"nativeSrc": "6282:18:7",
																"nodeType": "YulFunctionCall",
																"src": "6282:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6274:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6274:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_185a9d5da6de3eebfb2e4ad4adad189f402b098c61f6e8e0c8d2b4a20a1faa2a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5966:340:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6117:9:7",
														"nodeType": "YulTypedName",
														"src": "6117:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6131:4:7",
														"nodeType": "YulTypedName",
														"src": "6131:4:7",
														"type": ""
													}
												],
												"src": "5966:340:7"
											},
											{
												"body": {
													"nativeSrc": "6343:95:7",
													"nodeType": "YulBlock",
													"src": "6343:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6360:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6360:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6367:3:7",
																				"nodeType": "YulLiteral",
																				"src": "6367:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6372:10:7",
																				"nodeType": "YulLiteral",
																				"src": "6372:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "6363:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6363:3:7"
																		},
																		"nativeSrc": "6363:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6363:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6353:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6353:6:7"
																},
																"nativeSrc": "6353:31:7",
																"nodeType": "YulFunctionCall",
																"src": "6353:31:7"
															},
															"nativeSrc": "6353:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "6353:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6400:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6400:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6403:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6403:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6393:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6393:6:7"
																},
																"nativeSrc": "6393:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6393:15:7"
															},
															"nativeSrc": "6393:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "6393:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6424:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6424:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6427:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6427:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6417:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6417:6:7"
																},
																"nativeSrc": "6417:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6417:15:7"
															},
															"nativeSrc": "6417:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "6417:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6311:127:7",
												"nodeType": "YulFunctionDefinition",
												"src": "6311:127:7"
											},
											{
												"body": {
													"nativeSrc": "6495:116:7",
													"nodeType": "YulBlock",
													"src": "6495:116:7",
													"statements": [
														{
															"nativeSrc": "6505:20:7",
															"nodeType": "YulAssignment",
															"src": "6505:20:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6520:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "6520:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6523:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "6523:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "6516:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6516:3:7"
																},
																"nativeSrc": "6516:9:7",
																"nodeType": "YulFunctionCall",
																"src": "6516:9:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "6505:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "6505:7:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6583:22:7",
																"nodeType": "YulBlock",
																"src": "6583:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6585:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "6585:16:7"
																			},
																			"nativeSrc": "6585:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6585:18:7"
																		},
																		"nativeSrc": "6585:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6585:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "6554:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "6554:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "6547:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "6547:6:7"
																				},
																				"nativeSrc": "6547:9:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6547:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "6561:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "6561:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "6568:7:7",
																								"nodeType": "YulIdentifier",
																								"src": "6568:7:7"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "6577:1:7",
																								"nodeType": "YulIdentifier",
																								"src": "6577:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "6564:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "6564:3:7"
																						},
																						"nativeSrc": "6564:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "6564:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "6558:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "6558:2:7"
																				},
																				"nativeSrc": "6558:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6558:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "6544:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "6544:2:7"
																		},
																		"nativeSrc": "6544:37:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6544:37:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6537:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6537:6:7"
																},
																"nativeSrc": "6537:45:7",
																"nodeType": "YulFunctionCall",
																"src": "6537:45:7"
															},
															"nativeSrc": "6534:71:7",
															"nodeType": "YulIf",
															"src": "6534:71:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "6443:168:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6474:1:7",
														"nodeType": "YulTypedName",
														"src": "6474:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6477:1:7",
														"nodeType": "YulTypedName",
														"src": "6477:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "6483:7:7",
														"nodeType": "YulTypedName",
														"src": "6483:7:7",
														"type": ""
													}
												],
												"src": "6443:168:7"
											},
											{
												"body": {
													"nativeSrc": "6664:77:7",
													"nodeType": "YulBlock",
													"src": "6664:77:7",
													"statements": [
														{
															"nativeSrc": "6674:16:7",
															"nodeType": "YulAssignment",
															"src": "6674:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6685:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "6685:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6688:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "6688:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6681:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6681:3:7"
																},
																"nativeSrc": "6681:9:7",
																"nodeType": "YulFunctionCall",
																"src": "6681:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "6674:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6674:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6713:22:7",
																"nodeType": "YulBlock",
																"src": "6713:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6715:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "6715:16:7"
																			},
																			"nativeSrc": "6715:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6715:18:7"
																		},
																		"nativeSrc": "6715:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6715:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6705:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "6705:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "6708:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6708:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6702:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6702:2:7"
																},
																"nativeSrc": "6702:10:7",
																"nodeType": "YulFunctionCall",
																"src": "6702:10:7"
															},
															"nativeSrc": "6699:36:7",
															"nodeType": "YulIf",
															"src": "6699:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "6616:125:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6647:1:7",
														"nodeType": "YulTypedName",
														"src": "6647:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6650:1:7",
														"nodeType": "YulTypedName",
														"src": "6650:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "6656:3:7",
														"nodeType": "YulTypedName",
														"src": "6656:3:7",
														"type": ""
													}
												],
												"src": "6616:125:7"
											},
											{
												"body": {
													"nativeSrc": "6792:171:7",
													"nodeType": "YulBlock",
													"src": "6792:171:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6823:111:7",
																"nodeType": "YulBlock",
																"src": "6823:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6844:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6844:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6851:3:7",
																							"nodeType": "YulLiteral",
																							"src": "6851:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "6856:10:7",
																							"nodeType": "YulLiteral",
																							"src": "6856:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "6847:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "6847:3:7"
																					},
																					"nativeSrc": "6847:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6847:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6837:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6837:6:7"
																			},
																			"nativeSrc": "6837:31:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6837:31:7"
																		},
																		"nativeSrc": "6837:31:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6837:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6888:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6888:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6891:4:7",
																					"nodeType": "YulLiteral",
																					"src": "6891:4:7",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6881:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6881:6:7"
																			},
																			"nativeSrc": "6881:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6881:15:7"
																		},
																		"nativeSrc": "6881:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6881:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6916:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6916:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6919:4:7",
																					"nodeType": "YulLiteral",
																					"src": "6919:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6909:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6909:6:7"
																			},
																			"nativeSrc": "6909:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6909:15:7"
																		},
																		"nativeSrc": "6909:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6909:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6812:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "6812:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6805:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6805:6:7"
																},
																"nativeSrc": "6805:9:7",
																"nodeType": "YulFunctionCall",
																"src": "6805:9:7"
															},
															"nativeSrc": "6802:132:7",
															"nodeType": "YulIf",
															"src": "6802:132:7"
														},
														{
															"nativeSrc": "6943:14:7",
															"nodeType": "YulAssignment",
															"src": "6943:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6952:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "6952:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6955:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "6955:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6948:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6948:3:7"
																},
																"nativeSrc": "6948:9:7",
																"nodeType": "YulFunctionCall",
																"src": "6948:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "6943:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "6943:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "6746:217:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6777:1:7",
														"nodeType": "YulTypedName",
														"src": "6777:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6780:1:7",
														"nodeType": "YulTypedName",
														"src": "6780:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "6786:1:7",
														"nodeType": "YulTypedName",
														"src": "6786:1:7",
														"type": ""
													}
												],
												"src": "6746:217:7"
											},
											{
												"body": {
													"nativeSrc": "7142:156:7",
													"nodeType": "YulBlock",
													"src": "7142:156:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7159:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7159:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7170:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7170:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7152:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7152:6:7"
																},
																"nativeSrc": "7152:21:7",
																"nodeType": "YulFunctionCall",
																"src": "7152:21:7"
															},
															"nativeSrc": "7152:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "7152:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7193:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7193:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7204:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7204:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7189:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7189:3:7"
																		},
																		"nativeSrc": "7189:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7189:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7209:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7209:1:7",
																		"type": "",
																		"value": "7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7182:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7182:6:7"
																},
																"nativeSrc": "7182:29:7",
																"nodeType": "YulFunctionCall",
																"src": "7182:29:7"
															},
															"nativeSrc": "7182:29:7",
															"nodeType": "YulExpressionStatement",
															"src": "7182:29:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7231:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7231:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7242:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7242:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7227:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7227:3:7"
																		},
																		"nativeSrc": "7227:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7227:18:7"
																	},
																	{
																		"hexValue": "45787069726564",
																		"kind": "string",
																		"nativeSrc": "7247:9:7",
																		"nodeType": "YulLiteral",
																		"src": "7247:9:7",
																		"type": "",
																		"value": "Expired"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7220:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7220:6:7"
																},
																"nativeSrc": "7220:37:7",
																"nodeType": "YulFunctionCall",
																"src": "7220:37:7"
															},
															"nativeSrc": "7220:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "7220:37:7"
														},
														{
															"nativeSrc": "7266:26:7",
															"nodeType": "YulAssignment",
															"src": "7266:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7278:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7278:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7289:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7289:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7274:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7274:3:7"
																},
																"nativeSrc": "7274:18:7",
																"nodeType": "YulFunctionCall",
																"src": "7274:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7266:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7266:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f183c8b0f89612f6f096bf1f0017061404d2019bd0580f7b18bddb8dcc0d7a13__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6968:330:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7119:9:7",
														"nodeType": "YulTypedName",
														"src": "7119:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7133:4:7",
														"nodeType": "YulTypedName",
														"src": "7133:4:7",
														"type": ""
													}
												],
												"src": "6968:330:7"
											},
											{
												"body": {
													"nativeSrc": "7477:177:7",
													"nodeType": "YulBlock",
													"src": "7477:177:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7494:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7494:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7505:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7505:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7487:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7487:6:7"
																},
																"nativeSrc": "7487:21:7",
																"nodeType": "YulFunctionCall",
																"src": "7487:21:7"
															},
															"nativeSrc": "7487:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "7487:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7528:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7528:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7539:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7539:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7524:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7524:3:7"
																		},
																		"nativeSrc": "7524:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7524:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7544:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7544:2:7",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7517:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7517:6:7"
																},
																"nativeSrc": "7517:30:7",
																"nodeType": "YulFunctionCall",
																"src": "7517:30:7"
															},
															"nativeSrc": "7517:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "7517:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7567:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7567:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7578:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7578:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7563:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7563:3:7"
																		},
																		"nativeSrc": "7563:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7563:18:7"
																	},
																	{
																		"hexValue": "4f6e6c7920322d746f6b656e207061746820737570706f72746564",
																		"kind": "string",
																		"nativeSrc": "7583:29:7",
																		"nodeType": "YulLiteral",
																		"src": "7583:29:7",
																		"type": "",
																		"value": "Only 2-token path supported"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7556:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7556:6:7"
																},
																"nativeSrc": "7556:57:7",
																"nodeType": "YulFunctionCall",
																"src": "7556:57:7"
															},
															"nativeSrc": "7556:57:7",
															"nodeType": "YulExpressionStatement",
															"src": "7556:57:7"
														},
														{
															"nativeSrc": "7622:26:7",
															"nodeType": "YulAssignment",
															"src": "7622:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7634:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7634:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7645:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7645:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7630:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7630:3:7"
																},
																"nativeSrc": "7630:18:7",
																"nodeType": "YulFunctionCall",
																"src": "7630:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7622:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7622:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1999f60f5526a13cb17eac3c04d030e47d1c41d4e55af8ccb43358373aec7eb8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7303:351:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7454:9:7",
														"nodeType": "YulTypedName",
														"src": "7454:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7468:4:7",
														"nodeType": "YulTypedName",
														"src": "7468:4:7",
														"type": ""
													}
												],
												"src": "7303:351:7"
											},
											{
												"body": {
													"nativeSrc": "7691:95:7",
													"nodeType": "YulBlock",
													"src": "7691:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7708:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7708:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7715:3:7",
																				"nodeType": "YulLiteral",
																				"src": "7715:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7720:10:7",
																				"nodeType": "YulLiteral",
																				"src": "7720:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "7711:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7711:3:7"
																		},
																		"nativeSrc": "7711:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7711:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7701:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7701:6:7"
																},
																"nativeSrc": "7701:31:7",
																"nodeType": "YulFunctionCall",
																"src": "7701:31:7"
															},
															"nativeSrc": "7701:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "7701:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7748:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7748:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7751:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7751:4:7",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7741:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7741:6:7"
																},
																"nativeSrc": "7741:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7741:15:7"
															},
															"nativeSrc": "7741:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "7741:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7772:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7772:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7775:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7775:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7765:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7765:6:7"
																},
																"nativeSrc": "7765:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7765:15:7"
															},
															"nativeSrc": "7765:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "7765:15:7"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "7659:127:7",
												"nodeType": "YulFunctionDefinition",
												"src": "7659:127:7"
											},
											{
												"body": {
													"nativeSrc": "7861:116:7",
													"nodeType": "YulBlock",
													"src": "7861:116:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "7907:16:7",
																"nodeType": "YulBlock",
																"src": "7907:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7916:1:7",
																					"nodeType": "YulLiteral",
																					"src": "7916:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7919:1:7",
																					"nodeType": "YulLiteral",
																					"src": "7919:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7909:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7909:6:7"
																			},
																			"nativeSrc": "7909:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7909:12:7"
																		},
																		"nativeSrc": "7909:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7909:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7882:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7882:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7891:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7891:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7878:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7878:3:7"
																		},
																		"nativeSrc": "7878:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7878:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7903:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7903:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7874:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7874:3:7"
																},
																"nativeSrc": "7874:32:7",
																"nodeType": "YulFunctionCall",
																"src": "7874:32:7"
															},
															"nativeSrc": "7871:52:7",
															"nodeType": "YulIf",
															"src": "7871:52:7"
														},
														{
															"nativeSrc": "7932:39:7",
															"nodeType": "YulAssignment",
															"src": "7932:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7961:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7961:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "7942:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "7942:18:7"
																},
																"nativeSrc": "7942:29:7",
																"nodeType": "YulFunctionCall",
																"src": "7942:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "7932:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7932:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "7791:186:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7827:9:7",
														"nodeType": "YulTypedName",
														"src": "7827:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7838:7:7",
														"nodeType": "YulTypedName",
														"src": "7838:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7850:6:7",
														"nodeType": "YulTypedName",
														"src": "7850:6:7",
														"type": ""
													}
												],
												"src": "7791:186:7"
											},
											{
												"body": {
													"nativeSrc": "8156:169:7",
													"nodeType": "YulBlock",
													"src": "8156:169:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8173:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "8173:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8184:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8184:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8166:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8166:6:7"
																},
																"nativeSrc": "8166:21:7",
																"nodeType": "YulFunctionCall",
																"src": "8166:21:7"
															},
															"nativeSrc": "8166:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "8166:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8207:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8207:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8218:2:7",
																				"nodeType": "YulLiteral",
																				"src": "8218:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8203:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8203:3:7"
																		},
																		"nativeSrc": "8203:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8203:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8223:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8223:2:7",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8196:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8196:6:7"
																},
																"nativeSrc": "8196:30:7",
																"nodeType": "YulFunctionCall",
																"src": "8196:30:7"
															},
															"nativeSrc": "8196:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "8196:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8246:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8246:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8257:2:7",
																				"nodeType": "YulLiteral",
																				"src": "8257:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8242:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8242:3:7"
																		},
																		"nativeSrc": "8242:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8242:18:7"
																	},
																	{
																		"hexValue": "496e73756666696369656e74206f7574707574",
																		"kind": "string",
																		"nativeSrc": "8262:21:7",
																		"nodeType": "YulLiteral",
																		"src": "8262:21:7",
																		"type": "",
																		"value": "Insufficient output"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8235:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8235:6:7"
																},
																"nativeSrc": "8235:49:7",
																"nodeType": "YulFunctionCall",
																"src": "8235:49:7"
															},
															"nativeSrc": "8235:49:7",
															"nodeType": "YulExpressionStatement",
															"src": "8235:49:7"
														},
														{
															"nativeSrc": "8293:26:7",
															"nodeType": "YulAssignment",
															"src": "8293:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8305:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "8305:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8316:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8316:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8301:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8301:3:7"
																},
																"nativeSrc": "8301:18:7",
																"nodeType": "YulFunctionCall",
																"src": "8301:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8293:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8293:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ffebb6789a62ed60836fc38e566e8cbcff27ebb3acadee53ee5da9825f1b14e1__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7982:343:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8133:9:7",
														"nodeType": "YulTypedName",
														"src": "8133:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8147:4:7",
														"nodeType": "YulTypedName",
														"src": "8147:4:7",
														"type": ""
													}
												],
												"src": "7982:343:7"
											},
											{
												"body": {
													"nativeSrc": "8362:95:7",
													"nodeType": "YulBlock",
													"src": "8362:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8379:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8379:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8386:3:7",
																				"nodeType": "YulLiteral",
																				"src": "8386:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8391:10:7",
																				"nodeType": "YulLiteral",
																				"src": "8391:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "8382:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8382:3:7"
																		},
																		"nativeSrc": "8382:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8382:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8372:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8372:6:7"
																},
																"nativeSrc": "8372:31:7",
																"nodeType": "YulFunctionCall",
																"src": "8372:31:7"
															},
															"nativeSrc": "8372:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "8372:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8419:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8419:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8422:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8422:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8412:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8412:6:7"
																},
																"nativeSrc": "8412:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8412:15:7"
															},
															"nativeSrc": "8412:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "8412:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8443:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8443:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8446:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8446:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8436:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8436:6:7"
																},
																"nativeSrc": "8436:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8436:15:7"
															},
															"nativeSrc": "8436:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "8436:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "8330:127:7",
												"nodeType": "YulFunctionDefinition",
												"src": "8330:127:7"
											},
											{
												"body": {
													"nativeSrc": "8636:161:7",
													"nodeType": "YulBlock",
													"src": "8636:161:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8653:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "8653:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8664:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8664:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8646:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8646:6:7"
																},
																"nativeSrc": "8646:21:7",
																"nodeType": "YulFunctionCall",
																"src": "8646:21:7"
															},
															"nativeSrc": "8646:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "8646:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8687:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8687:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8698:2:7",
																				"nodeType": "YulLiteral",
																				"src": "8698:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8683:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8683:3:7"
																		},
																		"nativeSrc": "8683:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8683:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8703:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8703:2:7",
																		"type": "",
																		"value": "11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8676:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8676:6:7"
																},
																"nativeSrc": "8676:30:7",
																"nodeType": "YulFunctionCall",
																"src": "8676:30:7"
															},
															"nativeSrc": "8676:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "8676:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8726:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8726:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8737:2:7",
																				"nodeType": "YulLiteral",
																				"src": "8737:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8722:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8722:3:7"
																		},
																		"nativeSrc": "8722:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8722:18:7"
																	},
																	{
																		"hexValue": "4e6f207265736572766573",
																		"kind": "string",
																		"nativeSrc": "8742:13:7",
																		"nodeType": "YulLiteral",
																		"src": "8742:13:7",
																		"type": "",
																		"value": "No reserves"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8715:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8715:6:7"
																},
																"nativeSrc": "8715:41:7",
																"nodeType": "YulFunctionCall",
																"src": "8715:41:7"
															},
															"nativeSrc": "8715:41:7",
															"nodeType": "YulExpressionStatement",
															"src": "8715:41:7"
														},
														{
															"nativeSrc": "8765:26:7",
															"nodeType": "YulAssignment",
															"src": "8765:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8777:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "8777:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8788:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8788:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8773:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8773:3:7"
																},
																"nativeSrc": "8773:18:7",
																"nodeType": "YulFunctionCall",
																"src": "8773:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8765:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8765:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8d6698763d2d0ff1e31fa7f43b504a63f09c2932b87b9842c093ff74de4d766__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8462:335:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8613:9:7",
														"nodeType": "YulTypedName",
														"src": "8613:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8627:4:7",
														"nodeType": "YulTypedName",
														"src": "8627:4:7",
														"type": ""
													}
												],
												"src": "8462:335:7"
											},
											{
												"body": {
													"nativeSrc": "8976:162:7",
													"nodeType": "YulBlock",
													"src": "8976:162:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8993:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "8993:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9004:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9004:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8986:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8986:6:7"
																},
																"nativeSrc": "8986:21:7",
																"nodeType": "YulFunctionCall",
																"src": "8986:21:7"
															},
															"nativeSrc": "8986:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "8986:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9027:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9027:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9038:2:7",
																				"nodeType": "YulLiteral",
																				"src": "9038:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9023:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9023:3:7"
																		},
																		"nativeSrc": "9023:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9023:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9043:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9043:2:7",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9016:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9016:6:7"
																},
																"nativeSrc": "9016:30:7",
																"nodeType": "YulFunctionCall",
																"src": "9016:30:7"
															},
															"nativeSrc": "9016:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "9016:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9066:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9066:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9077:2:7",
																				"nodeType": "YulLiteral",
																				"src": "9077:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9062:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9062:3:7"
																		},
																		"nativeSrc": "9062:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9062:18:7"
																	},
																	{
																		"hexValue": "4e6f206c6971756964697479",
																		"kind": "string",
																		"nativeSrc": "9082:14:7",
																		"nodeType": "YulLiteral",
																		"src": "9082:14:7",
																		"type": "",
																		"value": "No liquidity"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9055:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9055:6:7"
																},
																"nativeSrc": "9055:42:7",
																"nodeType": "YulFunctionCall",
																"src": "9055:42:7"
															},
															"nativeSrc": "9055:42:7",
															"nodeType": "YulExpressionStatement",
															"src": "9055:42:7"
														},
														{
															"nativeSrc": "9106:26:7",
															"nodeType": "YulAssignment",
															"src": "9106:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9118:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9118:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9129:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9129:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9114:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9114:3:7"
																},
																"nativeSrc": "9114:18:7",
																"nodeType": "YulFunctionCall",
																"src": "9114:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9106:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9106:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_379a432f00aa43993bfbf4e01492a8eab5138dcd2e395864ede728644390fc31__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8802:336:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8953:9:7",
														"nodeType": "YulTypedName",
														"src": "8953:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8967:4:7",
														"nodeType": "YulTypedName",
														"src": "8967:4:7",
														"type": ""
													}
												],
												"src": "8802:336:7"
											},
											{
												"body": {
													"nativeSrc": "9317:157:7",
													"nodeType": "YulBlock",
													"src": "9317:157:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9334:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9334:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9345:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9345:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9327:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9327:6:7"
																},
																"nativeSrc": "9327:21:7",
																"nodeType": "YulFunctionCall",
																"src": "9327:21:7"
															},
															"nativeSrc": "9327:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "9327:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9368:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9368:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9379:2:7",
																				"nodeType": "YulLiteral",
																				"src": "9379:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9364:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9364:3:7"
																		},
																		"nativeSrc": "9364:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9364:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9384:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9384:1:7",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9357:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9357:6:7"
																},
																"nativeSrc": "9357:29:7",
																"nodeType": "YulFunctionCall",
																"src": "9357:29:7"
															},
															"nativeSrc": "9357:29:7",
															"nodeType": "YulExpressionStatement",
															"src": "9357:29:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9406:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9406:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9417:2:7",
																				"nodeType": "YulLiteral",
																				"src": "9417:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9402:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9402:3:7"
																		},
																		"nativeSrc": "9402:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9402:18:7"
																	},
																	{
																		"hexValue": "536c697070616765",
																		"kind": "string",
																		"nativeSrc": "9422:10:7",
																		"nodeType": "YulLiteral",
																		"src": "9422:10:7",
																		"type": "",
																		"value": "Slippage"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9395:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9395:6:7"
																},
																"nativeSrc": "9395:38:7",
																"nodeType": "YulFunctionCall",
																"src": "9395:38:7"
															},
															"nativeSrc": "9395:38:7",
															"nodeType": "YulExpressionStatement",
															"src": "9395:38:7"
														},
														{
															"nativeSrc": "9442:26:7",
															"nodeType": "YulAssignment",
															"src": "9442:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9454:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9454:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9465:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9465:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9450:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9450:3:7"
																},
																"nativeSrc": "9450:18:7",
																"nodeType": "YulFunctionCall",
																"src": "9450:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9442:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9442:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fb87c09e63b5ee5d76fa5ada5f7c2fd9de8980c2964f73a791eaef9c4602f114__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9143:331:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9294:9:7",
														"nodeType": "YulTypedName",
														"src": "9294:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9308:4:7",
														"nodeType": "YulTypedName",
														"src": "9308:4:7",
														"type": ""
													}
												],
												"src": "9143:331:7"
											},
											{
												"body": {
													"nativeSrc": "9528:79:7",
													"nodeType": "YulBlock",
													"src": "9528:79:7",
													"statements": [
														{
															"nativeSrc": "9538:17:7",
															"nodeType": "YulAssignment",
															"src": "9538:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9550:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9550:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9553:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9553:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "9546:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9546:3:7"
																},
																"nativeSrc": "9546:9:7",
																"nodeType": "YulFunctionCall",
																"src": "9546:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "9538:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9538:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9579:22:7",
																"nodeType": "YulBlock",
																"src": "9579:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9581:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "9581:16:7"
																			},
																			"nativeSrc": "9581:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9581:18:7"
																		},
																		"nativeSrc": "9581:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "9581:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "9570:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "9570:4:7"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "9576:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9576:1:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9567:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "9567:2:7"
																},
																"nativeSrc": "9567:11:7",
																"nodeType": "YulFunctionCall",
																"src": "9567:11:7"
															},
															"nativeSrc": "9564:37:7",
															"nodeType": "YulIf",
															"src": "9564:37:7"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "9479:128:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9510:1:7",
														"nodeType": "YulTypedName",
														"src": "9510:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9513:1:7",
														"nodeType": "YulTypedName",
														"src": "9513:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "9519:4:7",
														"nodeType": "YulTypedName",
														"src": "9519:4:7",
														"type": ""
													}
												],
												"src": "9479:128:7"
											},
											{
												"body": {
													"nativeSrc": "9661:182:7",
													"nodeType": "YulBlock",
													"src": "9661:182:7",
													"statements": [
														{
															"nativeSrc": "9671:91:7",
															"nodeType": "YulAssignment",
															"src": "9671:91:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "9687:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "9687:1:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9690:30:7",
																				"nodeType": "YulLiteral",
																				"src": "9690:30:7",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9683:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9683:3:7"
																		},
																		"nativeSrc": "9683:38:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9683:38:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nativeSrc": "9727:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "9727:1:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9730:30:7",
																				"nodeType": "YulLiteral",
																				"src": "9730:30:7",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9723:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9723:3:7"
																		},
																		"nativeSrc": "9723:38:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9723:38:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "9679:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9679:3:7"
																},
																"nativeSrc": "9679:83:7",
																"nodeType": "YulFunctionCall",
																"src": "9679:83:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "9671:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9671:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9815:22:7",
																"nodeType": "YulBlock",
																"src": "9815:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9817:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "9817:16:7"
																			},
																			"nativeSrc": "9817:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9817:18:7"
																		},
																		"nativeSrc": "9817:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "9817:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "9777:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "9777:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9783:30:7",
																		"nodeType": "YulLiteral",
																		"src": "9783:30:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9774:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "9774:2:7"
																},
																"nativeSrc": "9774:40:7",
																"nodeType": "YulFunctionCall",
																"src": "9774:40:7"
															},
															"nativeSrc": "9771:66:7",
															"nodeType": "YulIf",
															"src": "9771:66:7"
														}
													]
												},
												"name": "checked_sub_t_uint112",
												"nativeSrc": "9612:231:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9643:1:7",
														"nodeType": "YulTypedName",
														"src": "9643:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9646:1:7",
														"nodeType": "YulTypedName",
														"src": "9646:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "9652:4:7",
														"nodeType": "YulTypedName",
														"src": "9652:4:7",
														"type": ""
													}
												],
												"src": "9612:231:7"
											},
											{
												"body": {
													"nativeSrc": "9896:180:7",
													"nodeType": "YulBlock",
													"src": "9896:180:7",
													"statements": [
														{
															"nativeSrc": "9906:90:7",
															"nodeType": "YulAssignment",
															"src": "9906:90:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "9921:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "9921:1:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9924:30:7",
																				"nodeType": "YulLiteral",
																				"src": "9924:30:7",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9917:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9917:3:7"
																		},
																		"nativeSrc": "9917:38:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9917:38:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nativeSrc": "9961:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "9961:1:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9964:30:7",
																				"nodeType": "YulLiteral",
																				"src": "9964:30:7",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9957:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9957:3:7"
																		},
																		"nativeSrc": "9957:38:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9957:38:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9913:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9913:3:7"
																},
																"nativeSrc": "9913:83:7",
																"nodeType": "YulFunctionCall",
																"src": "9913:83:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9906:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9906:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10048:22:7",
																"nodeType": "YulBlock",
																"src": "10048:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10050:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "10050:16:7"
																			},
																			"nativeSrc": "10050:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "10050:18:7"
																		},
																		"nativeSrc": "10050:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "10050:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "sum",
																		"nativeSrc": "10011:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10011:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10016:30:7",
																		"nodeType": "YulLiteral",
																		"src": "10016:30:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10008:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "10008:2:7"
																},
																"nativeSrc": "10008:39:7",
																"nodeType": "YulFunctionCall",
																"src": "10008:39:7"
															},
															"nativeSrc": "10005:65:7",
															"nodeType": "YulIf",
															"src": "10005:65:7"
														}
													]
												},
												"name": "checked_add_t_uint112",
												"nativeSrc": "9848:228:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9879:1:7",
														"nodeType": "YulTypedName",
														"src": "9879:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9882:1:7",
														"nodeType": "YulTypedName",
														"src": "9882:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9888:3:7",
														"nodeType": "YulTypedName",
														"src": "9888:3:7",
														"type": ""
													}
												],
												"src": "9848:228:7"
											},
											{
												"body": {
													"nativeSrc": "10228:194:7",
													"nodeType": "YulBlock",
													"src": "10228:194:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10245:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10245:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "10258:2:7",
																						"nodeType": "YulLiteral",
																						"src": "10258:2:7",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "value0",
																						"nativeSrc": "10262:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "10262:6:7"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "10254:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10254:3:7"
																				},
																				"nativeSrc": "10254:15:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10254:15:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "10275:26:7",
																						"nodeType": "YulLiteral",
																						"src": "10275:26:7",
																						"type": "",
																						"value": "0xffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "10271:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10271:3:7"
																				},
																				"nativeSrc": "10271:31:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10271:31:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10250:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10250:3:7"
																		},
																		"nativeSrc": "10250:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10250:53:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10238:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10238:6:7"
																},
																"nativeSrc": "10238:66:7",
																"nodeType": "YulFunctionCall",
																"src": "10238:66:7"
															},
															"nativeSrc": "10238:66:7",
															"nodeType": "YulExpressionStatement",
															"src": "10238:66:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "10324:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "10324:3:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10329:2:7",
																				"nodeType": "YulLiteral",
																				"src": "10329:2:7",
																				"type": "",
																				"value": "20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10320:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10320:3:7"
																		},
																		"nativeSrc": "10320:12:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10320:12:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "10342:2:7",
																						"nodeType": "YulLiteral",
																						"src": "10342:2:7",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "value1",
																						"nativeSrc": "10346:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "10346:6:7"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "10338:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10338:3:7"
																				},
																				"nativeSrc": "10338:15:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10338:15:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "10359:26:7",
																						"nodeType": "YulLiteral",
																						"src": "10359:26:7",
																						"type": "",
																						"value": "0xffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "10355:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10355:3:7"
																				},
																				"nativeSrc": "10355:31:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10355:31:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10334:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10334:3:7"
																		},
																		"nativeSrc": "10334:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10334:53:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10313:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10313:6:7"
																},
																"nativeSrc": "10313:75:7",
																"nodeType": "YulFunctionCall",
																"src": "10313:75:7"
															},
															"nativeSrc": "10313:75:7",
															"nodeType": "YulExpressionStatement",
															"src": "10313:75:7"
														},
														{
															"nativeSrc": "10397:19:7",
															"nodeType": "YulAssignment",
															"src": "10397:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10408:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10408:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10413:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10413:2:7",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10404:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10404:3:7"
																},
																"nativeSrc": "10404:12:7",
																"nodeType": "YulFunctionCall",
																"src": "10404:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10397:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10397:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "10081:341:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10196:3:7",
														"nodeType": "YulTypedName",
														"src": "10196:3:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10201:6:7",
														"nodeType": "YulTypedName",
														"src": "10201:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10209:6:7",
														"nodeType": "YulTypedName",
														"src": "10209:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10220:3:7",
														"nodeType": "YulTypedName",
														"src": "10220:3:7",
														"type": ""
													}
												],
												"src": "10081:341:7"
											},
											{
												"body": {
													"nativeSrc": "10556:145:7",
													"nodeType": "YulBlock",
													"src": "10556:145:7",
													"statements": [
														{
															"nativeSrc": "10566:26:7",
															"nodeType": "YulAssignment",
															"src": "10566:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10578:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "10578:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10589:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10589:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10574:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10574:3:7"
																},
																"nativeSrc": "10574:18:7",
																"nodeType": "YulFunctionCall",
																"src": "10574:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10566:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10566:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10608:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "10608:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "10623:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "10623:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "10639:3:7",
																								"nodeType": "YulLiteral",
																								"src": "10639:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "10644:1:7",
																								"nodeType": "YulLiteral",
																								"src": "10644:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "10635:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "10635:3:7"
																						},
																						"nativeSrc": "10635:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "10635:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10648:1:7",
																						"nodeType": "YulLiteral",
																						"src": "10648:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "10631:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10631:3:7"
																				},
																				"nativeSrc": "10631:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10631:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10619:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10619:3:7"
																		},
																		"nativeSrc": "10619:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10619:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10601:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10601:6:7"
																},
																"nativeSrc": "10601:51:7",
																"nodeType": "YulFunctionCall",
																"src": "10601:51:7"
															},
															"nativeSrc": "10601:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "10601:51:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10672:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10672:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10683:2:7",
																				"nodeType": "YulLiteral",
																				"src": "10683:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10668:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10668:3:7"
																		},
																		"nativeSrc": "10668:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10668:18:7"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "10688:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10688:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10661:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10661:6:7"
																},
																"nativeSrc": "10661:34:7",
																"nodeType": "YulFunctionCall",
																"src": "10661:34:7"
															},
															"nativeSrc": "10661:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "10661:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "10427:274:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10517:9:7",
														"nodeType": "YulTypedName",
														"src": "10517:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10528:6:7",
														"nodeType": "YulTypedName",
														"src": "10528:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10536:6:7",
														"nodeType": "YulTypedName",
														"src": "10536:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10547:4:7",
														"nodeType": "YulTypedName",
														"src": "10547:4:7",
														"type": ""
													}
												],
												"src": "10427:274:7"
											},
											{
												"body": {
													"nativeSrc": "10880:164:7",
													"nodeType": "YulBlock",
													"src": "10880:164:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10897:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "10897:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10908:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10908:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10890:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10890:6:7"
																},
																"nativeSrc": "10890:21:7",
																"nodeType": "YulFunctionCall",
																"src": "10890:21:7"
															},
															"nativeSrc": "10890:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "10890:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10931:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10931:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10942:2:7",
																				"nodeType": "YulLiteral",
																				"src": "10942:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10927:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10927:3:7"
																		},
																		"nativeSrc": "10927:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10927:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10947:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10947:2:7",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10920:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10920:6:7"
																},
																"nativeSrc": "10920:30:7",
																"nodeType": "YulFunctionCall",
																"src": "10920:30:7"
															},
															"nativeSrc": "10920:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "10920:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10970:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10970:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10981:2:7",
																				"nodeType": "YulLiteral",
																				"src": "10981:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10966:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10966:3:7"
																		},
																		"nativeSrc": "10966:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10966:18:7"
																	},
																	{
																		"hexValue": "496e73756666696369656e742042",
																		"kind": "string",
																		"nativeSrc": "10986:16:7",
																		"nodeType": "YulLiteral",
																		"src": "10986:16:7",
																		"type": "",
																		"value": "Insufficient B"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10959:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10959:6:7"
																},
																"nativeSrc": "10959:44:7",
																"nodeType": "YulFunctionCall",
																"src": "10959:44:7"
															},
															"nativeSrc": "10959:44:7",
															"nodeType": "YulExpressionStatement",
															"src": "10959:44:7"
														},
														{
															"nativeSrc": "11012:26:7",
															"nodeType": "YulAssignment",
															"src": "11012:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11024:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "11024:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11035:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11035:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11020:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11020:3:7"
																},
																"nativeSrc": "11020:18:7",
																"nodeType": "YulFunctionCall",
																"src": "11020:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11012:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11012:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_28ee48a047f51c165a70ae36f179330afc265bf4c05f56e1a1f02c2668dcead2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10706:338:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10857:9:7",
														"nodeType": "YulTypedName",
														"src": "10857:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10871:4:7",
														"nodeType": "YulTypedName",
														"src": "10871:4:7",
														"type": ""
													}
												],
												"src": "10706:338:7"
											},
											{
												"body": {
													"nativeSrc": "11223:164:7",
													"nodeType": "YulBlock",
													"src": "11223:164:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11240:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "11240:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11251:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11251:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11233:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11233:6:7"
																},
																"nativeSrc": "11233:21:7",
																"nodeType": "YulFunctionCall",
																"src": "11233:21:7"
															},
															"nativeSrc": "11233:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "11233:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11274:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11274:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11285:2:7",
																				"nodeType": "YulLiteral",
																				"src": "11285:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11270:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11270:3:7"
																		},
																		"nativeSrc": "11270:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11270:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11290:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11290:2:7",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11263:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11263:6:7"
																},
																"nativeSrc": "11263:30:7",
																"nodeType": "YulFunctionCall",
																"src": "11263:30:7"
															},
															"nativeSrc": "11263:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "11263:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11313:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11313:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11324:2:7",
																				"nodeType": "YulLiteral",
																				"src": "11324:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11309:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11309:3:7"
																		},
																		"nativeSrc": "11309:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11309:18:7"
																	},
																	{
																		"hexValue": "496e73756666696369656e742041",
																		"kind": "string",
																		"nativeSrc": "11329:16:7",
																		"nodeType": "YulLiteral",
																		"src": "11329:16:7",
																		"type": "",
																		"value": "Insufficient A"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11302:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11302:6:7"
																},
																"nativeSrc": "11302:44:7",
																"nodeType": "YulFunctionCall",
																"src": "11302:44:7"
															},
															"nativeSrc": "11302:44:7",
															"nodeType": "YulExpressionStatement",
															"src": "11302:44:7"
														},
														{
															"nativeSrc": "11355:26:7",
															"nodeType": "YulAssignment",
															"src": "11355:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11367:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "11367:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11378:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11378:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11363:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11363:3:7"
																},
																"nativeSrc": "11363:18:7",
																"nodeType": "YulFunctionCall",
																"src": "11363:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11355:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11355:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_00c0664002c3a7ab9481655483f753aa6ee21854999370a38d90a0549f0cf8f4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11049:338:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11200:9:7",
														"nodeType": "YulTypedName",
														"src": "11200:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11214:4:7",
														"nodeType": "YulTypedName",
														"src": "11214:4:7",
														"type": ""
													}
												],
												"src": "11049:338:7"
											},
											{
												"body": {
													"nativeSrc": "11549:214:7",
													"nodeType": "YulBlock",
													"src": "11549:214:7",
													"statements": [
														{
															"nativeSrc": "11559:26:7",
															"nodeType": "YulAssignment",
															"src": "11559:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11571:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "11571:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11582:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11582:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11567:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11567:3:7"
																},
																"nativeSrc": "11567:18:7",
																"nodeType": "YulFunctionCall",
																"src": "11567:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11559:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11559:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11601:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "11601:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "11616:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "11616:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "11632:3:7",
																								"nodeType": "YulLiteral",
																								"src": "11632:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "11637:1:7",
																								"nodeType": "YulLiteral",
																								"src": "11637:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "11628:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "11628:3:7"
																						},
																						"nativeSrc": "11628:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "11628:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11641:1:7",
																						"nodeType": "YulLiteral",
																						"src": "11641:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "11624:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "11624:3:7"
																				},
																				"nativeSrc": "11624:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "11624:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11612:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11612:3:7"
																		},
																		"nativeSrc": "11612:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11612:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11594:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11594:6:7"
																},
																"nativeSrc": "11594:51:7",
																"nodeType": "YulFunctionCall",
																"src": "11594:51:7"
															},
															"nativeSrc": "11594:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "11594:51:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11665:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11665:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11676:2:7",
																				"nodeType": "YulLiteral",
																				"src": "11676:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11661:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11661:3:7"
																		},
																		"nativeSrc": "11661:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11661:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "11685:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "11685:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "11701:3:7",
																								"nodeType": "YulLiteral",
																								"src": "11701:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "11706:1:7",
																								"nodeType": "YulLiteral",
																								"src": "11706:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "11697:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "11697:3:7"
																						},
																						"nativeSrc": "11697:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "11697:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11710:1:7",
																						"nodeType": "YulLiteral",
																						"src": "11710:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "11693:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "11693:3:7"
																				},
																				"nativeSrc": "11693:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "11693:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11681:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11681:3:7"
																		},
																		"nativeSrc": "11681:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11681:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11654:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11654:6:7"
																},
																"nativeSrc": "11654:60:7",
																"nodeType": "YulFunctionCall",
																"src": "11654:60:7"
															},
															"nativeSrc": "11654:60:7",
															"nodeType": "YulExpressionStatement",
															"src": "11654:60:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11734:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11734:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11745:2:7",
																				"nodeType": "YulLiteral",
																				"src": "11745:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11730:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11730:3:7"
																		},
																		"nativeSrc": "11730:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11730:18:7"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "11750:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "11750:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11723:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11723:6:7"
																},
																"nativeSrc": "11723:34:7",
																"nodeType": "YulFunctionCall",
																"src": "11723:34:7"
															},
															"nativeSrc": "11723:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "11723:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "11392:371:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11502:9:7",
														"nodeType": "YulTypedName",
														"src": "11502:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11513:6:7",
														"nodeType": "YulTypedName",
														"src": "11513:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11521:6:7",
														"nodeType": "YulTypedName",
														"src": "11521:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11529:6:7",
														"nodeType": "YulTypedName",
														"src": "11529:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11540:4:7",
														"nodeType": "YulTypedName",
														"src": "11540:4:7",
														"type": ""
													}
												],
												"src": "11392:371:7"
											},
											{
												"body": {
													"nativeSrc": "11869:102:7",
													"nodeType": "YulBlock",
													"src": "11869:102:7",
													"statements": [
														{
															"nativeSrc": "11879:26:7",
															"nodeType": "YulAssignment",
															"src": "11879:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11891:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "11891:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11902:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11902:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11887:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11887:3:7"
																},
																"nativeSrc": "11887:18:7",
																"nodeType": "YulFunctionCall",
																"src": "11887:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11879:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11879:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11921:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "11921:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "11936:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "11936:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "11952:3:7",
																								"nodeType": "YulLiteral",
																								"src": "11952:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "11957:1:7",
																								"nodeType": "YulLiteral",
																								"src": "11957:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "11948:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "11948:3:7"
																						},
																						"nativeSrc": "11948:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "11948:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11961:1:7",
																						"nodeType": "YulLiteral",
																						"src": "11961:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "11944:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "11944:3:7"
																				},
																				"nativeSrc": "11944:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "11944:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11932:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11932:3:7"
																		},
																		"nativeSrc": "11932:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11932:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11914:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11914:6:7"
																},
																"nativeSrc": "11914:51:7",
																"nodeType": "YulFunctionCall",
																"src": "11914:51:7"
															},
															"nativeSrc": "11914:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "11914:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "11768:203:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11838:9:7",
														"nodeType": "YulTypedName",
														"src": "11838:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11849:6:7",
														"nodeType": "YulTypedName",
														"src": "11849:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11860:4:7",
														"nodeType": "YulTypedName",
														"src": "11860:4:7",
														"type": ""
													}
												],
												"src": "11768:203:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint112_t_uint112__to_t_uint112_t_uint112__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n        let value_2 := 0\n        value_2 := calldataload(add(headStart, 64))\n        value2 := value_2\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_array$_t_address_$dyn_calldata_ptrt_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_1)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        if gt(add(add(_1, shl(5, length)), 32), dataEnd) { revert(0, 0) }\n        value2 := add(_1, 32)\n        value3 := length\n        value4 := abi_decode_address(add(headStart, 96))\n        let value_2 := 0\n        value_2 := calldataload(add(headStart, 128))\n        value5 := value_2\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let tail_1 := add(headStart, 32)\n        mstore(headStart, 32)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, 32)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, 32)\n            srcPtr := add(srcPtr, 32)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 96))\n        value3 := value_1\n        let value_2 := 0\n        value_2 := calldataload(add(headStart, 128))\n        value4 := value_2\n        value5 := abi_decode_address(add(headStart, 160))\n        let value_3 := 0\n        value_3 := calldataload(add(headStart, 192))\n        value6 := value_3\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7\n    {\n        if slt(sub(dataEnd, headStart), 256) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 96))\n        value3 := value_1\n        let value_2 := 0\n        value_2 := calldataload(add(headStart, 128))\n        value4 := value_2\n        let value_3 := 0\n        value_3 := calldataload(add(headStart, 160))\n        value5 := value_3\n        value6 := abi_decode_address(add(headStart, 192))\n        let value_4 := 0\n        value_4 := calldataload(add(headStart, 224))\n        value7 := value_4\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_185a9d5da6de3eebfb2e4ad4adad189f402b098c61f6e8e0c8d2b4a20a1faa2a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Invalid reserves\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_f183c8b0f89612f6f096bf1f0017061404d2019bd0580f7b18bddb8dcc0d7a13__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 7)\n        mstore(add(headStart, 64), \"Expired\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1999f60f5526a13cb17eac3c04d030e47d1c41d4e55af8ccb43358373aec7eb8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Only 2-token path supported\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_ffebb6789a62ed60836fc38e566e8cbcff27ebb3acadee53ee5da9825f1b14e1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Insufficient output\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_f8d6698763d2d0ff1e31fa7f43b504a63f09c2932b87b9842c093ff74de4d766__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 11)\n        mstore(add(headStart, 64), \"No reserves\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_379a432f00aa43993bfbf4e01492a8eab5138dcd2e395864ede728644390fc31__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"No liquidity\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fb87c09e63b5ee5d76fa5ada5f7c2fd9de8980c2964f73a791eaef9c4602f114__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 8)\n        mstore(add(headStart, 64), \"Slippage\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_sub_t_uint112(x, y) -> diff\n    {\n        diff := sub(and(x, 0xffffffffffffffffffffffffffff), and(y, 0xffffffffffffffffffffffffffff))\n        if gt(diff, 0xffffffffffffffffffffffffffff) { panic_error_0x11() }\n    }\n    function checked_add_t_uint112(x, y) -> sum\n    {\n        sum := add(and(x, 0xffffffffffffffffffffffffffff), and(y, 0xffffffffffffffffffffffffffff))\n        if gt(sum, 0xffffffffffffffffffffffffffff) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, and(shl(96, value0), not(0xffffffffffffffffffffffff)))\n        mstore(add(pos, 20), and(shl(96, value1), not(0xffffffffffffffffffffffff)))\n        end := add(pos, 40)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_28ee48a047f51c165a70ae36f179330afc265bf4c05f56e1a1f02c2668dcead2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Insufficient B\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_00c0664002c3a7ab9481655483f753aa6ee21854999370a38d90a0549f0cf8f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Insufficient A\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610084575f3560e01c8063ac41865a11610058578063ac41865a14610140578063baa2abde14610153578063bb521a301461017b578063e8e33700146101a5575f5ffd5b8062bbf1e414610088578063054d50d4146100e057806338ed17391461010157806354b7a8f714610121575b5f5ffd5b6100bb610096366004610dbd565b5f602081905290815260409020546001600160701b0380821691600160701b90041682565b604080516001600160701b039384168152929091166020830152015b60405180910390f35b6100f36100ee366004610dd4565b6101d3565b6040519081526020016100d7565b61011461010f366004610e18565b61027c565b6040516100d79190610eb6565b6100f361012f366004610dbd565b60016020525f908152604090205481565b6100f361014e366004610ef8565b61041c565b610166610161366004610f29565b6104d4565b604080519283526020830191909152016100d7565b6100f3610189366004610f91565b600260209081525f928352604080842090915290825290205481565b6101b86101b3366004610fb2565b610708565b604080519384526020840192909252908201526060016100d7565b5f5f841180156101e257505f83115b80156101ed57505f82115b6102315760405162461bcd60e51b815260206004820152601060248201526f496e76616c696420726573657276657360801b60448201526064015b60405180910390fd5b5f61023e856103e5611037565b90505f61024b8483611037565b90505f8261025b876103e8611037565b610265919061104e565b90506102718183611061565b979650505050505050565b60608142111561029e5760405162461bcd60e51b815260040161022890611080565b600284146102ee5760405162461bcd60e51b815260206004820152601b60248201527f4f6e6c7920322d746f6b656e207061746820737570706f7274656400000000006044820152606401610228565b5f85855f818110610301576103016110a1565b905060200201602081019061031691906110b5565b90505f8686600181811061032c5761032c6110a1565b905060200201602081019061034191906110b5565b90505f61034f8a848461079a565b9050888110156103975760405162461bcd60e51b8152602060048201526013602482015272125b9cdd59999a58da595b9d081bdd5d1c1d5d606a1b6044820152606401610228565b6103a483838c848a610804565b6103b083838c84610834565b604080516002808252606082018352909160208301908036833701905050935089845f815181106103e3576103e36110a1565b6020026020010181815250508084600181518110610403576104036110a1565b6020026020010181815250505050509695505050505050565b5f5f610428848461098a565b5f818152602081815260408083208151808301909252546001600160701b038082168352600160701b90910416918101919091529192508061046b878785610a16565b915091505f8211801561047d57505f81115b6104b75760405162461bcd60e51b815260206004820152600b60248201526a4e6f20726573657276657360a81b6044820152606401610228565b816104ca82670de0b6b3a7640000611037565b6102719190611061565b5f5f824211156104f65760405162461bcd60e51b815260040161022890611080565b5f6105018a8a61098a565b5f8181526020818152604080832060019092529091205491925090806105585760405162461bcd60e51b815260206004820152600c60248201526b4e6f206c697175696469747960a01b6044820152606401610228565b81548190610570908c906001600160701b0316611037565b61057a9190611061565b8254909550819061059c908c90600160701b90046001600160701b0316611037565b6105a69190611061565b93508885101580156105b85750878410155b6105ef5760405162461bcd60e51b8152602060048201526008602482015267536c69707061676560c01b6044820152606401610228565b5f838152600260209081526040808320338452909152812080548c92906106179084906110d5565b90915550505f83815260016020526040812080548c92906106399084906110d5565b90915550508154859083905f9061065a9084906001600160701b03166110e8565b92506101000a8154816001600160701b0302191690836001600160701b0316021790555083825f01600e8282829054906101000a90046001600160701b03166106a391906110e8565b92506101000a8154816001600160701b0302191690836001600160701b031602179055506106e587868e6001600160a01b0316610a5c9092919063ffffffff16565b6106f96001600160a01b038c168886610a5c565b50505097509795505050505050565b5f5f5f8342111561072b5760405162461bcd60e51b815260040161022890611080565b5f6107368c8c61098a565b5f81815260208190526040902080549192509061076a906001600160701b0380821691600160701b9004168d8d8d8d610ac0565b909550935061077b8d8d8787610bee565b6107888286868a85610c1e565b92505050985098509895505050505050565b5f5f6107a6848461098a565b5f818152602081815260408083208151808301909252546001600160701b038082168352600160701b9091041691810191909152919250806107e9878785610a16565b915091506107f88883836101d3565b98975050505050505050565b6108196001600160a01b038616333086610d18565b61082d6001600160a01b0385168284610a5c565b5050505050565b5f61083f858561098a565b5f8181526020819052604090209091506001600160a01b0380861690871610156108f1578054849082905f9061087f9084906001600160701b0316611107565b92506101000a8154816001600160701b0302191690836001600160701b0316021790555082815f01600e8282829054906101000a90046001600160701b03166108c891906110e8565b92506101000a8154816001600160701b0302191690836001600160701b03160217905550610982565b805484908290600e90610915908490600160701b90046001600160701b0316611107565b92506101000a8154816001600160701b0302191690836001600160701b0316021790555082815f015f8282829054906101000a90046001600160701b031661095d91906110e8565b92506101000a8154816001600160701b0302191690836001600160701b031602179055505b505050505050565b5f816001600160a01b0316836001600160a01b0316106109aa57816109ac565b825b826001600160a01b0316846001600160a01b0316106109cb57836109cd565b825b6040516bffffffffffffffffffffffff19606093841b811660208301529190921b1660348201526048016040516020818303038152906040528051906020012090505b92915050565b5f5f836001600160a01b0316856001600160a01b031610610a3d5760208301518351610a45565b825160208401515b6001600160701b0391821697911695509350505050565b6040516001600160a01b03838116602483015260448201839052610abb91859182169063a9059cbb906064015b604051602081830303815290604052915060e01b6020820180516001600160e01b038381831617835250505050610d51565b505050565b5f806001600160701b038816158015610ae057506001600160701b038716155b15610aef575084905083610be3565b5f886001600160701b0316886001600160701b031688610b0f9190611037565b610b199190611061565b9050858111610b6e5783811015610b635760405162461bcd60e51b815260206004820152600e60248201526d24b739bab33334b1b4b2b73a102160911b6044820152606401610228565b869250905080610be1565b5f886001600160701b03168a6001600160701b031688610b8e9190611037565b610b989190611061565b905085811015610bdb5760405162461bcd60e51b815260206004820152600e60248201526d496e73756666696369656e74204160901b6044820152606401610228565b92508591505b505b965096945050505050565b610c036001600160a01b038516333085610d18565b610c186001600160a01b038416333084610d18565b50505050565b5f610c29848661104e565b90508060015f8881526020019081526020015f205f828254610c4b919061104e565b90915550505f8681526002602090815260408083206001600160a01b038716845290915281208054839290610c8190849061104e565b90915550508154859083905f90610ca29084906001600160701b0316611107565b92506101000a8154816001600160701b0302191690836001600160701b0316021790555083825f01600e8282829054906101000a90046001600160701b0316610ceb9190611107565b92506101000a8154816001600160701b0302191690836001600160701b0316021790555095945050505050565b6040516001600160a01b038481166024830152838116604483015260648201839052610c189186918216906323b872dd90608401610a89565b5f5f60205f8451602086015f885af180610d70576040513d5f823e3d81fd5b50505f513d91508115610d87578060011415610d94565b6001600160a01b0384163b155b15610c1857604051635274afe760e01b81526001600160a01b0385166004820152602401610228565b5f60208284031215610dcd575f5ffd5b5035919050565b5f5f5f60608486031215610de6575f5ffd5b505081359360208301359350604090920135919050565b80356001600160a01b0381168114610e13575f5ffd5b919050565b5f5f5f5f5f5f60a08789031215610e2d575f5ffd5b8635955060208701359450604087013567ffffffffffffffff811115610e51575f5ffd5b8701601f81018913610e61575f5ffd5b803567ffffffffffffffff811115610e77575f5ffd5b8960208260051b8401011115610e8b575f5ffd5b60209190910194509250610ea160608801610dfd565b95989497509295919493608090920135925050565b602080825282518282018190525f918401906040840190835b81811015610eed578351835260209384019390920191600101610ecf565b509095945050505050565b5f5f60408385031215610f09575f5ffd5b610f1283610dfd565b9150610f2060208401610dfd565b90509250929050565b5f5f5f5f5f5f5f60e0888a031215610f3f575f5ffd5b610f4888610dfd565b9650610f5660208901610dfd565b9550604088013594506060880135935060808801359250610f7960a08901610dfd565b96999598509396929591949193505060c09091013590565b5f5f60408385031215610fa2575f5ffd5b82359150610f2060208401610dfd565b5f5f5f5f5f5f5f5f610100898b031215610fca575f5ffd5b610fd389610dfd565b9750610fe160208a01610dfd565b965060408901359550606089013594506080890135935060a0890135925061100b60c08a01610dfd565b979a969950949793969295919450919260e001359150565b634e487b7160e01b5f52601160045260245ffd5b8082028115828204841417610a1057610a10611023565b80820180821115610a1057610a10611023565b5f8261107b57634e487b7160e01b5f52601260045260245ffd5b500490565b602080825260079082015266115e1c1a5c995960ca1b604082015260600190565b634e487b7160e01b5f52603260045260245ffd5b5f602082840312156110c5575f5ffd5b6110ce82610dfd565b9392505050565b81810381811115610a1057610a10611023565b6001600160701b038281168282160390811115610a1057610a10611023565b6001600160701b038181168382160190811115610a1057610a1061102356fea26469706673582212206f6c62f49a7f678eec9b851aa1b24212e2aafa7515b6671161d3839c453e7bef64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x84 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAC41865A GT PUSH2 0x58 JUMPI DUP1 PUSH4 0xAC41865A EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0xBAA2ABDE EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0xBB521A30 EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0xE8E33700 EQ PUSH2 0x1A5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH3 0xBBF1E4 EQ PUSH2 0x88 JUMPI DUP1 PUSH4 0x54D50D4 EQ PUSH2 0xE0 JUMPI DUP1 PUSH4 0x38ED1739 EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x54B7A8F7 EQ PUSH2 0x121 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xBB PUSH2 0x96 CALLDATASIZE PUSH1 0x4 PUSH2 0xDBD JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV AND DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF3 PUSH2 0xEE CALLDATASIZE PUSH1 0x4 PUSH2 0xDD4 JUMP JUMPDEST PUSH2 0x1D3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD7 JUMP JUMPDEST PUSH2 0x114 PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0xE18 JUMP JUMPDEST PUSH2 0x27C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD7 SWAP2 SWAP1 PUSH2 0xEB6 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x12F CALLDATASIZE PUSH1 0x4 PUSH2 0xDBD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x14E CALLDATASIZE PUSH1 0x4 PUSH2 0xEF8 JUMP JUMPDEST PUSH2 0x41C JUMP JUMPDEST PUSH2 0x166 PUSH2 0x161 CALLDATASIZE PUSH1 0x4 PUSH2 0xF29 JUMP JUMPDEST PUSH2 0x4D4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0xD7 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x189 CALLDATASIZE PUSH1 0x4 PUSH2 0xF91 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1B8 PUSH2 0x1B3 CALLDATASIZE PUSH1 0x4 PUSH2 0xFB2 JUMP JUMPDEST PUSH2 0x708 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0xD7 JUMP JUMPDEST PUSH0 PUSH0 DUP5 GT DUP1 ISZERO PUSH2 0x1E2 JUMPI POP PUSH0 DUP4 GT JUMPDEST DUP1 ISZERO PUSH2 0x1ED JUMPI POP PUSH0 DUP3 GT JUMPDEST PUSH2 0x231 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x496E76616C6964207265736572766573 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x23E DUP6 PUSH2 0x3E5 PUSH2 0x1037 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x24B DUP5 DUP4 PUSH2 0x1037 JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH2 0x25B DUP8 PUSH2 0x3E8 PUSH2 0x1037 JUMP JUMPDEST PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x104E JUMP JUMPDEST SWAP1 POP PUSH2 0x271 DUP2 DUP4 PUSH2 0x1061 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 TIMESTAMP GT ISZERO PUSH2 0x29E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x228 SWAP1 PUSH2 0x1080 JUMP JUMPDEST PUSH1 0x2 DUP5 EQ PUSH2 0x2EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920322D746F6B656E207061746820737570706F727465640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x228 JUMP JUMPDEST PUSH0 DUP6 DUP6 PUSH0 DUP2 DUP2 LT PUSH2 0x301 JUMPI PUSH2 0x301 PUSH2 0x10A1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x316 SWAP2 SWAP1 PUSH2 0x10B5 JUMP JUMPDEST SWAP1 POP PUSH0 DUP7 DUP7 PUSH1 0x1 DUP2 DUP2 LT PUSH2 0x32C JUMPI PUSH2 0x32C PUSH2 0x10A1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x341 SWAP2 SWAP1 PUSH2 0x10B5 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x34F DUP11 DUP5 DUP5 PUSH2 0x79A JUMP JUMPDEST SWAP1 POP DUP9 DUP2 LT ISZERO PUSH2 0x397 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x125B9CDD59999A58DA595B9D081BDD5D1C1D5D PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x228 JUMP JUMPDEST PUSH2 0x3A4 DUP4 DUP4 DUP13 DUP5 DUP11 PUSH2 0x804 JUMP JUMPDEST PUSH2 0x3B0 DUP4 DUP4 DUP13 DUP5 PUSH2 0x834 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE SWAP1 SWAP2 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP4 POP DUP10 DUP5 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x3E3 JUMPI PUSH2 0x3E3 PUSH2 0x10A1 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP5 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x403 JUMPI PUSH2 0x403 PUSH2 0x10A1 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP POP POP POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x428 DUP5 DUP5 PUSH2 0x98A JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP3 AND DUP4 MSTORE PUSH1 0x1 PUSH1 0x70 SHL SWAP1 SWAP2 DIV AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP3 POP DUP1 PUSH2 0x46B DUP8 DUP8 DUP6 PUSH2 0xA16 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH0 DUP3 GT DUP1 ISZERO PUSH2 0x47D JUMPI POP PUSH0 DUP2 GT JUMPDEST PUSH2 0x4B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x4E6F207265736572766573 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x228 JUMP JUMPDEST DUP2 PUSH2 0x4CA DUP3 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1037 JUMP JUMPDEST PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x1061 JUMP JUMPDEST PUSH0 PUSH0 DUP3 TIMESTAMP GT ISZERO PUSH2 0x4F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x228 SWAP1 PUSH2 0x1080 JUMP JUMPDEST PUSH0 PUSH2 0x501 DUP11 DUP11 PUSH2 0x98A JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD SWAP2 SWAP3 POP SWAP1 DUP1 PUSH2 0x558 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x4E6F206C6971756964697479 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x228 JUMP JUMPDEST DUP2 SLOAD DUP2 SWAP1 PUSH2 0x570 SWAP1 DUP13 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND PUSH2 0x1037 JUMP JUMPDEST PUSH2 0x57A SWAP2 SWAP1 PUSH2 0x1061 JUMP JUMPDEST DUP3 SLOAD SWAP1 SWAP6 POP DUP2 SWAP1 PUSH2 0x59C SWAP1 DUP13 SWAP1 PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND PUSH2 0x1037 JUMP JUMPDEST PUSH2 0x5A6 SWAP2 SWAP1 PUSH2 0x1061 JUMP JUMPDEST SWAP4 POP DUP9 DUP6 LT ISZERO DUP1 ISZERO PUSH2 0x5B8 JUMPI POP DUP8 DUP5 LT ISZERO JUMPDEST PUSH2 0x5EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH8 0x536C697070616765 PUSH1 0xC0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x228 JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP13 SWAP3 SWAP1 PUSH2 0x617 SWAP1 DUP5 SWAP1 PUSH2 0x10D5 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP13 SWAP3 SWAP1 PUSH2 0x639 SWAP1 DUP5 SWAP1 PUSH2 0x10D5 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP2 SLOAD DUP6 SWAP1 DUP4 SWAP1 PUSH0 SWAP1 PUSH2 0x65A SWAP1 DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND PUSH2 0x10E8 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP4 DUP3 PUSH0 ADD PUSH1 0xE DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND PUSH2 0x6A3 SWAP2 SWAP1 PUSH2 0x10E8 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH2 0x6E5 DUP8 DUP7 DUP15 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xA5C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x6F9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP9 DUP7 PUSH2 0xA5C JUMP JUMPDEST POP POP POP SWAP8 POP SWAP8 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 TIMESTAMP GT ISZERO PUSH2 0x72B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x228 SWAP1 PUSH2 0x1080 JUMP JUMPDEST PUSH0 PUSH2 0x736 DUP13 DUP13 PUSH2 0x98A JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0x76A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV AND DUP14 DUP14 DUP14 DUP14 PUSH2 0xAC0 JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP PUSH2 0x77B DUP14 DUP14 DUP8 DUP8 PUSH2 0xBEE JUMP JUMPDEST PUSH2 0x788 DUP3 DUP7 DUP7 DUP11 DUP6 PUSH2 0xC1E JUMP JUMPDEST SWAP3 POP POP POP SWAP9 POP SWAP9 POP SWAP9 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x7A6 DUP5 DUP5 PUSH2 0x98A JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP3 AND DUP4 MSTORE PUSH1 0x1 PUSH1 0x70 SHL SWAP1 SWAP2 DIV AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP3 POP DUP1 PUSH2 0x7E9 DUP8 DUP8 DUP6 PUSH2 0xA16 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x7F8 DUP9 DUP4 DUP4 PUSH2 0x1D3 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x819 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND CALLER ADDRESS DUP7 PUSH2 0xD18 JUMP JUMPDEST PUSH2 0x82D PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP3 DUP5 PUSH2 0xA5C JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x83F DUP6 DUP6 PUSH2 0x98A JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND SWAP1 DUP8 AND LT ISZERO PUSH2 0x8F1 JUMPI DUP1 SLOAD DUP5 SWAP1 DUP3 SWAP1 PUSH0 SWAP1 PUSH2 0x87F SWAP1 DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND PUSH2 0x1107 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP3 DUP2 PUSH0 ADD PUSH1 0xE DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND PUSH2 0x8C8 SWAP2 SWAP1 PUSH2 0x10E8 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH2 0x982 JUMP JUMPDEST DUP1 SLOAD DUP5 SWAP1 DUP3 SWAP1 PUSH1 0xE SWAP1 PUSH2 0x915 SWAP1 DUP5 SWAP1 PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND PUSH2 0x1107 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP3 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND PUSH2 0x95D SWAP2 SWAP1 PUSH2 0x10E8 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND MUL OR SWAP1 SSTORE POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT PUSH2 0x9AA JUMPI DUP2 PUSH2 0x9AC JUMP JUMPDEST DUP3 JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT PUSH2 0x9CB JUMPI DUP4 PUSH2 0x9CD JUMP JUMPDEST DUP3 JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 SWAP4 DUP5 SHL DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE SWAP2 SWAP1 SWAP3 SHL AND PUSH1 0x34 DUP3 ADD MSTORE PUSH1 0x48 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT PUSH2 0xA3D JUMPI PUSH1 0x20 DUP4 ADD MLOAD DUP4 MLOAD PUSH2 0xA45 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x20 DUP5 ADD MLOAD JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SWAP2 DUP3 AND SWAP8 SWAP2 AND SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0xABB SWAP2 DUP6 SWAP2 DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xD51 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP9 AND ISZERO DUP1 ISZERO PUSH2 0xAE0 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP8 AND ISZERO JUMPDEST ISZERO PUSH2 0xAEF JUMPI POP DUP5 SWAP1 POP DUP4 PUSH2 0xBE3 JUMP JUMPDEST PUSH0 DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND DUP9 PUSH2 0xB0F SWAP2 SWAP1 PUSH2 0x1037 JUMP JUMPDEST PUSH2 0xB19 SWAP2 SWAP1 PUSH2 0x1061 JUMP JUMPDEST SWAP1 POP DUP6 DUP2 GT PUSH2 0xB6E JUMPI DUP4 DUP2 LT ISZERO PUSH2 0xB63 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x24B739BAB33334B1B4B2B73A1021 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x228 JUMP JUMPDEST DUP7 SWAP3 POP SWAP1 POP DUP1 PUSH2 0xBE1 JUMP JUMPDEST PUSH0 DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND DUP9 PUSH2 0xB8E SWAP2 SWAP1 PUSH2 0x1037 JUMP JUMPDEST PUSH2 0xB98 SWAP2 SWAP1 PUSH2 0x1061 JUMP JUMPDEST SWAP1 POP DUP6 DUP2 LT ISZERO PUSH2 0xBDB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x496E73756666696369656E742041 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x228 JUMP JUMPDEST SWAP3 POP DUP6 SWAP2 POP JUMPDEST POP JUMPDEST SWAP7 POP SWAP7 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xC03 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER ADDRESS DUP6 PUSH2 0xD18 JUMP JUMPDEST PUSH2 0xC18 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND CALLER ADDRESS DUP5 PUSH2 0xD18 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC29 DUP5 DUP7 PUSH2 0x104E JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xC4B SWAP2 SWAP1 PUSH2 0x104E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH0 DUP7 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xC81 SWAP1 DUP5 SWAP1 PUSH2 0x104E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP2 SLOAD DUP6 SWAP1 DUP4 SWAP1 PUSH0 SWAP1 PUSH2 0xCA2 SWAP1 DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND PUSH2 0x1107 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP4 DUP3 PUSH0 ADD PUSH1 0xE DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND PUSH2 0xCEB SWAP2 SWAP1 PUSH2 0x1107 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND MUL OR SWAP1 SSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0xC18 SWAP2 DUP7 SWAP2 DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x84 ADD PUSH2 0xA89 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0xD70 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST POP POP PUSH0 MLOAD RETURNDATASIZE SWAP2 POP DUP2 ISZERO PUSH2 0xD87 JUMPI DUP1 PUSH1 0x1 EQ ISZERO PUSH2 0xD94 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0xC18 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x228 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDCD JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xDE6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE13 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0xE2D JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP7 CALLDATALOAD SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE51 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP8 ADD PUSH1 0x1F DUP2 ADD DUP10 SGT PUSH2 0xE61 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE77 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP10 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP5 ADD ADD GT ISZERO PUSH2 0xE8B JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP5 POP SWAP3 POP PUSH2 0xEA1 PUSH1 0x60 DUP9 ADD PUSH2 0xDFD JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP3 SWAP6 SWAP2 SWAP5 SWAP4 PUSH1 0x80 SWAP1 SWAP3 ADD CALLDATALOAD SWAP3 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP2 DUP5 ADD SWAP1 PUSH1 0x40 DUP5 ADD SWAP1 DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xEED JUMPI DUP4 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xECF JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF09 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xF12 DUP4 PUSH2 0xDFD JUMP JUMPDEST SWAP2 POP PUSH2 0xF20 PUSH1 0x20 DUP5 ADD PUSH2 0xDFD JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0xF3F JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xF48 DUP9 PUSH2 0xDFD JUMP JUMPDEST SWAP7 POP PUSH2 0xF56 PUSH1 0x20 DUP10 ADD PUSH2 0xDFD JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP3 POP PUSH2 0xF79 PUSH1 0xA0 DUP10 ADD PUSH2 0xDFD JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP2 SWAP5 SWAP2 SWAP4 POP POP PUSH1 0xC0 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFA2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0xF20 PUSH1 0x20 DUP5 ADD PUSH2 0xDFD JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0xFCA JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xFD3 DUP10 PUSH2 0xDFD JUMP JUMPDEST SWAP8 POP PUSH2 0xFE1 PUSH1 0x20 DUP11 ADD PUSH2 0xDFD JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD SWAP4 POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD SWAP3 POP PUSH2 0x100B PUSH1 0xC0 DUP11 ADD PUSH2 0xDFD JUMP JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 SWAP4 SWAP7 SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP2 SWAP3 PUSH1 0xE0 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xA10 JUMPI PUSH2 0xA10 PUSH2 0x1023 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xA10 JUMPI PUSH2 0xA10 PUSH2 0x1023 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x107B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x7 SWAP1 DUP3 ADD MSTORE PUSH7 0x115E1C1A5C9959 PUSH1 0xCA SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10C5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x10CE DUP3 PUSH2 0xDFD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xA10 JUMPI PUSH2 0xA10 PUSH2 0x1023 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP3 DUP2 AND DUP3 DUP3 AND SUB SWAP1 DUP2 GT ISZERO PUSH2 0xA10 JUMPI PUSH2 0xA10 PUSH2 0x1023 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP2 GT ISZERO PUSH2 0xA10 JUMPI PUSH2 0xA10 PUSH2 0x1023 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0x6C62F49A7F678EEC9B851AA1B24212E2 0xAA STATICCALL PUSH22 0x15B6671161D3839C453E7BEF64736F6C634300081E00 CALLER ",
							"sourceMap": "543:10925:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;802:43;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;802:43:6;;;;-1:-1:-1;;;802:43:6;;;;;;;;;-1:-1:-1;;;;;437:43:7;;;419:62;;517:43;;;;512:2;497:18;;490:71;392:18;802:43:6;;;;;;;;6878:423;;;;;;:::i;:::-;;:::i;:::-;;;1189:25:7;;;1177:2;1162:18;6878:423:6;1043:177:7;5059:937:6;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;919:46::-;;;;;;:::i;:::-;;;;;;;;;;;;;;6207:389;;;;;;:::i;:::-;;:::i;3512:1109::-;;;;;;:::i;:::-;;:::i;:::-;;;;4320:25:7;;;4376:2;4361:18;;4354:34;;;;4293:18;3512:1109:6;4146:248:7;1036:68:6;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;1792:1152;;;;;;:::i;:::-;;:::i;:::-;;;;5844:25:7;;;5900:2;5885:18;;5878:34;;;;5928:18;;;5921:34;5832:2;5817:18;1792:1152:6;5642:319:7;6878:423:6;6969:14;7014:1;7003:8;:12;:29;;;;;7031:1;7019:9;:13;7003:29;:47;;;;;7049:1;7036:10;:14;7003:47;6995:76;;;;-1:-1:-1;;;6995:76:6;;6168:2:7;6995:76:6;;;6150:21:7;6207:2;6187:18;;;6180:30;-1:-1:-1;;;6226:18:7;;;6219:46;6282:18;;6995:76:6;;;;;;;;;7082:20;7105:14;:8;7116:3;7105:14;:::i;:::-;7082:37;-1:-1:-1;7141:14:6;7158:28;7176:10;7082:37;7158:28;:::i;:::-;7141:45;-1:-1:-1;7196:16:6;7234:15;7215:16;:9;7227:4;7215:16;:::i;:::-;:34;;;;:::i;:::-;7196:53;-1:-1:-1;7271:23:6;7196:53;7271:9;:23;:::i;:::-;7259:35;6878:423;-1:-1:-1;;;;;;;6878:423:6:o;5059:937::-;5243:21;5303:8;5284:15;:27;;5276:47;;;;-1:-1:-1;;;5276:47:6;;;;;;;:::i;:::-;5356:1;5341:16;;5333:56;;;;-1:-1:-1;;;5333:56:6;;7505:2:7;5333:56:6;;;7487:21:7;7544:2;7524:18;;;7517:30;7583:29;7563:18;;;7556:57;7630:18;;5333:56:6;7303:351:7;5333:56:6;5400:15;5418:4;;5423:1;5418:7;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;5400:25;;5435:16;5454:4;;5459:1;5454:7;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;5435:26;;5511:14;5528:49;5549:8;5559:7;5568:8;5528:20;:49::i;:::-;5511:66;;5608:12;5595:9;:25;;5587:57;;;;-1:-1:-1;;;5587:57:6;;8184:2:7;5587:57:6;;;8166:21:7;8223:2;8203:18;;;8196:30;-1:-1:-1;;;8242:18:7;;;8235:49;8301:18;;5587:57:6;7982:343:7;5587:57:6;5689:65;5711:7;5720:8;5730;5740:9;5751:2;5689:21;:65::i;:::-;5792:64;5817:7;5826:8;5836;5846:9;5792:24;:64::i;:::-;5913:13;;;5924:1;5913:13;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5913:13:6;5903:23;;5949:8;5936:7;5944:1;5936:10;;;;;;;;:::i;:::-;;;;;;:21;;;;;5980:9;5967:7;5975:1;5967:10;;;;;;;;:::i;:::-;;;;;;:22;;;;;5266:730;;;5059:937;;;;;;;;:::o;6207:389::-;6280:10;6302:16;6321:28;6334:6;6342;6321:12;:28::i;:::-;6359:18;6380;;;;;;;;;;;6359:39;;;;;;;;;-1:-1:-1;;;;;6359:39:6;;;;;-1:-1:-1;;;6359:39:6;;;;;;;;;;;6302:47;;-1:-1:-1;6359:18:6;6442:39;6461:6;6469;6359:39;6442:18;:39::i;:::-;6409:72;;;;6510:1;6499:8;:12;:28;;;;;6526:1;6515:8;:12;6499:28;6491:52;;;;-1:-1:-1;;;6491:52:6;;8664:2:7;6491:52:6;;;8646:21:7;8703:2;8683:18;;;8676:30;-1:-1:-1;;;8722:18:7;;;8715:41;8773:18;;6491:52:6;8462:335:7;6491:52:6;6581:8;6562:15;:8;6573:4;6562:15;:::i;:::-;6561:28;;;;:::i;3512:1109::-;3726:12;3740;3791:8;3772:15;:27;;3764:47;;;;-1:-1:-1;;;3764:47:6;;;;;;;:::i;:::-;3822:16;3841:28;3854:6;3862;3841:12;:28::i;:::-;3879:19;3901:18;;;;;;;;;;;3942:14;:24;;;;;;;3822:47;;-1:-1:-1;3901:18:6;3984:9;3976:34;;;;-1:-1:-1;;;3976:34:6;;9004:2:7;3976:34:6;;;8986:21:7;9043:2;9023:18;;;9016:30;-1:-1:-1;;;9062:18:7;;;9055:42;9114:18;;3976:34:6;8802:336:7;3976:34:6;4077:12;;4104:5;;4077:24;;4092:9;;-1:-1:-1;;;;;4077:12:6;:24;:::i;:::-;:32;;;;:::i;:::-;4129:12;;4067:42;;-1:-1:-1;4156:5:6;;4129:24;;4144:9;;-1:-1:-1;;;4129:12:6;;-1:-1:-1;;;;;4129:12:6;:24;:::i;:::-;:32;;;;:::i;:::-;4119:42;;4191:10;4180:7;:21;;:46;;;;;4216:10;4205:7;:21;;4180:46;4172:67;;;;-1:-1:-1;;;4172:67:6;;9345:2:7;4172:67:6;;;9327:21:7;9384:1;9364:18;;;9357:29;-1:-1:-1;;;9402:18:7;;;9395:38;9450:18;;4172:67:6;9143:331:7;4172:67:6;4295:26;;;;:16;:26;;;;;;;;4322:10;4295:38;;;;;;;:51;;4337:9;;4295:26;:51;;4337:9;;4295:51;:::i;:::-;;;;-1:-1:-1;;4356:24:6;;;;:14;:24;;;;;:37;;4384:9;;4356:24;:37;;4384:9;;4356:37;:::i;:::-;;;;-1:-1:-1;;4403:32:6;;4427:7;;4403:3;;:12;;:32;;4427:7;;-1:-1:-1;;;;;4403:32:6;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;4403:32:6;;;;;-1:-1:-1;;;;;4403:32:6;;;;;;4469:7;4445:3;:12;;;:32;;;;;;;;;;-1:-1:-1;;;;;4445:32:6;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;4445:32:6;;;;;-1:-1:-1;;;;;4445:32:6;;;;;;4524:40;4552:2;4556:7;4531:6;-1:-1:-1;;;;;4524:27:6;;;:40;;;;;:::i;:::-;4574;-1:-1:-1;;;;;4574:27:6;;4602:2;4606:7;4574:27;:40::i;:::-;3754:867;;;3512:1109;;;;;;;;;;:::o;1792:1152::-;2037:12;2051;2065:14;2118:8;2099:15;:27;;2091:47;;;;-1:-1:-1;;;2091:47:6;;;;;;;:::i;:::-;2149:16;2168:28;2181:6;2189;2168:12;:28::i;:::-;2206:19;2228:18;;;;;;;;;;2457:12;;2149:47;;-1:-1:-1;2228:18:6;2417:192;;-1:-1:-1;;;;;2457:12:6;;;;-1:-1:-1;;;2483:12:6;;;2509:14;2537;2565:10;2589;2417:26;:192::i;:::-;2396:213;;-1:-1:-1;2396:213:6;-1:-1:-1;2655:63:6;2685:6;2693;2396:213;;2655:29;:63::i;:::-;2869:68;2901:8;2911:7;2920;2929:2;2933:3;2869:31;:68::i;:::-;2857:80;;2081:863;;1792:1152;;;;;;;;;;;;:::o;9656:375::-;9759:4;9775:16;9794:31;9807:7;9816:8;9794:12;:31::i;:::-;9835:18;9856;;;;;;;;;;;9835:39;;;;;;;;;-1:-1:-1;;;;;9835:39:6;;;;;-1:-1:-1;;;9835:39:6;;;;;;;;;;;9775:50;;-1:-1:-1;9835:18:6;9920:42;9939:7;9948:8;9835:39;9920:18;:42::i;:::-;9884:78;;;;9979:45;9992:8;10002:9;10013:10;9979:12;:45::i;:::-;9972:52;9656:375;-1:-1:-1;;;;;;;;9656:375:6:o;10104:258::-;10232:69;-1:-1:-1;;;;;10232:32:6;;10265:10;10285:4;10292:8;10232:32;:69::i;:::-;10311:44;-1:-1:-1;;;;;10311:29:6;;10341:2;10345:9;10311:29;:44::i;:::-;10104:258;;;;;:::o;10429:477::-;10548:16;10567:31;10580:7;10589:8;10567:12;:31::i;:::-;10608:19;10630:18;;;;;;;;;;10548:50;;-1:-1:-1;;;;;;10662:18:6;;;;;;;10658:242;;;10696:33;;10720:8;;10696:3;;:12;;:33;;10720:8;;-1:-1:-1;;;;;10696:33:6;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;10696:33:6;;;;;-1:-1:-1;;;;;10696:33:6;;;;;;10767:9;10743:3;:12;;;:34;;;;;;;;;;-1:-1:-1;;;;;10743:34:6;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;10743:34:6;;;;;-1:-1:-1;;;;;10743:34:6;;;;;;10658:242;;;10808:33;;10832:8;;10808:33;;:12;;:33;;10832:8;;-1:-1:-1;;;10808:33:6;;-1:-1:-1;;;;;10808:33:6;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;10808:33:6;;;;;-1:-1:-1;;;;;10808:33:6;;;;;;10879:9;10855:3;:12;;;:34;;;;;;;;;;-1:-1:-1;;;;;10855:34:6;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;10855:34:6;;;;;-1:-1:-1;;;;;10855:34:6;;;;;;10658:242;10538:368;;10429:477;;;;:::o;10976:207::-;11053:7;11115:6;-1:-1:-1;;;;;11106:15:6;:6;-1:-1:-1;;;;;11106:15:6;;:33;;11133:6;11106:33;;;11124:6;11106:33;11150:6;-1:-1:-1;;;;;11141:15:6;:6;-1:-1:-1;;;;;11141:15:6;;:33;;11168:6;11141:33;;;11159:6;11141:33;11089:86;;-1:-1:-1;;10258:2:7;10254:15;;;10250:53;;11089:86:6;;;10238:66:7;10338:15;;;;10334:53;10320:12;;;10313:75;10404:12;;11089:86:6;;;;;;;;;;;;11079:97;;;;;;11072:104;;10976:207;;;;;:::o;11250:216::-;11353:4;11359;11391:6;-1:-1:-1;;;;;11382:15:6;:6;-1:-1:-1;;;;;11382:15:6;;:77;;11432:12;;;;11446;;11382:77;;;11401:12;;11415;;;;11382:77;-1:-1:-1;;;;;11375:84:6;;;;;;;-1:-1:-1;11250:216:6;-1:-1:-1;;;;11250:216:6:o;1219:160:4:-;1328:43;;-1:-1:-1;;;;;10619:32:7;;;1328:43:4;;;10601:51:7;10668:18;;;10661:34;;;1301:71:4;;1321:5;;1343:14;;;;;10574:18:7;;1328:43:4;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1328:43:4;;;;;;;;;;;1301:19;:71::i;:::-;1219:160;;;:::o;7446:1159:6:-;7685:22;;-1:-1:-1;;;;;7747:20:6;;;:44;;;;-1:-1:-1;;;;;;7771:20:6;;;7747:44;7743:856;;;-1:-1:-1;7902:14:6;;-1:-1:-1;7918:14:6;7743:856;;;8011:19;8068:15;-1:-1:-1;;;;;8033:50:6;8050:15;-1:-1:-1;;;;;8033:32:6;:14;:32;;;;:::i;:::-;:50;;;;:::i;:::-;8011:72;;8119:14;8101;:32;8097:492;;8179:10;8161:14;:28;;8153:55;;;;-1:-1:-1;;;8153:55:6;;10908:2:7;8153:55:6;;;10890:21:7;10947:2;10927:18;;;10920:30;-1:-1:-1;;;10966:18:7;;;10959:44;11020:18;;8153:55:6;10706:338:7;8153:55:6;8268:14;;-1:-1:-1;8284:14:6;-1:-1:-1;8284:14:6;8097:492;;;8338:19;8395:15;-1:-1:-1;;;;;8360:50:6;8377:15;-1:-1:-1;;;;;8360:32:6;:14;:32;;;;:::i;:::-;:50;;;;:::i;:::-;8338:72;;8454:10;8436:14;:28;;8428:55;;;;-1:-1:-1;;;8428:55:6;;11251:2:7;8428:55:6;;;11233:21:7;11290:2;11270:18;;;11263:30;-1:-1:-1;;;11309:18:7;;;11302:44;11363:18;;8428:55:6;11049:338:7;8428:55:6;8543:14;-1:-1:-1;8559:14:6;;-1:-1:-1;8097:492:6;7950:649;7743:856;7446:1159;;;;;;;;;:::o;8674:307::-;8830:67;-1:-1:-1;;;;;8830:31:6;;8862:10;8882:4;8889:7;8830:31;:67::i;:::-;8907;-1:-1:-1;;;;;8907:31:6;;8939:10;8959:4;8966:7;8907:31;:67::i;:::-;8674:307;;;;:::o;9050:470::-;9273:14;9311:17;9321:7;9311;:17;:::i;:::-;9299:29;;9366:9;9338:14;:24;9353:8;9338:24;;;;;;;;;;;;:37;;;;;;;:::i;:::-;;;;-1:-1:-1;;9385:26:6;;;;:16;:26;;;;;;;;-1:-1:-1;;;;;9385:30:6;;;;;;;;;:43;;9419:9;;9385:26;:43;;9419:9;;9385:43;:::i;:::-;;;;-1:-1:-1;;9439:32:6;;9463:7;;9439:3;;:12;;:32;;9463:7;;-1:-1:-1;;;;;9439:32:6;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;9439:32:6;;;;;-1:-1:-1;;;;;9439:32:6;;;;;;9505:7;9481:3;:12;;;:32;;;;;;;;;;-1:-1:-1;;;;;9481:32:6;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;9481:32:6;;;;;-1:-1:-1;;;;;9481:32:6;;;;;;9050:470;;;;;;;:::o;1618:188:4:-;1745:53;;-1:-1:-1;;;;;11612:32:7;;;1745:53:4;;;11594:51:7;11681:32;;;11661:18;;;11654:60;11730:18;;;11723:34;;;1718:81:4;;1738:5;;1760:18;;;;;11567::7;;1745:53:4;11392:371:7;8370:720:4;8450:18;8478:19;8616:4;8613:1;8606:4;8600:11;8593:4;8587;8583:15;8580:1;8573:5;8566;8561:60;8673:7;8663:176;;8717:4;8711:11;8762:16;8759:1;8754:3;8739:40;8808:16;8803:3;8796:29;8663:176;-1:-1:-1;;8916:1:4;8910:8;8866:16;;-1:-1:-1;8942:15:4;;:68;;8994:11;9009:1;8994:16;;8942:68;;;-1:-1:-1;;;;;8960:26:4;;;:31;8942:68;8938:146;;;9033:40;;-1:-1:-1;;;9033:40:4;;-1:-1:-1;;;;;11932:32:7;;9033:40:4;;;11914:51:7;11887:18;;9033:40:4;11768:203:7;14:226;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;187:23:7;;14:226;-1:-1:-1;14:226:7:o;572:466::-;649:6;657;665;718:2;706:9;697:7;693:23;689:32;686:52;;;734:1;731;724:12;686:52;-1:-1:-1;;779:23:7;;;899:2;884:18;;871:32;;-1:-1:-1;1002:2:7;987:18;;;974:32;;572:466;-1:-1:-1;572:466:7:o;1225:173::-;1293:20;;-1:-1:-1;;;;;1342:31:7;;1332:42;;1322:70;;1388:1;1385;1378:12;1322:70;1225:173;;;:::o;1403:1040::-;1525:6;1533;1541;1549;1557;1565;1618:3;1606:9;1597:7;1593:23;1589:33;1586:53;;;1635:1;1632;1625:12;1586:53;1680:23;;;-1:-1:-1;1800:2:7;1785:18;;1772:32;;-1:-1:-1;1881:2:7;1866:18;;1853:32;1908:18;1897:30;;1894:50;;;1940:1;1937;1930:12;1894:50;1963:22;;2016:4;2008:13;;2004:27;-1:-1:-1;1994:55:7;;2045:1;2042;2035:12;1994:55;2085:2;2072:16;2111:18;2103:6;2100:30;2097:50;;;2143:1;2140;2133:12;2097:50;2196:7;2191:2;2181:6;2178:1;2174:14;2170:2;2166:23;2162:32;2159:45;2156:65;;;2217:1;2214;2207:12;2156:65;2248:2;2240:11;;;;;-1:-1:-1;2270:6:7;-1:-1:-1;2295:38:7;2329:2;2314:18;;2295:38;:::i;:::-;1403:1040;;;;-1:-1:-1;1403:1040:7;;;;;2406:3;2391:19;;;2378:33;;-1:-1:-1;;1403:1040:7:o;2448:611::-;2638:2;2650:21;;;2720:13;;2623:18;;;2742:22;;;2590:4;;2821:15;;;2795:2;2780:18;;;2590:4;2864:169;2878:6;2875:1;2872:13;2864:169;;;2939:13;;2927:26;;2982:2;3008:15;;;;2973:12;;;;2900:1;2893:9;2864:169;;;-1:-1:-1;3050:3:7;;2448:611;-1:-1:-1;;;;;2448:611:7:o;3064:260::-;3132:6;3140;3193:2;3181:9;3172:7;3168:23;3164:32;3161:52;;;3209:1;3206;3199:12;3161:52;3232:29;3251:9;3232:29;:::i;:::-;3222:39;;3280:38;3314:2;3303:9;3299:18;3280:38;:::i;:::-;3270:48;;3064:260;;;;;:::o;3329:812::-;3442:6;3450;3458;3466;3474;3482;3490;3543:3;3531:9;3522:7;3518:23;3514:33;3511:53;;;3560:1;3557;3550:12;3511:53;3583:29;3602:9;3583:29;:::i;:::-;3573:39;;3631:38;3665:2;3654:9;3650:18;3631:38;:::i;:::-;3621:48;-1:-1:-1;3738:2:7;3723:18;;3710:32;;-1:-1:-1;3839:2:7;3824:18;;3811:32;;-1:-1:-1;3942:3:7;3927:19;;3914:33;;-1:-1:-1;3992:39:7;4026:3;4011:19;;3992:39;:::i;:::-;3329:812;;;;-1:-1:-1;3329:812:7;;;;;;;;-1:-1:-1;;4104:3:7;4089:19;;;4076:33;;3329:812::o;4399:300::-;4467:6;4475;4528:2;4516:9;4507:7;4503:23;4499:32;4496:52;;;4544:1;4541;4534:12;4496:52;4589:23;;;-1:-1:-1;4655:38:7;4689:2;4674:18;;4655:38;:::i;4704:933::-;4826:6;4834;4842;4850;4858;4866;4874;4882;4935:3;4923:9;4914:7;4910:23;4906:33;4903:53;;;4952:1;4949;4942:12;4903:53;4975:29;4994:9;4975:29;:::i;:::-;4965:39;;5023:38;5057:2;5046:9;5042:18;5023:38;:::i;:::-;5013:48;-1:-1:-1;5130:2:7;5115:18;;5102:32;;-1:-1:-1;5231:2:7;5216:18;;5203:32;;-1:-1:-1;5334:3:7;5319:19;;5306:33;;-1:-1:-1;5438:3:7;5423:19;;5410:33;;-1:-1:-1;5488:39:7;5522:3;5507:19;;5488:39;:::i;:::-;4704:933;;;;-1:-1:-1;4704:933:7;;;;;;;;-1:-1:-1;5478:49:7;;5600:3;5585:19;5572:33;;-1:-1:-1;4704:933:7:o;6311:127::-;6372:10;6367:3;6363:20;6360:1;6353:31;6403:4;6400:1;6393:15;6427:4;6424:1;6417:15;6443:168;6516:9;;;6547;;6564:15;;;6558:22;;6544:37;6534:71;;6585:18;;:::i;6616:125::-;6681:9;;;6702:10;;;6699:36;;;6715:18;;:::i;6746:217::-;6786:1;6812;6802:132;;6856:10;6851:3;6847:20;6844:1;6837:31;6891:4;6888:1;6881:15;6919:4;6916:1;6909:15;6802:132;-1:-1:-1;6948:9:7;;6746:217::o;6968:330::-;7170:2;7152:21;;;7209:1;7189:18;;;7182:29;-1:-1:-1;;;7242:2:7;7227:18;;7220:37;7289:2;7274:18;;6968:330::o;7659:127::-;7720:10;7715:3;7711:20;7708:1;7701:31;7751:4;7748:1;7741:15;7775:4;7772:1;7765:15;7791:186;7850:6;7903:2;7891:9;7882:7;7878:23;7874:32;7871:52;;;7919:1;7916;7909:12;7871:52;7942:29;7961:9;7942:29;:::i;:::-;7932:39;7791:186;-1:-1:-1;;;7791:186:7:o;9479:128::-;9546:9;;;9567:11;;;9564:37;;;9581:18;;:::i;9612:231::-;-1:-1:-1;;;;;9723:38:7;;;9683;;;9679:83;;9774:40;;9771:66;;;9817:18;;:::i;9848:228::-;-1:-1:-1;;;;;9917:38:7;;;9957;;;9913:83;;10008:39;;10005:65;;;10050:18;;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "888800",
								"executionCost": "920",
								"totalCost": "889720"
							},
							"external": {
								"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "infinite",
								"getAmountOut(uint256,uint256,uint256)": "infinite",
								"getPrice(address,address)": "infinite",
								"liquidityBalance(bytes32,address)": "2657",
								"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "infinite",
								"reserves(bytes32)": "2523",
								"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "infinite",
								"totalLiquidity(bytes32)": "2502"
							},
							"internal": {
								"_calculateLiquidityAmounts(uint112,uint112,uint256,uint256,uint256,uint256)": "infinite",
								"_calculateSwapOutput(uint256,address,address)": "infinite",
								"_getPairHash(address,address)": "infinite",
								"_getSortedReserves(address,address,struct SimpleSwap.Reserve memory)": "infinite",
								"_mintLiquidityAndUpdateReserves(bytes32,uint256,uint256,address,struct SimpleSwap.Reserve storage pointer)": "infinite",
								"_performAddLiquidityTransfers(address,address,uint256,uint256)": "infinite",
								"_performSwapTransfers(address,address,uint256,uint256,address)": "infinite",
								"_updateReservesAfterSwap(address,address,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 543,
									"end": 11468,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 543,
									"end": 11468,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 543,
									"end": 11468,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 543,
									"end": 11468,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 543,
									"end": 11468,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 543,
									"end": 11468,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 543,
									"end": 11468,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 543,
									"end": 11468,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 543,
									"end": 11468,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 543,
									"end": 11468,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 543,
									"end": 11468,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 543,
									"end": 11468,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 543,
									"end": 11468,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 543,
									"end": 11468,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 543,
									"end": 11468,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 543,
									"end": 11468,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 543,
									"end": 11468,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 543,
									"end": 11468,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 543,
									"end": 11468,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 543,
									"end": 11468,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 543,
									"end": 11468,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206f6c62f49a7f678eec9b851aa1b24212e2aafa7515b6671161d3839c453e7bef64736f6c634300081e0033",
									".code": [
										{
											"begin": 543,
											"end": 11468,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 543,
											"end": 11468,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 543,
											"end": 11468,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 543,
											"end": 11468,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 543,
											"end": 11468,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 543,
											"end": 11468,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 543,
											"end": 11468,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 543,
											"end": 11468,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 543,
											"end": 11468,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 543,
											"end": 11468,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 543,
											"end": 11468,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 543,
											"end": 11468,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 543,
											"end": 11468,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 543,
											"end": 11468,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 543,
											"end": 11468,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 543,
											"end": 11468,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 543,
											"end": 11468,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 543,
											"end": 11468,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 543,
											"end": 11468,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 543,
											"end": 11468,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 543,
											"end": 11468,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 543,
											"end": 11468,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 543,
											"end": 11468,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 543,
											"end": 11468,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 543,
											"end": 11468,
											"name": "PUSH",
											"source": 6,
											"value": "AC41865A"
										},
										{
											"begin": 543,
											"end": 11468,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 543,
											"end": 11468,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 543,
											"end": 11468,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 543,
											"end": 11468,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 543,
											"end": 11468,
											"name": "PUSH",
											"source": 6,
											"value": "AC41865A"
										},
										{
											"begin": 543,
											"end": 11468,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 543,
											"end": 11468,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 543,
											"end": 11468,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 543,
											"end": 11468,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 543,
											"end": 11468,
											"name": "PUSH",
											"source": 6,
											"value": "BAA2ABDE"
										},
										{
											"begin": 543,
											"end": 11468,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 543,
											"end": 11468,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 543,
											"end": 11468,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 543,
											"end": 11468,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 543,
											"end": 11468,
											"name": "PUSH",
											"source": 6,
											"value": "BB521A30"
										},
										{
											"begin": 543,
											"end": 11468,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 543,
											"end": 11468,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 543,
											"end": 11468,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 543,
											"end": 11468,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 543,
											"end": 11468,
											"name": "PUSH",
											"source": 6,
											"value": "E8E33700"
										},
										{
											"begin": 543,
											"end": 11468,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 543,
											"end": 11468,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 543,
											"end": 11468,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 543,
											"end": 11468,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 543,
											"end": 11468,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 543,
											"end": 11468,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 543,
											"end": 11468,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 543,
											"end": 11468,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 543,
											"end": 11468,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 543,
											"end": 11468,
											"name": "PUSH",
											"source": 6,
											"value": "BBF1E4"
										},
										{
											"begin": 543,
											"end": 11468,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 543,
											"end": 11468,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 543,
											"end": 11468,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 543,
											"end": 11468,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 543,
											"end": 11468,
											"name": "PUSH",
											"source": 6,
											"value": "54D50D4"
										},
										{
											"begin": 543,
											"end": 11468,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 543,
											"end": 11468,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 543,
											"end": 11468,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 543,
											"end": 11468,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 543,
											"end": 11468,
											"name": "PUSH",
											"source": 6,
											"value": "38ED1739"
										},
										{
											"begin": 543,
											"end": 11468,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 543,
											"end": 11468,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 543,
											"end": 11468,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 543,
											"end": 11468,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 543,
											"end": 11468,
											"name": "PUSH",
											"source": 6,
											"value": "54B7A8F7"
										},
										{
											"begin": 543,
											"end": 11468,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 543,
											"end": 11468,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 543,
											"end": 11468,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 543,
											"end": 11468,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 543,
											"end": 11468,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 543,
											"end": 11468,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 543,
											"end": 11468,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 543,
											"end": 11468,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 802,
											"end": 845,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 802,
											"end": 845,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 802,
											"end": 845,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 802,
											"end": 845,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 802,
											"end": 845,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 802,
											"end": 845,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 802,
											"end": 845,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 802,
											"end": 845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 802,
											"end": 845,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 802,
											"end": 845,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 802,
											"end": 845,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 802,
											"end": 845,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 802,
											"end": 845,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 802,
											"end": 845,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 802,
											"end": 845,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 802,
											"end": 845,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 802,
											"end": 845,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 802,
											"end": 845,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 802,
											"end": 845,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 802,
											"end": 845,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 802,
											"end": 845,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 802,
											"end": 845,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 802,
											"end": 845,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 802,
											"end": 845,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 802,
											"end": 845,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 802,
											"end": 845,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 802,
											"end": 845,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 802,
											"end": 845,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 802,
											"end": 845,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 802,
											"end": 845,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 802,
											"end": 845,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 802,
											"end": 845,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 802,
											"end": 845,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 802,
											"end": 845,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 802,
											"end": 845,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 802,
											"end": 845,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 437,
											"end": 480,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 437,
											"end": 480,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 437,
											"end": 480,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 419,
											"end": 481,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 419,
											"end": 481,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 517,
											"end": 560,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 517,
											"end": 560,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 517,
											"end": 560,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 517,
											"end": 560,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 512,
											"end": 514,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 497,
											"end": 515,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 497,
											"end": 515,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 490,
											"end": 561,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 392,
											"end": 410,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 802,
											"end": 845,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 802,
											"end": 845,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 802,
											"end": 845,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 802,
											"end": 845,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 802,
											"end": 845,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 802,
											"end": 845,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 802,
											"end": 845,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 802,
											"end": 845,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 802,
											"end": 845,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 6878,
											"end": 7301,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6878,
											"end": 7301,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6878,
											"end": 7301,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 6878,
											"end": 7301,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 6878,
											"end": 7301,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 6878,
											"end": 7301,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6878,
											"end": 7301,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6878,
											"end": 7301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6878,
											"end": 7301,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 6878,
											"end": 7301,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6878,
											"end": 7301,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 6878,
											"end": 7301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6878,
											"end": 7301,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 6878,
											"end": 7301,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6878,
											"end": 7301,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6878,
											"end": 7301,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1189,
											"end": 1214,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1189,
											"end": 1214,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1189,
											"end": 1214,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1177,
											"end": 1179,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1162,
											"end": 1180,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6878,
											"end": 7301,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 1043,
											"end": 1220,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5059,
											"end": 5996,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 5059,
											"end": 5996,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5059,
											"end": 5996,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5059,
											"end": 5996,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 5059,
											"end": 5996,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 5059,
											"end": 5996,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5059,
											"end": 5996,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 5059,
											"end": 5996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5059,
											"end": 5996,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 5059,
											"end": 5996,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5059,
											"end": 5996,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 5059,
											"end": 5996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5059,
											"end": 5996,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5059,
											"end": 5996,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5059,
											"end": 5996,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5059,
											"end": 5996,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5059,
											"end": 5996,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 5059,
											"end": 5996,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5059,
											"end": 5996,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5059,
											"end": 5996,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 5059,
											"end": 5996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 919,
											"end": 965,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 919,
											"end": 965,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 919,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 919,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 919,
											"end": 965,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 919,
											"end": 965,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 919,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 919,
											"end": 965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 919,
											"end": 965,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 919,
											"end": 965,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 919,
											"end": 965,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 919,
											"end": 965,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 919,
											"end": 965,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 919,
											"end": 965,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 919,
											"end": 965,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 919,
											"end": 965,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 919,
											"end": 965,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 919,
											"end": 965,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 919,
											"end": 965,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 919,
											"end": 965,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 919,
											"end": 965,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 919,
											"end": 965,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 919,
											"end": 965,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6207,
											"end": 6596,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 6207,
											"end": 6596,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6207,
											"end": 6596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 6207,
											"end": 6596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 6207,
											"end": 6596,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 6207,
											"end": 6596,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6207,
											"end": 6596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 6207,
											"end": 6596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6207,
											"end": 6596,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 6207,
											"end": 6596,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6207,
											"end": 6596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 6207,
											"end": 6596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3512,
											"end": 4621,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 3512,
											"end": 4621,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3512,
											"end": 4621,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 3512,
											"end": 4621,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3512,
											"end": 4621,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3512,
											"end": 4621,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3512,
											"end": 4621,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 3512,
											"end": 4621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3512,
											"end": 4621,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3512,
											"end": 4621,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3512,
											"end": 4621,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 3512,
											"end": 4621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3512,
											"end": 4621,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 3512,
											"end": 4621,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3512,
											"end": 4621,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3512,
											"end": 4621,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3512,
											"end": 4621,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4320,
											"end": 4345,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4320,
											"end": 4345,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4320,
											"end": 4345,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4376,
											"end": 4378,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4361,
											"end": 4379,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4361,
											"end": 4379,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4354,
											"end": 4388,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4354,
											"end": 4388,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4354,
											"end": 4388,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4354,
											"end": 4388,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4293,
											"end": 4311,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3512,
											"end": 4621,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 4146,
											"end": 4394,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1036,
											"end": 1104,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 1036,
											"end": 1104,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1036,
											"end": 1104,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 1036,
											"end": 1104,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1036,
											"end": 1104,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1036,
											"end": 1104,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1036,
											"end": 1104,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 1036,
											"end": 1104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1036,
											"end": 1104,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1036,
											"end": 1104,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1036,
											"end": 1104,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1036,
											"end": 1104,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1036,
											"end": 1104,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1036,
											"end": 1104,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1036,
											"end": 1104,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1036,
											"end": 1104,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1036,
											"end": 1104,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1036,
											"end": 1104,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1036,
											"end": 1104,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1036,
											"end": 1104,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1104,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1036,
											"end": 1104,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1036,
											"end": 1104,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1036,
											"end": 1104,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1036,
											"end": 1104,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1036,
											"end": 1104,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1036,
											"end": 1104,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1036,
											"end": 1104,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1036,
											"end": 1104,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1036,
											"end": 1104,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1036,
											"end": 1104,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1036,
											"end": 1104,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1036,
											"end": 1104,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1036,
											"end": 1104,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1792,
											"end": 2944,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 1792,
											"end": 2944,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1792,
											"end": 2944,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 1792,
											"end": 2944,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 1792,
											"end": 2944,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1792,
											"end": 2944,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1792,
											"end": 2944,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 1792,
											"end": 2944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1792,
											"end": 2944,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 1792,
											"end": 2944,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1792,
											"end": 2944,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 1792,
											"end": 2944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1792,
											"end": 2944,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 1792,
											"end": 2944,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1792,
											"end": 2944,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1792,
											"end": 2944,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1792,
											"end": 2944,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5844,
											"end": 5869,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 5844,
											"end": 5869,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5844,
											"end": 5869,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5900,
											"end": 5902,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5885,
											"end": 5903,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5885,
											"end": 5903,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5878,
											"end": 5912,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5878,
											"end": 5912,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5878,
											"end": 5912,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5878,
											"end": 5912,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5928,
											"end": 5946,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5928,
											"end": 5946,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5928,
											"end": 5946,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5832,
											"end": 5834,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 5817,
											"end": 5835,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1792,
											"end": 2944,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 5642,
											"end": 5961,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6878,
											"end": 7301,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 6878,
											"end": 7301,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6969,
											"end": 6983,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7014,
											"end": 7015,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7003,
											"end": 7011,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7003,
											"end": 7015,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 7003,
											"end": 7032,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7003,
											"end": 7032,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7003,
											"end": 7032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 7003,
											"end": 7032,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7003,
											"end": 7032,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7031,
											"end": 7032,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7019,
											"end": 7028,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7019,
											"end": 7032,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 7003,
											"end": 7032,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 7003,
											"end": 7032,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7003,
											"end": 7050,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7003,
											"end": 7050,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7003,
											"end": 7050,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 7003,
											"end": 7050,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7003,
											"end": 7050,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7049,
											"end": 7050,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7036,
											"end": 7046,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7036,
											"end": 7050,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 7003,
											"end": 7050,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 7003,
											"end": 7050,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6995,
											"end": 7071,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 6995,
											"end": 7071,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6995,
											"end": 7071,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6995,
											"end": 7071,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6995,
											"end": 7071,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6995,
											"end": 7071,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6168,
											"end": 6170,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6995,
											"end": 7071,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6995,
											"end": 7071,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6995,
											"end": 7071,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6150,
											"end": 6171,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6207,
											"end": 6209,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 6187,
											"end": 6205,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6187,
											"end": 6205,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6187,
											"end": 6205,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6180,
											"end": 6210,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C6964207265736572766573"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6226,
											"end": 6244,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 6226,
											"end": 6244,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6226,
											"end": 6244,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6219,
											"end": 6265,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6282,
											"end": 6300,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 6282,
											"end": 6300,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6995,
											"end": 7071,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 6995,
											"end": 7071,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6995,
											"end": 7071,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6995,
											"end": 7071,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6995,
											"end": 7071,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6995,
											"end": 7071,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6995,
											"end": 7071,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6995,
											"end": 7071,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6995,
											"end": 7071,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6995,
											"end": 7071,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 6995,
											"end": 7071,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7082,
											"end": 7102,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7105,
											"end": 7119,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 7105,
											"end": 7113,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7116,
											"end": 7119,
											"name": "PUSH",
											"source": 6,
											"value": "3E5"
										},
										{
											"begin": 7105,
											"end": 7119,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 7105,
											"end": 7119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7105,
											"end": 7119,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 7105,
											"end": 7119,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7082,
											"end": 7119,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7141,
											"end": 7155,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7158,
											"end": 7186,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 7176,
											"end": 7186,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7082,
											"end": 7119,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7158,
											"end": 7186,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 7158,
											"end": 7186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7158,
											"end": 7186,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 7158,
											"end": 7186,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7141,
											"end": 7186,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7196,
											"end": 7212,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7234,
											"end": 7249,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7215,
											"end": 7231,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 7215,
											"end": 7224,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 7227,
											"end": 7231,
											"name": "PUSH",
											"source": 6,
											"value": "3E8"
										},
										{
											"begin": 7215,
											"end": 7231,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 7215,
											"end": 7231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7215,
											"end": 7231,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 7215,
											"end": 7231,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7215,
											"end": 7249,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 7215,
											"end": 7249,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7215,
											"end": 7249,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7215,
											"end": 7249,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 7215,
											"end": 7249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7215,
											"end": 7249,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 7215,
											"end": 7249,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7196,
											"end": 7249,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7271,
											"end": 7294,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 7196,
											"end": 7249,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7271,
											"end": 7280,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7271,
											"end": 7294,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 7271,
											"end": 7294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7271,
											"end": 7294,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 7271,
											"end": 7294,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7259,
											"end": 7294,
											"name": "SWAP8",
											"source": 6
										},
										{
											"begin": 6878,
											"end": 7301,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6878,
											"end": 7301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5059,
											"end": 5996,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 5059,
											"end": 5996,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5243,
											"end": 5264,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5303,
											"end": 5311,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5284,
											"end": 5299,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 5284,
											"end": 5311,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5284,
											"end": 5311,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5276,
											"end": 5323,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 5276,
											"end": 5323,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5276,
											"end": 5323,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5276,
											"end": 5323,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5276,
											"end": 5323,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5276,
											"end": 5323,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5276,
											"end": 5323,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5276,
											"end": 5323,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5276,
											"end": 5323,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5276,
											"end": 5323,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5276,
											"end": 5323,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 5276,
											"end": 5323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5276,
											"end": 5323,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 5276,
											"end": 5323,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5356,
											"end": 5357,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 5341,
											"end": 5357,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5357,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 5333,
											"end": 5389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 5333,
											"end": 5389,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5333,
											"end": 5389,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5333,
											"end": 5389,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5333,
											"end": 5389,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5333,
											"end": 5389,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7505,
											"end": 7507,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5333,
											"end": 5389,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5333,
											"end": 5389,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5333,
											"end": 5389,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7487,
											"end": 7508,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7544,
											"end": 7546,
											"name": "PUSH",
											"source": 7,
											"value": "1B"
										},
										{
											"begin": 7524,
											"end": 7542,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 7524,
											"end": 7542,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7524,
											"end": 7542,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7517,
											"end": 7547,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7583,
											"end": 7612,
											"name": "PUSH",
											"source": 7,
											"value": "4F6E6C7920322D746F6B656E207061746820737570706F727465640000000000"
										},
										{
											"begin": 7563,
											"end": 7581,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 7563,
											"end": 7581,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7563,
											"end": 7581,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7556,
											"end": 7613,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7630,
											"end": 7648,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 7630,
											"end": 7648,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5333,
											"end": 5389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 7303,
											"end": 7654,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5333,
											"end": 5389,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 5333,
											"end": 5389,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5400,
											"end": 5415,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5418,
											"end": 5422,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5418,
											"end": 5422,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5423,
											"end": 5424,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5418,
											"end": 5425,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5418,
											"end": 5425,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5418,
											"end": 5425,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5418,
											"end": 5425,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 5418,
											"end": 5425,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5418,
											"end": 5425,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 5418,
											"end": 5425,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 5418,
											"end": 5425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5418,
											"end": 5425,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 5418,
											"end": 5425,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5418,
											"end": 5425,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5418,
											"end": 5425,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5418,
											"end": 5425,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5418,
											"end": 5425,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5418,
											"end": 5425,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5418,
											"end": 5425,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5418,
											"end": 5425,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5418,
											"end": 5425,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5418,
											"end": 5425,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5418,
											"end": 5425,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 5418,
											"end": 5425,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5418,
											"end": 5425,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5418,
											"end": 5425,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 5418,
											"end": 5425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5418,
											"end": 5425,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 5418,
											"end": 5425,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5400,
											"end": 5425,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5400,
											"end": 5425,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5435,
											"end": 5451,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5454,
											"end": 5458,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5454,
											"end": 5458,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5459,
											"end": 5460,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5454,
											"end": 5461,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5454,
											"end": 5461,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5454,
											"end": 5461,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5454,
											"end": 5461,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 5454,
											"end": 5461,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5454,
											"end": 5461,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 5454,
											"end": 5461,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 5454,
											"end": 5461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5454,
											"end": 5461,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 5454,
											"end": 5461,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5454,
											"end": 5461,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5454,
											"end": 5461,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5454,
											"end": 5461,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5454,
											"end": 5461,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5454,
											"end": 5461,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5454,
											"end": 5461,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5454,
											"end": 5461,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5454,
											"end": 5461,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5454,
											"end": 5461,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5454,
											"end": 5461,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 5454,
											"end": 5461,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5454,
											"end": 5461,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5454,
											"end": 5461,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 5454,
											"end": 5461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5454,
											"end": 5461,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 5454,
											"end": 5461,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5435,
											"end": 5461,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5435,
											"end": 5461,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5511,
											"end": 5525,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5528,
											"end": 5577,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 5549,
											"end": 5557,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 5559,
											"end": 5566,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5568,
											"end": 5576,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5528,
											"end": 5548,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 5528,
											"end": 5577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5528,
											"end": 5577,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 5528,
											"end": 5577,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5511,
											"end": 5577,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5511,
											"end": 5577,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5608,
											"end": 5620,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 5595,
											"end": 5604,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5595,
											"end": 5620,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5595,
											"end": 5620,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5587,
											"end": 5644,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 5587,
											"end": 5644,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5587,
											"end": 5644,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5587,
											"end": 5644,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5587,
											"end": 5644,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5587,
											"end": 5644,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8184,
											"end": 8186,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5587,
											"end": 5644,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5587,
											"end": 5644,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5587,
											"end": 5644,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8166,
											"end": 8187,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8223,
											"end": 8225,
											"name": "PUSH",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 8203,
											"end": 8221,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 8203,
											"end": 8221,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8203,
											"end": 8221,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8196,
											"end": 8226,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "125B9CDD59999A58DA595B9D081BDD5D1C1D5D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8242,
											"end": 8260,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 8242,
											"end": 8260,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8242,
											"end": 8260,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8235,
											"end": 8284,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8301,
											"end": 8319,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 8301,
											"end": 8319,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5587,
											"end": 5644,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 7982,
											"end": 8325,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5587,
											"end": 5644,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 5587,
											"end": 5644,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5689,
											"end": 5754,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 5711,
											"end": 5718,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5720,
											"end": 5728,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5730,
											"end": 5738,
											"name": "DUP13",
											"source": 6
										},
										{
											"begin": 5740,
											"end": 5749,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5751,
											"end": 5753,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 5689,
											"end": 5710,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 5689,
											"end": 5754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5689,
											"end": 5754,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 5689,
											"end": 5754,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5792,
											"end": 5856,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 5817,
											"end": 5824,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5826,
											"end": 5834,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5836,
											"end": 5844,
											"name": "DUP13",
											"source": 6
										},
										{
											"begin": 5846,
											"end": 5855,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5792,
											"end": 5816,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 5792,
											"end": 5856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5792,
											"end": 5856,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 5792,
											"end": 5856,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5913,
											"end": 5926,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5913,
											"end": 5926,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5913,
											"end": 5926,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5924,
											"end": 5925,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 5913,
											"end": 5926,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5913,
											"end": 5926,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5913,
											"end": 5926,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5913,
											"end": 5926,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5913,
											"end": 5926,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5913,
											"end": 5926,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5913,
											"end": 5926,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5913,
											"end": 5926,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5913,
											"end": 5926,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5913,
											"end": 5926,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5913,
											"end": 5926,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5913,
											"end": 5926,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5913,
											"end": 5926,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5913,
											"end": 5926,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5913,
											"end": 5926,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5913,
											"end": 5926,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 5913,
											"end": 5926,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5913,
											"end": 5926,
											"name": "CALLDATACOPY",
											"source": 6
										},
										{
											"begin": 5913,
											"end": 5926,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5913,
											"end": 5926,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5913,
											"end": 5926,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5903,
											"end": 5926,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5903,
											"end": 5926,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5949,
											"end": 5957,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 5936,
											"end": 5943,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5944,
											"end": 5945,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5936,
											"end": 5946,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5936,
											"end": 5946,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5936,
											"end": 5946,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5936,
											"end": 5946,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5936,
											"end": 5946,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 5936,
											"end": 5946,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5936,
											"end": 5946,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 5936,
											"end": 5946,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 5936,
											"end": 5946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5936,
											"end": 5946,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 5936,
											"end": 5946,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5936,
											"end": 5946,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5936,
											"end": 5946,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5936,
											"end": 5946,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5936,
											"end": 5946,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5936,
											"end": 5946,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5936,
											"end": 5957,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5936,
											"end": 5957,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5936,
											"end": 5957,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5936,
											"end": 5957,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5936,
											"end": 5957,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5980,
											"end": 5989,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5967,
											"end": 5974,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5975,
											"end": 5976,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5967,
											"end": 5977,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5967,
											"end": 5977,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5967,
											"end": 5977,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5967,
											"end": 5977,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5967,
											"end": 5977,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 5967,
											"end": 5977,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5967,
											"end": 5977,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 5967,
											"end": 5977,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 5967,
											"end": 5977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5967,
											"end": 5977,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 5967,
											"end": 5977,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5967,
											"end": 5977,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5967,
											"end": 5977,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5967,
											"end": 5977,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5967,
											"end": 5977,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5967,
											"end": 5977,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5967,
											"end": 5989,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5967,
											"end": 5989,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5967,
											"end": 5989,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5967,
											"end": 5989,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5967,
											"end": 5989,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5266,
											"end": 5996,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5266,
											"end": 5996,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5266,
											"end": 5996,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5059,
											"end": 5996,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 5059,
											"end": 5996,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 5059,
											"end": 5996,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5059,
											"end": 5996,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5059,
											"end": 5996,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5059,
											"end": 5996,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5059,
											"end": 5996,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5059,
											"end": 5996,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5059,
											"end": 5996,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6207,
											"end": 6596,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 6207,
											"end": 6596,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6280,
											"end": 6290,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6302,
											"end": 6318,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6321,
											"end": 6349,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 6334,
											"end": 6340,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6342,
											"end": 6348,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6321,
											"end": 6333,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 6321,
											"end": 6349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6321,
											"end": 6349,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 6321,
											"end": 6349,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6359,
											"end": 6377,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6380,
											"end": 6398,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6380,
											"end": 6398,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6380,
											"end": 6398,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6380,
											"end": 6398,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6380,
											"end": 6398,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6380,
											"end": 6398,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6380,
											"end": 6398,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6380,
											"end": 6398,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6380,
											"end": 6398,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6380,
											"end": 6398,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6380,
											"end": 6398,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6359,
											"end": 6398,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6359,
											"end": 6398,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6359,
											"end": 6398,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6359,
											"end": 6398,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6359,
											"end": 6398,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6359,
											"end": 6398,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6359,
											"end": 6398,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6359,
											"end": 6398,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6359,
											"end": 6398,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6359,
											"end": 6398,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6359,
											"end": 6398,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6359,
											"end": 6398,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6359,
											"end": 6398,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6359,
											"end": 6398,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6359,
											"end": 6398,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6359,
											"end": 6398,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6359,
											"end": 6398,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 6359,
											"end": 6398,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6359,
											"end": 6398,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6359,
											"end": 6398,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6359,
											"end": 6398,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6359,
											"end": 6398,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6359,
											"end": 6398,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6359,
											"end": 6398,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6359,
											"end": 6398,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6302,
											"end": 6349,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6302,
											"end": 6349,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6359,
											"end": 6377,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6442,
											"end": 6481,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 6461,
											"end": 6467,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 6469,
											"end": 6475,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 6359,
											"end": 6398,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6442,
											"end": 6460,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 6442,
											"end": 6481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6442,
											"end": 6481,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 6442,
											"end": 6481,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6409,
											"end": 6481,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6409,
											"end": 6481,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6409,
											"end": 6481,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6409,
											"end": 6481,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6510,
											"end": 6511,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6499,
											"end": 6507,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6499,
											"end": 6511,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6499,
											"end": 6527,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6499,
											"end": 6527,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6499,
											"end": 6527,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 6499,
											"end": 6527,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6499,
											"end": 6527,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6526,
											"end": 6527,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6515,
											"end": 6523,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6515,
											"end": 6527,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6499,
											"end": 6527,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 6499,
											"end": 6527,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6491,
											"end": 6543,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 6491,
											"end": 6543,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6491,
											"end": 6543,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6491,
											"end": 6543,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6491,
											"end": 6543,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6491,
											"end": 6543,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8664,
											"end": 8666,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6491,
											"end": 6543,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6491,
											"end": 6543,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6491,
											"end": 6543,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8646,
											"end": 8667,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8703,
											"end": 8705,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 8683,
											"end": 8701,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 8683,
											"end": 8701,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8683,
											"end": 8701,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8676,
											"end": 8706,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F207265736572766573"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8722,
											"end": 8740,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 8722,
											"end": 8740,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8722,
											"end": 8740,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8715,
											"end": 8756,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8773,
											"end": 8791,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 8773,
											"end": 8791,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6491,
											"end": 6543,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 8462,
											"end": 8797,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6491,
											"end": 6543,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 6491,
											"end": 6543,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6581,
											"end": 6589,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6562,
											"end": 6577,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 6562,
											"end": 6570,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6573,
											"end": 6577,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 6562,
											"end": 6577,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 6562,
											"end": 6577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6562,
											"end": 6577,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 6562,
											"end": 6577,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6561,
											"end": 6589,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 6561,
											"end": 6589,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6561,
											"end": 6589,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6561,
											"end": 6589,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 6561,
											"end": 6589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3512,
											"end": 4621,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 3512,
											"end": 4621,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3726,
											"end": 3738,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3740,
											"end": 3752,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3791,
											"end": 3799,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3772,
											"end": 3787,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 3772,
											"end": 3799,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3772,
											"end": 3799,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3764,
											"end": 3811,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 3764,
											"end": 3811,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3764,
											"end": 3811,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3764,
											"end": 3811,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3764,
											"end": 3811,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3764,
											"end": 3811,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3764,
											"end": 3811,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3764,
											"end": 3811,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3764,
											"end": 3811,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3764,
											"end": 3811,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3764,
											"end": 3811,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 3764,
											"end": 3811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3764,
											"end": 3811,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 3764,
											"end": 3811,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3822,
											"end": 3838,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3841,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 3854,
											"end": 3860,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 3862,
											"end": 3868,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 3841,
											"end": 3853,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 3841,
											"end": 3869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3841,
											"end": 3869,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 3841,
											"end": 3869,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3879,
											"end": 3898,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3919,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3901,
											"end": 3919,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3901,
											"end": 3919,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3901,
											"end": 3919,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3919,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3901,
											"end": 3919,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3901,
											"end": 3919,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3901,
											"end": 3919,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3901,
											"end": 3919,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3901,
											"end": 3919,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3901,
											"end": 3919,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3942,
											"end": 3956,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3942,
											"end": 3966,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3942,
											"end": 3966,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3942,
											"end": 3966,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3942,
											"end": 3966,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3942,
											"end": 3966,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3942,
											"end": 3966,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3942,
											"end": 3966,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3822,
											"end": 3869,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3822,
											"end": 3869,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3901,
											"end": 3919,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3984,
											"end": 3993,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3976,
											"end": 4010,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 3976,
											"end": 4010,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3976,
											"end": 4010,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3976,
											"end": 4010,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3976,
											"end": 4010,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3976,
											"end": 4010,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9004,
											"end": 9006,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3976,
											"end": 4010,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3976,
											"end": 4010,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3976,
											"end": 4010,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8986,
											"end": 9007,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9043,
											"end": 9045,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 9023,
											"end": 9041,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 9023,
											"end": 9041,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9023,
											"end": 9041,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9016,
											"end": 9046,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F206C6971756964697479"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9062,
											"end": 9080,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 9062,
											"end": 9080,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9062,
											"end": 9080,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9055,
											"end": 9097,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9114,
											"end": 9132,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 9114,
											"end": 9132,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3976,
											"end": 4010,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 8802,
											"end": 9138,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3976,
											"end": 4010,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 3976,
											"end": 4010,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4077,
											"end": 4089,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4077,
											"end": 4089,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4104,
											"end": 4109,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4104,
											"end": 4109,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4077,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 4077,
											"end": 4101,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4092,
											"end": 4101,
											"name": "DUP13",
											"source": 6
										},
										{
											"begin": 4092,
											"end": 4101,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4077,
											"end": 4089,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4077,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 4077,
											"end": 4101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4077,
											"end": 4101,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 4077,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4077,
											"end": 4109,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 4077,
											"end": 4109,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4077,
											"end": 4109,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4077,
											"end": 4109,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 4077,
											"end": 4109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4077,
											"end": 4109,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 4077,
											"end": 4109,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4129,
											"end": 4141,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4129,
											"end": 4141,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4067,
											"end": 4109,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4067,
											"end": 4109,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4156,
											"end": 4161,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4156,
											"end": 4161,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4129,
											"end": 4153,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 4129,
											"end": 4153,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4144,
											"end": 4153,
											"name": "DUP13",
											"source": 6
										},
										{
											"begin": 4144,
											"end": 4153,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4129,
											"end": 4141,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4129,
											"end": 4141,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4129,
											"end": 4141,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4129,
											"end": 4153,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 4129,
											"end": 4153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4129,
											"end": 4153,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 4129,
											"end": 4153,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4129,
											"end": 4161,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 4129,
											"end": 4161,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4129,
											"end": 4161,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4129,
											"end": 4161,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 4129,
											"end": 4161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4129,
											"end": 4161,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 4129,
											"end": 4161,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4119,
											"end": 4161,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4119,
											"end": 4161,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4191,
											"end": 4201,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 4180,
											"end": 4187,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4180,
											"end": 4201,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4180,
											"end": 4201,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4180,
											"end": 4226,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4180,
											"end": 4226,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4180,
											"end": 4226,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 4180,
											"end": 4226,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4180,
											"end": 4226,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4216,
											"end": 4226,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4205,
											"end": 4212,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4205,
											"end": 4226,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4205,
											"end": 4226,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4180,
											"end": 4226,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 4180,
											"end": 4226,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4172,
											"end": 4239,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 4172,
											"end": 4239,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4172,
											"end": 4239,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4172,
											"end": 4239,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4172,
											"end": 4239,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4172,
											"end": 4239,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9345,
											"end": 9347,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4172,
											"end": 4239,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4172,
											"end": 4239,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4172,
											"end": 4239,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9327,
											"end": 9348,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9384,
											"end": 9385,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 9364,
											"end": 9382,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 9364,
											"end": 9382,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9364,
											"end": 9382,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9357,
											"end": 9386,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "536C697070616765"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9402,
											"end": 9420,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 9402,
											"end": 9420,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9402,
											"end": 9420,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9395,
											"end": 9433,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9450,
											"end": 9468,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 9450,
											"end": 9468,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4239,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 9143,
											"end": 9474,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4239,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 4172,
											"end": 4239,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4295,
											"end": 4321,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4295,
											"end": 4321,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4295,
											"end": 4321,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4295,
											"end": 4321,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4295,
											"end": 4311,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 4295,
											"end": 4321,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4295,
											"end": 4321,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4295,
											"end": 4321,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4295,
											"end": 4321,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4295,
											"end": 4321,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4295,
											"end": 4321,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4295,
											"end": 4321,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4295,
											"end": 4321,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4322,
											"end": 4332,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4295,
											"end": 4333,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4295,
											"end": 4333,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4295,
											"end": 4333,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4295,
											"end": 4333,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4295,
											"end": 4333,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4295,
											"end": 4333,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4295,
											"end": 4333,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4295,
											"end": 4346,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4295,
											"end": 4346,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4337,
											"end": 4346,
											"name": "DUP13",
											"source": 6
										},
										{
											"begin": 4337,
											"end": 4346,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4295,
											"end": 4321,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4295,
											"end": 4346,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 4295,
											"end": 4346,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4337,
											"end": 4346,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4337,
											"end": 4346,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4295,
											"end": 4346,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 4295,
											"end": 4346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4295,
											"end": 4346,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 4295,
											"end": 4346,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4295,
											"end": 4346,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4295,
											"end": 4346,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4295,
											"end": 4346,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4356,
											"end": 4380,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4356,
											"end": 4380,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4356,
											"end": 4380,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4356,
											"end": 4380,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4356,
											"end": 4370,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4356,
											"end": 4380,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4356,
											"end": 4380,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4356,
											"end": 4380,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4356,
											"end": 4380,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4356,
											"end": 4380,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4356,
											"end": 4393,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4356,
											"end": 4393,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4384,
											"end": 4393,
											"name": "DUP13",
											"source": 6
										},
										{
											"begin": 4384,
											"end": 4393,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4356,
											"end": 4380,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4356,
											"end": 4393,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 4356,
											"end": 4393,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4384,
											"end": 4393,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4384,
											"end": 4393,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4356,
											"end": 4393,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 4356,
											"end": 4393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4356,
											"end": 4393,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 4356,
											"end": 4393,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4356,
											"end": 4393,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4356,
											"end": 4393,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4356,
											"end": 4393,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4403,
											"end": 4435,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4403,
											"end": 4435,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4427,
											"end": 4434,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4427,
											"end": 4434,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4403,
											"end": 4406,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4403,
											"end": 4406,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4403,
											"end": 4415,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4403,
											"end": 4415,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4403,
											"end": 4435,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 4403,
											"end": 4435,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4427,
											"end": 4434,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4427,
											"end": 4434,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4403,
											"end": 4435,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4403,
											"end": 4435,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 4403,
											"end": 4435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4403,
											"end": 4435,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 4403,
											"end": 4435,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4403,
											"end": 4435,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4403,
											"end": 4435,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4403,
											"end": 4435,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4403,
											"end": 4435,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4403,
											"end": 4435,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4403,
											"end": 4435,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4403,
											"end": 4435,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4403,
											"end": 4435,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4403,
											"end": 4435,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 4403,
											"end": 4435,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4403,
											"end": 4435,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4403,
											"end": 4435,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4403,
											"end": 4435,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4403,
											"end": 4435,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4403,
											"end": 4435,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 4403,
											"end": 4435,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4403,
											"end": 4435,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4403,
											"end": 4435,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4469,
											"end": 4476,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4445,
											"end": 4448,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4445,
											"end": 4457,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4445,
											"end": 4457,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4445,
											"end": 4457,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 4445,
											"end": 4477,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4445,
											"end": 4477,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4445,
											"end": 4477,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4445,
											"end": 4477,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4445,
											"end": 4477,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4445,
											"end": 4477,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4445,
											"end": 4477,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4445,
											"end": 4477,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4445,
											"end": 4477,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4445,
											"end": 4477,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4445,
											"end": 4477,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4445,
											"end": 4477,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 4445,
											"end": 4477,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4445,
											"end": 4477,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4445,
											"end": 4477,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 4445,
											"end": 4477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4445,
											"end": 4477,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 4445,
											"end": 4477,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4445,
											"end": 4477,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4445,
											"end": 4477,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4445,
											"end": 4477,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4445,
											"end": 4477,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4445,
											"end": 4477,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4445,
											"end": 4477,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4445,
											"end": 4477,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4445,
											"end": 4477,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4445,
											"end": 4477,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 4445,
											"end": 4477,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4445,
											"end": 4477,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4445,
											"end": 4477,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4445,
											"end": 4477,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4445,
											"end": 4477,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4445,
											"end": 4477,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 4445,
											"end": 4477,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4445,
											"end": 4477,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4445,
											"end": 4477,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4524,
											"end": 4564,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 4552,
											"end": 4554,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4556,
											"end": 4563,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4531,
											"end": 4537,
											"name": "DUP15",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4524,
											"end": 4551,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4524,
											"end": 4551,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 4524,
											"end": 4551,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4524,
											"end": 4564,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4524,
											"end": 4564,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4524,
											"end": 4564,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4524,
											"end": 4564,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4524,
											"end": 4564,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4524,
											"end": 4564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4524,
											"end": 4564,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 4524,
											"end": 4564,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4574,
											"end": 4614,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4574,
											"end": 4601,
											"name": "DUP13",
											"source": 6
										},
										{
											"begin": 4574,
											"end": 4601,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4602,
											"end": 4604,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 4606,
											"end": 4613,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4574,
											"end": 4601,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 4574,
											"end": 4614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4574,
											"end": 4614,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 4574,
											"end": 4614,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3754,
											"end": 4621,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3754,
											"end": 4621,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3754,
											"end": 4621,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3512,
											"end": 4621,
											"name": "SWAP8",
											"source": 6
										},
										{
											"begin": 3512,
											"end": 4621,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3512,
											"end": 4621,
											"name": "SWAP8",
											"source": 6
										},
										{
											"begin": 3512,
											"end": 4621,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 3512,
											"end": 4621,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3512,
											"end": 4621,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3512,
											"end": 4621,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3512,
											"end": 4621,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3512,
											"end": 4621,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3512,
											"end": 4621,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3512,
											"end": 4621,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1792,
											"end": 2944,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 1792,
											"end": 2944,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2037,
											"end": 2049,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2051,
											"end": 2063,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2065,
											"end": 2079,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2118,
											"end": 2126,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2099,
											"end": 2114,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 2099,
											"end": 2126,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2099,
											"end": 2126,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2091,
											"end": 2138,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 2091,
											"end": 2138,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2091,
											"end": 2138,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2091,
											"end": 2138,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2091,
											"end": 2138,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2091,
											"end": 2138,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2091,
											"end": 2138,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2091,
											"end": 2138,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2091,
											"end": 2138,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2091,
											"end": 2138,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2091,
											"end": 2138,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 2091,
											"end": 2138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2091,
											"end": 2138,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 2091,
											"end": 2138,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2149,
											"end": 2165,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2168,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 2181,
											"end": 2187,
											"name": "DUP13",
											"source": 6
										},
										{
											"begin": 2189,
											"end": 2195,
											"name": "DUP13",
											"source": 6
										},
										{
											"begin": 2168,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 2168,
											"end": 2196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2168,
											"end": 2196,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 2168,
											"end": 2196,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2206,
											"end": 2225,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2228,
											"end": 2246,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2228,
											"end": 2246,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2228,
											"end": 2246,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2228,
											"end": 2246,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2228,
											"end": 2246,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2228,
											"end": 2246,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2228,
											"end": 2246,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2228,
											"end": 2246,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2228,
											"end": 2246,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2228,
											"end": 2246,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2457,
											"end": 2469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2457,
											"end": 2469,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2149,
											"end": 2196,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2149,
											"end": 2196,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2228,
											"end": 2246,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2417,
											"end": 2609,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 2417,
											"end": 2609,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2457,
											"end": 2469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2457,
											"end": 2469,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2457,
											"end": 2469,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2457,
											"end": 2469,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2483,
											"end": 2495,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2483,
											"end": 2495,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2483,
											"end": 2495,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2509,
											"end": 2523,
											"name": "DUP14",
											"source": 6
										},
										{
											"begin": 2537,
											"end": 2551,
											"name": "DUP14",
											"source": 6
										},
										{
											"begin": 2565,
											"end": 2575,
											"name": "DUP14",
											"source": 6
										},
										{
											"begin": 2589,
											"end": 2599,
											"name": "DUP14",
											"source": 6
										},
										{
											"begin": 2417,
											"end": 2443,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 2417,
											"end": 2609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2417,
											"end": 2609,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 2417,
											"end": 2609,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2396,
											"end": 2609,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2396,
											"end": 2609,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2396,
											"end": 2609,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2655,
											"end": 2718,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 2685,
											"end": 2691,
											"name": "DUP14",
											"source": 6
										},
										{
											"begin": 2693,
											"end": 2699,
											"name": "DUP14",
											"source": 6
										},
										{
											"begin": 2396,
											"end": 2609,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2396,
											"end": 2609,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2655,
											"end": 2684,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 2655,
											"end": 2718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2655,
											"end": 2718,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 2655,
											"end": 2718,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2869,
											"end": 2937,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 2901,
											"end": 2909,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2911,
											"end": 2918,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2920,
											"end": 2927,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2929,
											"end": 2931,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 2936,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2869,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 2869,
											"end": 2937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2869,
											"end": 2937,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 2869,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2857,
											"end": 2937,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2857,
											"end": 2937,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2944,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2944,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1792,
											"end": 2944,
											"name": "SWAP9",
											"source": 6
										},
										{
											"begin": 1792,
											"end": 2944,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1792,
											"end": 2944,
											"name": "SWAP9",
											"source": 6
										},
										{
											"begin": 1792,
											"end": 2944,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1792,
											"end": 2944,
											"name": "SWAP9",
											"source": 6
										},
										{
											"begin": 1792,
											"end": 2944,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 1792,
											"end": 2944,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1792,
											"end": 2944,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1792,
											"end": 2944,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1792,
											"end": 2944,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1792,
											"end": 2944,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1792,
											"end": 2944,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1792,
											"end": 2944,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9656,
											"end": 10031,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 9656,
											"end": 10031,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9759,
											"end": 9763,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9775,
											"end": 9791,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9794,
											"end": 9825,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 9807,
											"end": 9814,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9816,
											"end": 9824,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9794,
											"end": 9806,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 9794,
											"end": 9825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9794,
											"end": 9825,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 9794,
											"end": 9825,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9835,
											"end": 9853,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9856,
											"end": 9874,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9856,
											"end": 9874,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9856,
											"end": 9874,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9856,
											"end": 9874,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9856,
											"end": 9874,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9856,
											"end": 9874,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9856,
											"end": 9874,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9856,
											"end": 9874,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9856,
											"end": 9874,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9856,
											"end": 9874,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9856,
											"end": 9874,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 9835,
											"end": 9874,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9835,
											"end": 9874,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9835,
											"end": 9874,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9835,
											"end": 9874,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9835,
											"end": 9874,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9835,
											"end": 9874,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9835,
											"end": 9874,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9835,
											"end": 9874,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9835,
											"end": 9874,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9835,
											"end": 9874,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9835,
											"end": 9874,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9835,
											"end": 9874,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9835,
											"end": 9874,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9835,
											"end": 9874,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9835,
											"end": 9874,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9835,
											"end": 9874,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9835,
											"end": 9874,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 9835,
											"end": 9874,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9835,
											"end": 9874,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9835,
											"end": 9874,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9835,
											"end": 9874,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9835,
											"end": 9874,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9835,
											"end": 9874,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9835,
											"end": 9874,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9835,
											"end": 9874,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9775,
											"end": 9825,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9775,
											"end": 9825,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9835,
											"end": 9853,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9920,
											"end": 9962,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 9939,
											"end": 9946,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 9948,
											"end": 9956,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 9835,
											"end": 9874,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9920,
											"end": 9938,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 9920,
											"end": 9962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9920,
											"end": 9962,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 9920,
											"end": 9962,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9884,
											"end": 9962,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9884,
											"end": 9962,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9884,
											"end": 9962,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9884,
											"end": 9962,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9979,
											"end": 10024,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 9992,
											"end": 10000,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 10002,
											"end": 10011,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10013,
											"end": 10023,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9979,
											"end": 9991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 9979,
											"end": 10024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9979,
											"end": 10024,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 9979,
											"end": 10024,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9972,
											"end": 10024,
											"name": "SWAP9",
											"source": 6
										},
										{
											"begin": 9656,
											"end": 10031,
											"name": "SWAP8",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9656,
											"end": 10031,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10104,
											"end": 10362,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 10104,
											"end": 10362,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10232,
											"end": 10301,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10232,
											"end": 10264,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 10232,
											"end": 10264,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10265,
											"end": 10275,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 10285,
											"end": 10289,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 10292,
											"end": 10300,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 10232,
											"end": 10264,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 10232,
											"end": 10301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10232,
											"end": 10301,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 10232,
											"end": 10301,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10311,
											"end": 10355,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10311,
											"end": 10340,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 10311,
											"end": 10340,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10341,
											"end": 10343,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10345,
											"end": 10354,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10311,
											"end": 10340,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 10311,
											"end": 10355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10311,
											"end": 10355,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 10311,
											"end": 10355,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10104,
											"end": 10362,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10104,
											"end": 10362,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10104,
											"end": 10362,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10104,
											"end": 10362,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10104,
											"end": 10362,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10104,
											"end": 10362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10429,
											"end": 10906,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 10429,
											"end": 10906,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10548,
											"end": 10564,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10567,
											"end": 10598,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 10580,
											"end": 10587,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 10589,
											"end": 10597,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 10567,
											"end": 10579,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 10567,
											"end": 10598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10567,
											"end": 10598,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 10567,
											"end": 10598,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10608,
											"end": 10627,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10630,
											"end": 10648,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10630,
											"end": 10648,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10630,
											"end": 10648,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10630,
											"end": 10648,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10630,
											"end": 10648,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10630,
											"end": 10648,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10630,
											"end": 10648,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10630,
											"end": 10648,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10630,
											"end": 10648,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10630,
											"end": 10648,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 10548,
											"end": 10598,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10548,
											"end": 10598,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10662,
											"end": 10680,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10662,
											"end": 10680,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 10662,
											"end": 10680,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10662,
											"end": 10680,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10662,
											"end": 10680,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 10662,
											"end": 10680,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10662,
											"end": 10680,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10658,
											"end": 10900,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10658,
											"end": 10900,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 10658,
											"end": 10900,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10696,
											"end": 10729,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10696,
											"end": 10729,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10720,
											"end": 10728,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10720,
											"end": 10728,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10696,
											"end": 10699,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10696,
											"end": 10699,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10696,
											"end": 10708,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10696,
											"end": 10708,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10696,
											"end": 10729,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 10696,
											"end": 10729,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10720,
											"end": 10728,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10720,
											"end": 10728,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10696,
											"end": 10729,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10696,
											"end": 10729,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 10696,
											"end": 10729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10696,
											"end": 10729,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 10696,
											"end": 10729,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10696,
											"end": 10729,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10696,
											"end": 10729,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10696,
											"end": 10729,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 10696,
											"end": 10729,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 10696,
											"end": 10729,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10696,
											"end": 10729,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10696,
											"end": 10729,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10696,
											"end": 10729,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 10696,
											"end": 10729,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 10696,
											"end": 10729,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10696,
											"end": 10729,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10696,
											"end": 10729,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10696,
											"end": 10729,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10696,
											"end": 10729,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 10696,
											"end": 10729,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 10696,
											"end": 10729,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10696,
											"end": 10729,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 10696,
											"end": 10729,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10767,
											"end": 10776,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10743,
											"end": 10746,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10743,
											"end": 10755,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10743,
											"end": 10755,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10743,
											"end": 10755,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 10743,
											"end": 10777,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10743,
											"end": 10777,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10743,
											"end": 10777,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10743,
											"end": 10777,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10743,
											"end": 10777,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10743,
											"end": 10777,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10743,
											"end": 10777,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 10743,
											"end": 10777,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 10743,
											"end": 10777,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10743,
											"end": 10777,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10743,
											"end": 10777,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10743,
											"end": 10777,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 10743,
											"end": 10777,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10743,
											"end": 10777,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10743,
											"end": 10777,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 10743,
											"end": 10777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10743,
											"end": 10777,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 10743,
											"end": 10777,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10743,
											"end": 10777,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10743,
											"end": 10777,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10743,
											"end": 10777,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 10743,
											"end": 10777,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 10743,
											"end": 10777,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10743,
											"end": 10777,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10743,
											"end": 10777,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10743,
											"end": 10777,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 10743,
											"end": 10777,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 10743,
											"end": 10777,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10743,
											"end": 10777,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10743,
											"end": 10777,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10743,
											"end": 10777,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10743,
											"end": 10777,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 10743,
											"end": 10777,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 10743,
											"end": 10777,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10743,
											"end": 10777,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 10743,
											"end": 10777,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10658,
											"end": 10900,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 10658,
											"end": 10900,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10658,
											"end": 10900,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 10658,
											"end": 10900,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10808,
											"end": 10841,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10808,
											"end": 10841,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10832,
											"end": 10840,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10832,
											"end": 10840,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10808,
											"end": 10841,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10808,
											"end": 10841,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10808,
											"end": 10820,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 10808,
											"end": 10820,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10808,
											"end": 10841,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 10808,
											"end": 10841,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10832,
											"end": 10840,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10832,
											"end": 10840,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10808,
											"end": 10841,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10808,
											"end": 10841,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10808,
											"end": 10841,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10808,
											"end": 10841,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 10808,
											"end": 10841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10808,
											"end": 10841,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 10808,
											"end": 10841,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10808,
											"end": 10841,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10808,
											"end": 10841,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10808,
											"end": 10841,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 10808,
											"end": 10841,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 10808,
											"end": 10841,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10808,
											"end": 10841,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10808,
											"end": 10841,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10808,
											"end": 10841,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 10808,
											"end": 10841,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 10808,
											"end": 10841,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10808,
											"end": 10841,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10808,
											"end": 10841,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10808,
											"end": 10841,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10808,
											"end": 10841,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 10808,
											"end": 10841,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 10808,
											"end": 10841,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10808,
											"end": 10841,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 10808,
											"end": 10841,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10879,
											"end": 10888,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10855,
											"end": 10858,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10855,
											"end": 10867,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10855,
											"end": 10867,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10855,
											"end": 10867,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10855,
											"end": 10889,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10855,
											"end": 10889,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10855,
											"end": 10889,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10855,
											"end": 10889,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10855,
											"end": 10889,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10855,
											"end": 10889,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10855,
											"end": 10889,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 10855,
											"end": 10889,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 10855,
											"end": 10889,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10855,
											"end": 10889,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10855,
											"end": 10889,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10855,
											"end": 10889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 10855,
											"end": 10889,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10855,
											"end": 10889,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10855,
											"end": 10889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 10855,
											"end": 10889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10855,
											"end": 10889,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 10855,
											"end": 10889,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10855,
											"end": 10889,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10855,
											"end": 10889,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10855,
											"end": 10889,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 10855,
											"end": 10889,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 10855,
											"end": 10889,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10855,
											"end": 10889,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10855,
											"end": 10889,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10855,
											"end": 10889,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 10855,
											"end": 10889,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 10855,
											"end": 10889,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10855,
											"end": 10889,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10855,
											"end": 10889,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10855,
											"end": 10889,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10855,
											"end": 10889,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 10855,
											"end": 10889,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 10855,
											"end": 10889,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10855,
											"end": 10889,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 10855,
											"end": 10889,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10658,
											"end": 10900,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 10658,
											"end": 10900,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10538,
											"end": 10906,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10538,
											"end": 10906,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10429,
											"end": 10906,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10429,
											"end": 10906,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10429,
											"end": 10906,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10429,
											"end": 10906,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10429,
											"end": 10906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10976,
											"end": 11183,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 10976,
											"end": 11183,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11053,
											"end": 11060,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11115,
											"end": 11121,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11106,
											"end": 11121,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11106,
											"end": 11112,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11106,
											"end": 11121,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11106,
											"end": 11121,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 11106,
											"end": 11139,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 11106,
											"end": 11139,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11133,
											"end": 11139,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11106,
											"end": 11139,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 11106,
											"end": 11139,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11106,
											"end": 11139,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 11106,
											"end": 11139,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11124,
											"end": 11130,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11106,
											"end": 11139,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 11106,
											"end": 11139,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11150,
											"end": 11156,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11141,
											"end": 11156,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11141,
											"end": 11147,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11141,
											"end": 11156,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11141,
											"end": 11156,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 11141,
											"end": 11174,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 11141,
											"end": 11174,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11168,
											"end": 11174,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11141,
											"end": 11174,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 11141,
											"end": 11174,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11141,
											"end": 11174,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 11141,
											"end": 11174,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11159,
											"end": 11165,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11141,
											"end": 11174,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 11141,
											"end": 11174,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11089,
											"end": 11175,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11089,
											"end": 11175,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10258,
											"end": 10260,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 10254,
											"end": 10269,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 10254,
											"end": 10269,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10254,
											"end": 10269,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 10250,
											"end": 10303,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10250,
											"end": 10303,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 11089,
											"end": 11175,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11089,
											"end": 11175,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11089,
											"end": 11175,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10238,
											"end": 10304,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10338,
											"end": 10353,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10338,
											"end": 10353,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10338,
											"end": 10353,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10338,
											"end": 10353,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 10334,
											"end": 10387,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10320,
											"end": 10332,
											"name": "PUSH",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 10320,
											"end": 10332,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10320,
											"end": 10332,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10313,
											"end": 10388,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10404,
											"end": 10416,
											"name": "PUSH",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 10404,
											"end": 10416,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11089,
											"end": 11175,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11089,
											"end": 11175,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11089,
											"end": 11175,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11089,
											"end": 11175,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11089,
											"end": 11175,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11089,
											"end": 11175,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11089,
											"end": 11175,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11089,
											"end": 11175,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11089,
											"end": 11175,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11089,
											"end": 11175,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11089,
											"end": 11175,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11089,
											"end": 11175,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11079,
											"end": 11176,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11079,
											"end": 11176,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11079,
											"end": 11176,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11079,
											"end": 11176,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11079,
											"end": 11176,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11079,
											"end": 11176,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 11072,
											"end": 11176,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11072,
											"end": 11176,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10976,
											"end": 11183,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 10976,
											"end": 11183,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10976,
											"end": 11183,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10976,
											"end": 11183,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10976,
											"end": 11183,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10976,
											"end": 11183,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10976,
											"end": 11183,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11250,
											"end": 11466,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 11250,
											"end": 11466,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11353,
											"end": 11357,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11359,
											"end": 11363,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11391,
											"end": 11397,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11382,
											"end": 11397,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11382,
											"end": 11388,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11382,
											"end": 11397,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11382,
											"end": 11397,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 11382,
											"end": 11459,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 11382,
											"end": 11459,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11432,
											"end": 11444,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11432,
											"end": 11444,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11432,
											"end": 11444,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11432,
											"end": 11444,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11446,
											"end": 11458,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11446,
											"end": 11458,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11382,
											"end": 11459,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 11382,
											"end": 11459,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11382,
											"end": 11459,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 11382,
											"end": 11459,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11401,
											"end": 11413,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11401,
											"end": 11413,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11415,
											"end": 11427,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11415,
											"end": 11427,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 11415,
											"end": 11427,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11415,
											"end": 11427,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11382,
											"end": 11459,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 11382,
											"end": 11459,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11375,
											"end": 11459,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11375,
											"end": 11459,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11375,
											"end": 11459,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11375,
											"end": 11459,
											"name": "SWAP8",
											"source": 6
										},
										{
											"begin": 11375,
											"end": 11459,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11375,
											"end": 11459,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11375,
											"end": 11459,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11250,
											"end": 11466,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11250,
											"end": 11466,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10619,
											"end": 10651,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10619,
											"end": 10651,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10619,
											"end": 10651,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10601,
											"end": 10652,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10668,
											"end": 10686,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 10668,
											"end": 10686,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10668,
											"end": 10686,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10661,
											"end": 10695,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10661,
											"end": 10695,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10661,
											"end": 10695,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1321,
											"end": 1326,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1321,
											"end": 1326,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10574,
											"end": 10592,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 10574,
											"end": 10592,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 1301,
											"end": 1372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1219,
											"end": 1379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7446,
											"end": 8605,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 7446,
											"end": 8605,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7685,
											"end": 7707,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7685,
											"end": 7707,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7747,
											"end": 7767,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 7747,
											"end": 7767,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7747,
											"end": 7767,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7747,
											"end": 7791,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7747,
											"end": 7791,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7747,
											"end": 7791,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 7747,
											"end": 7791,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7771,
											"end": 7791,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 7771,
											"end": 7791,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7771,
											"end": 7791,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7747,
											"end": 7791,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 7747,
											"end": 7791,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7743,
											"end": 8599,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7743,
											"end": 8599,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 7743,
											"end": 8599,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7902,
											"end": 7916,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7902,
											"end": 7916,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7918,
											"end": 7932,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7743,
											"end": 8599,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 7743,
											"end": 8599,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7743,
											"end": 8599,
											"name": "tag",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 7743,
											"end": 8599,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8011,
											"end": 8030,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8068,
											"end": 8083,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8033,
											"end": 8083,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8050,
											"end": 8065,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8033,
											"end": 8065,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8033,
											"end": 8047,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 8033,
											"end": 8065,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 8033,
											"end": 8065,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8033,
											"end": 8065,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8033,
											"end": 8065,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 8033,
											"end": 8065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8033,
											"end": 8065,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 8033,
											"end": 8065,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8033,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 8033,
											"end": 8083,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8033,
											"end": 8083,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8033,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 8033,
											"end": 8083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8033,
											"end": 8083,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 8033,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8011,
											"end": 8083,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8011,
											"end": 8083,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8119,
											"end": 8133,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8101,
											"end": 8115,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8101,
											"end": 8133,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 8097,
											"end": 8589,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 8097,
											"end": 8589,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8179,
											"end": 8189,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8161,
											"end": 8175,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8161,
											"end": 8189,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 8161,
											"end": 8189,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8153,
											"end": 8208,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 8153,
											"end": 8208,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8153,
											"end": 8208,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8153,
											"end": 8208,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8153,
											"end": 8208,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8153,
											"end": 8208,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10908,
											"end": 10910,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8153,
											"end": 8208,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8153,
											"end": 8208,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8153,
											"end": 8208,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10890,
											"end": 10911,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10947,
											"end": 10949,
											"name": "PUSH",
											"source": 7,
											"value": "E"
										},
										{
											"begin": 10927,
											"end": 10945,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 10927,
											"end": 10945,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10927,
											"end": 10945,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10920,
											"end": 10950,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "24B739BAB33334B1B4B2B73A1021"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "91"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10966,
											"end": 10984,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 10966,
											"end": 10984,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10966,
											"end": 10984,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10959,
											"end": 11003,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11020,
											"end": 11038,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 11020,
											"end": 11038,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8153,
											"end": 8208,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 10706,
											"end": 11044,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8153,
											"end": 8208,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 8153,
											"end": 8208,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8268,
											"end": 8282,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8268,
											"end": 8282,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8284,
											"end": 8298,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8284,
											"end": 8298,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8097,
											"end": 8589,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 8097,
											"end": 8589,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8097,
											"end": 8589,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 8097,
											"end": 8589,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8338,
											"end": 8357,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8395,
											"end": 8410,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8360,
											"end": 8410,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8377,
											"end": 8392,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8360,
											"end": 8392,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8360,
											"end": 8374,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 8360,
											"end": 8392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 8360,
											"end": 8392,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8360,
											"end": 8392,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8360,
											"end": 8392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 8360,
											"end": 8392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8360,
											"end": 8392,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 8360,
											"end": 8392,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8360,
											"end": 8410,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 8360,
											"end": 8410,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8360,
											"end": 8410,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8360,
											"end": 8410,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 8360,
											"end": 8410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8360,
											"end": 8410,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 8360,
											"end": 8410,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8338,
											"end": 8410,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8338,
											"end": 8410,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8454,
											"end": 8464,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8436,
											"end": 8450,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8436,
											"end": 8464,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 8436,
											"end": 8464,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8428,
											"end": 8483,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 8428,
											"end": 8483,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8428,
											"end": 8483,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8428,
											"end": 8483,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8428,
											"end": 8483,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8428,
											"end": 8483,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11251,
											"end": 11253,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8428,
											"end": 8483,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8428,
											"end": 8483,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8428,
											"end": 8483,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11233,
											"end": 11254,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11290,
											"end": 11292,
											"name": "PUSH",
											"source": 7,
											"value": "E"
										},
										{
											"begin": 11270,
											"end": 11288,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 11270,
											"end": 11288,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11270,
											"end": 11288,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11263,
											"end": 11293,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E73756666696369656E742041"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "90"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11309,
											"end": 11327,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 11309,
											"end": 11327,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11309,
											"end": 11327,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11302,
											"end": 11346,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11363,
											"end": 11381,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 11363,
											"end": 11381,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8428,
											"end": 8483,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 11049,
											"end": 11387,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8428,
											"end": 8483,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 8428,
											"end": 8483,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8543,
											"end": 8557,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8559,
											"end": 8573,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8559,
											"end": 8573,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8097,
											"end": 8589,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 8097,
											"end": 8589,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7950,
											"end": 8599,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7743,
											"end": 8599,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 7743,
											"end": 8599,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7446,
											"end": 8605,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 7446,
											"end": 8605,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7446,
											"end": 8605,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 7446,
											"end": 8605,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 7446,
											"end": 8605,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7446,
											"end": 8605,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7446,
											"end": 8605,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7446,
											"end": 8605,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7446,
											"end": 8605,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7446,
											"end": 8605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8674,
											"end": 8981,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 8674,
											"end": 8981,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8830,
											"end": 8897,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8830,
											"end": 8861,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8830,
											"end": 8861,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8862,
											"end": 8872,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 8882,
											"end": 8886,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 8889,
											"end": 8896,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8830,
											"end": 8861,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 8830,
											"end": 8897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8830,
											"end": 8897,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 8830,
											"end": 8897,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8907,
											"end": 8974,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8907,
											"end": 8938,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8907,
											"end": 8938,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8939,
											"end": 8949,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 8959,
											"end": 8963,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 8966,
											"end": 8973,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8907,
											"end": 8938,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 8907,
											"end": 8974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8907,
											"end": 8974,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 8907,
											"end": 8974,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8674,
											"end": 8981,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8674,
											"end": 8981,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8674,
											"end": 8981,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8674,
											"end": 8981,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8674,
											"end": 8981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9050,
											"end": 9520,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 9050,
											"end": 9520,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9273,
											"end": 9287,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9311,
											"end": 9328,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 9321,
											"end": 9328,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9311,
											"end": 9318,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 9311,
											"end": 9328,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 9311,
											"end": 9328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9311,
											"end": 9328,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 9311,
											"end": 9328,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9299,
											"end": 9328,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9299,
											"end": 9328,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9366,
											"end": 9375,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9338,
											"end": 9352,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 9338,
											"end": 9362,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9353,
											"end": 9361,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 9338,
											"end": 9362,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9338,
											"end": 9362,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9338,
											"end": 9362,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9338,
											"end": 9362,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9338,
											"end": 9362,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9338,
											"end": 9362,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9338,
											"end": 9362,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9338,
											"end": 9362,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9338,
											"end": 9362,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9338,
											"end": 9362,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9338,
											"end": 9362,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 9338,
											"end": 9362,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9338,
											"end": 9375,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9338,
											"end": 9375,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9338,
											"end": 9375,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9338,
											"end": 9375,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 9338,
											"end": 9375,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9338,
											"end": 9375,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9338,
											"end": 9375,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 9338,
											"end": 9375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9338,
											"end": 9375,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 9338,
											"end": 9375,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9338,
											"end": 9375,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9338,
											"end": 9375,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9338,
											"end": 9375,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9385,
											"end": 9411,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9385,
											"end": 9411,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 9385,
											"end": 9411,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9385,
											"end": 9411,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9385,
											"end": 9401,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 9385,
											"end": 9411,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9385,
											"end": 9411,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9385,
											"end": 9411,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9385,
											"end": 9411,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9385,
											"end": 9411,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9385,
											"end": 9411,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9385,
											"end": 9411,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9385,
											"end": 9411,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9385,
											"end": 9415,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 9385,
											"end": 9415,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9385,
											"end": 9415,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9385,
											"end": 9415,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9385,
											"end": 9415,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9385,
											"end": 9415,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9385,
											"end": 9415,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9385,
											"end": 9415,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9385,
											"end": 9415,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 9385,
											"end": 9428,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9385,
											"end": 9428,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9419,
											"end": 9428,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9419,
											"end": 9428,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9385,
											"end": 9411,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9385,
											"end": 9428,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 9385,
											"end": 9428,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9419,
											"end": 9428,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9419,
											"end": 9428,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9385,
											"end": 9428,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 9385,
											"end": 9428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9385,
											"end": 9428,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 9385,
											"end": 9428,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9385,
											"end": 9428,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9385,
											"end": 9428,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9385,
											"end": 9428,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9439,
											"end": 9471,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9439,
											"end": 9471,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9463,
											"end": 9470,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9463,
											"end": 9470,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9439,
											"end": 9442,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9439,
											"end": 9442,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9439,
											"end": 9451,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9439,
											"end": 9451,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9439,
											"end": 9471,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 9439,
											"end": 9471,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9463,
											"end": 9470,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9463,
											"end": 9470,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9439,
											"end": 9471,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9439,
											"end": 9471,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 9439,
											"end": 9471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9439,
											"end": 9471,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 9439,
											"end": 9471,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9439,
											"end": 9471,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9439,
											"end": 9471,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9439,
											"end": 9471,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 9439,
											"end": 9471,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 9439,
											"end": 9471,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9439,
											"end": 9471,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9439,
											"end": 9471,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9439,
											"end": 9471,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 9439,
											"end": 9471,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 9439,
											"end": 9471,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9439,
											"end": 9471,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9439,
											"end": 9471,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9439,
											"end": 9471,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9439,
											"end": 9471,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 9439,
											"end": 9471,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 9439,
											"end": 9471,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9439,
											"end": 9471,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 9439,
											"end": 9471,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9505,
											"end": 9512,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9481,
											"end": 9484,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9481,
											"end": 9493,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9481,
											"end": 9493,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9481,
											"end": 9493,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 9481,
											"end": 9513,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9481,
											"end": 9513,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9481,
											"end": 9513,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9481,
											"end": 9513,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9481,
											"end": 9513,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9481,
											"end": 9513,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9481,
											"end": 9513,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 9481,
											"end": 9513,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 9481,
											"end": 9513,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9481,
											"end": 9513,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9481,
											"end": 9513,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9481,
											"end": 9513,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 9481,
											"end": 9513,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9481,
											"end": 9513,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9481,
											"end": 9513,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 9481,
											"end": 9513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9481,
											"end": 9513,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 9481,
											"end": 9513,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9481,
											"end": 9513,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9481,
											"end": 9513,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9481,
											"end": 9513,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 9481,
											"end": 9513,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 9481,
											"end": 9513,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9481,
											"end": 9513,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9481,
											"end": 9513,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9481,
											"end": 9513,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 9481,
											"end": 9513,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 9481,
											"end": 9513,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9481,
											"end": 9513,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9481,
											"end": 9513,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9481,
											"end": 9513,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9481,
											"end": 9513,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 9481,
											"end": 9513,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 9481,
											"end": 9513,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9481,
											"end": 9513,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 9481,
											"end": 9513,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9050,
											"end": 9520,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 9050,
											"end": 9520,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 9050,
											"end": 9520,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9050,
											"end": 9520,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9050,
											"end": 9520,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9050,
											"end": 9520,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9050,
											"end": 9520,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9050,
											"end": 9520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11612,
											"end": 11644,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 11612,
											"end": 11644,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11612,
											"end": 11644,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11594,
											"end": 11645,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11681,
											"end": 11713,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11681,
											"end": 11713,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11681,
											"end": 11713,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 11661,
											"end": 11679,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 11661,
											"end": 11679,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11661,
											"end": 11679,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11654,
											"end": 11714,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11730,
											"end": 11748,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 11730,
											"end": 11748,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11730,
											"end": 11748,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11723,
											"end": 11757,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11723,
											"end": 11757,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11723,
											"end": 11757,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11567,
											"end": 11585,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 11567,
											"end": 11585,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 11392,
											"end": 11763,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8450,
											"end": 8468,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8478,
											"end": 8497,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8616,
											"end": 8620,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8613,
											"end": 8614,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8606,
											"end": 8610,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8600,
											"end": 8611,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8593,
											"end": 8597,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8587,
											"end": 8591,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 8583,
											"end": 8598,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8580,
											"end": 8581,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8573,
											"end": 8578,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 8566,
											"end": 8571,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 8561,
											"end": 8621,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 8673,
											"end": 8680,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8717,
											"end": 8721,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8711,
											"end": 8722,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8762,
											"end": 8778,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 8759,
											"end": 8760,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8754,
											"end": 8757,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8739,
											"end": 8779,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 8808,
											"end": 8824,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 8803,
											"end": 8806,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8796,
											"end": 8825,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "tag",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8916,
											"end": 8917,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8910,
											"end": 8918,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8866,
											"end": 8882,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 8866,
											"end": 8882,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8994,
											"end": 9005,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9009,
											"end": 9010,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 8960,
											"end": 8991,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5274AFE7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11932,
											"end": 11964,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 11932,
											"end": 11964,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11914,
											"end": 11965,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11887,
											"end": 11905,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 11887,
											"end": 11905,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 11768,
											"end": 11971,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14,
											"end": 240,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 14,
											"end": 240,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 187,
											"end": 210,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 187,
											"end": 210,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14,
											"end": 240,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 240,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 572,
											"end": 1038,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 572,
											"end": 1038,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 649,
											"end": 655,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 657,
											"end": 663,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 671,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 718,
											"end": 720,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 706,
											"end": 715,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 697,
											"end": 704,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 693,
											"end": 716,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 689,
											"end": 721,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 686,
											"end": 738,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 686,
											"end": 738,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 686,
											"end": 738,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 734,
											"end": 735,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 731,
											"end": 732,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 724,
											"end": 736,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 686,
											"end": 738,
											"name": "tag",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 686,
											"end": 738,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 779,
											"end": 802,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 779,
											"end": 802,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 779,
											"end": 802,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 899,
											"end": 901,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 884,
											"end": 902,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 884,
											"end": 902,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 871,
											"end": 903,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 871,
											"end": 903,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1002,
											"end": 1004,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 987,
											"end": 1005,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 987,
											"end": 1005,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 987,
											"end": 1005,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 974,
											"end": 1006,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 974,
											"end": 1006,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 572,
											"end": 1038,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 572,
											"end": 1038,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1225,
											"end": 1398,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 1225,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1293,
											"end": 1313,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1293,
											"end": 1313,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1342,
											"end": 1373,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1373,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1332,
											"end": 1374,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1332,
											"end": 1374,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1322,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 1322,
											"end": 1392,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1388,
											"end": 1389,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1385,
											"end": 1386,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1378,
											"end": 1390,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1322,
											"end": 1392,
											"name": "tag",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 1322,
											"end": 1392,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1225,
											"end": 1398,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1225,
											"end": 1398,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1225,
											"end": 1398,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1225,
											"end": 1398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1403,
											"end": 2443,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 1403,
											"end": 2443,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1525,
											"end": 1531,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1533,
											"end": 1539,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1541,
											"end": 1547,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1549,
											"end": 1555,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1557,
											"end": 1563,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1565,
											"end": 1571,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1618,
											"end": 1621,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 1606,
											"end": 1615,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 1597,
											"end": 1604,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 1593,
											"end": 1616,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1589,
											"end": 1622,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1586,
											"end": 1639,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1586,
											"end": 1639,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 1586,
											"end": 1639,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1635,
											"end": 1636,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1632,
											"end": 1633,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1625,
											"end": 1637,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1586,
											"end": 1639,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 1586,
											"end": 1639,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1703,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1703,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1703,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1800,
											"end": 1802,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1785,
											"end": 1803,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 1785,
											"end": 1803,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1772,
											"end": 1804,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1772,
											"end": 1804,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1881,
											"end": 1883,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1866,
											"end": 1884,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 1866,
											"end": 1884,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1853,
											"end": 1885,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1908,
											"end": 1926,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1897,
											"end": 1927,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1897,
											"end": 1927,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1894,
											"end": 1944,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1894,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 1894,
											"end": 1944,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1940,
											"end": 1941,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1937,
											"end": 1938,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1930,
											"end": 1942,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1894,
											"end": 1944,
											"name": "tag",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 1894,
											"end": 1944,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 1985,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 1985,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2016,
											"end": 2020,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2008,
											"end": 2021,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2008,
											"end": 2021,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2004,
											"end": 2031,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 1994,
											"end": 2049,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 1994,
											"end": 2049,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2045,
											"end": 2046,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2042,
											"end": 2043,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2047,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1994,
											"end": 2049,
											"name": "tag",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 1994,
											"end": 2049,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2085,
											"end": 2087,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2072,
											"end": 2088,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2111,
											"end": 2129,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2103,
											"end": 2109,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2130,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2097,
											"end": 2147,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2097,
											"end": 2147,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 2097,
											"end": 2147,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2143,
											"end": 2144,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2140,
											"end": 2141,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2133,
											"end": 2145,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2097,
											"end": 2147,
											"name": "tag",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 2097,
											"end": 2147,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2196,
											"end": 2203,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 2191,
											"end": 2193,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2181,
											"end": 2187,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2178,
											"end": 2179,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 2174,
											"end": 2188,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 2170,
											"end": 2172,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2166,
											"end": 2189,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2162,
											"end": 2194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2159,
											"end": 2204,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2156,
											"end": 2221,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2156,
											"end": 2221,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 2156,
											"end": 2221,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2217,
											"end": 2218,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2214,
											"end": 2215,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2207,
											"end": 2219,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2156,
											"end": 2221,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 2156,
											"end": 2221,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2248,
											"end": 2250,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2240,
											"end": 2251,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2251,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2251,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2251,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2251,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2270,
											"end": 2276,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2295,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 2329,
											"end": 2331,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2314,
											"end": 2332,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 2314,
											"end": 2332,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2295,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 2295,
											"end": 2333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2295,
											"end": 2333,
											"name": "tag",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 2295,
											"end": 2333,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1403,
											"end": 2443,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 1403,
											"end": 2443,
											"name": "SWAP9",
											"source": 7
										},
										{
											"begin": 1403,
											"end": 2443,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1403,
											"end": 2443,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1403,
											"end": 2443,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1403,
											"end": 2443,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 1403,
											"end": 2443,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1403,
											"end": 2443,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1403,
											"end": 2443,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2406,
											"end": 2409,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 2391,
											"end": 2410,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2391,
											"end": 2410,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2391,
											"end": 2410,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2378,
											"end": 2411,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2378,
											"end": 2411,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1403,
											"end": 2443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2448,
											"end": 3059,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 2448,
											"end": 3059,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2638,
											"end": 2640,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2650,
											"end": 2671,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2650,
											"end": 2671,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2650,
											"end": 2671,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2720,
											"end": 2733,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2720,
											"end": 2733,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2623,
											"end": 2641,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2623,
											"end": 2641,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2623,
											"end": 2641,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2742,
											"end": 2764,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2742,
											"end": 2764,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2742,
											"end": 2764,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2594,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2594,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2821,
											"end": 2836,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2821,
											"end": 2836,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2821,
											"end": 2836,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2795,
											"end": 2797,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2780,
											"end": 2798,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2780,
											"end": 2798,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2780,
											"end": 2798,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2594,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2864,
											"end": 3033,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 2864,
											"end": 3033,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2878,
											"end": 2884,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2875,
											"end": 2876,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2872,
											"end": 2885,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2864,
											"end": 3033,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2864,
											"end": 3033,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 2864,
											"end": 3033,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2939,
											"end": 2952,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2939,
											"end": 2952,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2927,
											"end": 2953,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2927,
											"end": 2953,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2982,
											"end": 2984,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3008,
											"end": 3023,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3023,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3023,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3023,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2973,
											"end": 2985,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2973,
											"end": 2985,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2973,
											"end": 2985,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2973,
											"end": 2985,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2900,
											"end": 2901,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2893,
											"end": 2902,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2864,
											"end": 3033,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 2864,
											"end": 3033,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2864,
											"end": 3033,
											"name": "tag",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 2864,
											"end": 3033,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3050,
											"end": 3053,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3050,
											"end": 3053,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 2448,
											"end": 3059,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2448,
											"end": 3059,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3064,
											"end": 3324,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 3064,
											"end": 3324,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3132,
											"end": 3138,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3140,
											"end": 3146,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3193,
											"end": 3195,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3181,
											"end": 3190,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3172,
											"end": 3179,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3168,
											"end": 3191,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3164,
											"end": 3196,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3161,
											"end": 3213,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3161,
											"end": 3213,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 3161,
											"end": 3213,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3209,
											"end": 3210,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3161,
											"end": 3213,
											"name": "tag",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 3161,
											"end": 3213,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3232,
											"end": 3261,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 3251,
											"end": 3260,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3232,
											"end": 3261,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 3232,
											"end": 3261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3232,
											"end": 3261,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 3232,
											"end": 3261,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3222,
											"end": 3261,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3222,
											"end": 3261,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3280,
											"end": 3318,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 3314,
											"end": 3316,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3303,
											"end": 3312,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3280,
											"end": 3318,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 3280,
											"end": 3318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3280,
											"end": 3318,
											"name": "tag",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 3280,
											"end": 3318,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3270,
											"end": 3318,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3270,
											"end": 3318,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3064,
											"end": 3324,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3064,
											"end": 3324,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3064,
											"end": 3324,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3064,
											"end": 3324,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3064,
											"end": 3324,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3064,
											"end": 3324,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3329,
											"end": 4141,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 3329,
											"end": 4141,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3442,
											"end": 3448,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3450,
											"end": 3456,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3458,
											"end": 3464,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3466,
											"end": 3472,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3474,
											"end": 3480,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3482,
											"end": 3488,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3490,
											"end": 3496,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3543,
											"end": 3546,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 3531,
											"end": 3540,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 3522,
											"end": 3529,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 3518,
											"end": 3541,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3514,
											"end": 3547,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3511,
											"end": 3564,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3511,
											"end": 3564,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 3511,
											"end": 3564,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3560,
											"end": 3561,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3557,
											"end": 3558,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3550,
											"end": 3562,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3511,
											"end": 3564,
											"name": "tag",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 3511,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3583,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 3602,
											"end": 3611,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 3583,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 3583,
											"end": 3612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3583,
											"end": 3612,
											"name": "tag",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 3583,
											"end": 3612,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3573,
											"end": 3612,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 3573,
											"end": 3612,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3631,
											"end": 3669,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 3665,
											"end": 3667,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3654,
											"end": 3663,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 3650,
											"end": 3668,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3631,
											"end": 3669,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 3631,
											"end": 3669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3631,
											"end": 3669,
											"name": "tag",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 3631,
											"end": 3669,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3621,
											"end": 3669,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3738,
											"end": 3740,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3723,
											"end": 3741,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 3723,
											"end": 3741,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3710,
											"end": 3742,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3710,
											"end": 3742,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3839,
											"end": 3841,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3824,
											"end": 3842,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 3824,
											"end": 3842,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3811,
											"end": 3843,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3811,
											"end": 3843,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3942,
											"end": 3945,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 3927,
											"end": 3946,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 3927,
											"end": 3946,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3914,
											"end": 3947,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3914,
											"end": 3947,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3992,
											"end": 4031,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 4026,
											"end": 4029,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 4011,
											"end": 4030,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 4011,
											"end": 4030,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3992,
											"end": 4031,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 3992,
											"end": 4031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3992,
											"end": 4031,
											"name": "tag",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 3992,
											"end": 4031,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3329,
											"end": 4141,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 3329,
											"end": 4141,
											"name": "SWAP10",
											"source": 7
										},
										{
											"begin": 3329,
											"end": 4141,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 3329,
											"end": 4141,
											"name": "SWAP9",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3329,
											"end": 4141,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3329,
											"end": 4141,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 3329,
											"end": 4141,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3329,
											"end": 4141,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 3329,
											"end": 4141,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3329,
											"end": 4141,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 3329,
											"end": 4141,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3329,
											"end": 4141,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4104,
											"end": 4107,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 4089,
											"end": 4108,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4089,
											"end": 4108,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4089,
											"end": 4108,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4076,
											"end": 4109,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 4076,
											"end": 4109,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3329,
											"end": 4141,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4399,
											"end": 4699,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 4399,
											"end": 4699,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4467,
											"end": 4473,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4475,
											"end": 4481,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4528,
											"end": 4530,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4516,
											"end": 4525,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4507,
											"end": 4514,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4503,
											"end": 4526,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4499,
											"end": 4531,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4496,
											"end": 4548,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4496,
											"end": 4548,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 4496,
											"end": 4548,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4544,
											"end": 4545,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4541,
											"end": 4542,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4534,
											"end": 4546,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4496,
											"end": 4548,
											"name": "tag",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 4496,
											"end": 4548,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4589,
											"end": 4612,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4589,
											"end": 4612,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 4589,
											"end": 4612,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4655,
											"end": 4693,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 4689,
											"end": 4691,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4674,
											"end": 4692,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4674,
											"end": 4692,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4655,
											"end": 4693,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 4655,
											"end": 4693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4704,
											"end": 5637,
											"name": "tag",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 4704,
											"end": 5637,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4826,
											"end": 4832,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4834,
											"end": 4840,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4842,
											"end": 4848,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4850,
											"end": 4856,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4858,
											"end": 4864,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4866,
											"end": 4872,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4874,
											"end": 4880,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4882,
											"end": 4888,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4935,
											"end": 4938,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4923,
											"end": 4932,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 4914,
											"end": 4921,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 4910,
											"end": 4933,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4906,
											"end": 4939,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4903,
											"end": 4956,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4903,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 4903,
											"end": 4956,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4952,
											"end": 4953,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4949,
											"end": 4950,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4942,
											"end": 4954,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4903,
											"end": 4956,
											"name": "tag",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 4903,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4975,
											"end": 5004,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 4994,
											"end": 5003,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 4975,
											"end": 5004,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 4975,
											"end": 5004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4975,
											"end": 5004,
											"name": "tag",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 4975,
											"end": 5004,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4965,
											"end": 5004,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 4965,
											"end": 5004,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5023,
											"end": 5061,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 5057,
											"end": 5059,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5046,
											"end": 5055,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 5042,
											"end": 5060,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5023,
											"end": 5061,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 5023,
											"end": 5061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5023,
											"end": 5061,
											"name": "tag",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 5023,
											"end": 5061,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5013,
											"end": 5061,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5130,
											"end": 5132,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5115,
											"end": 5133,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 5115,
											"end": 5133,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5102,
											"end": 5134,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 5102,
											"end": 5134,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5231,
											"end": 5233,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 5216,
											"end": 5234,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 5216,
											"end": 5234,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5203,
											"end": 5235,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 5203,
											"end": 5235,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5334,
											"end": 5337,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 5319,
											"end": 5338,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 5319,
											"end": 5338,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5306,
											"end": 5339,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 5306,
											"end": 5339,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5438,
											"end": 5441,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 5423,
											"end": 5442,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 5423,
											"end": 5442,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5410,
											"end": 5443,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 5410,
											"end": 5443,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5488,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 5522,
											"end": 5525,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 5507,
											"end": 5526,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 5507,
											"end": 5526,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5488,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 5488,
											"end": 5527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5488,
											"end": 5527,
											"name": "tag",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 5488,
											"end": 5527,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4704,
											"end": 5637,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 4704,
											"end": 5637,
											"name": "SWAP11",
											"source": 7
										},
										{
											"begin": 4704,
											"end": 5637,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 4704,
											"end": 5637,
											"name": "SWAP10",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4704,
											"end": 5637,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 4704,
											"end": 5637,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 4704,
											"end": 5637,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4704,
											"end": 5637,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 4704,
											"end": 5637,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4704,
											"end": 5637,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 4704,
											"end": 5637,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4704,
											"end": 5637,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5478,
											"end": 5527,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5478,
											"end": 5527,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5600,
											"end": 5603,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 5585,
											"end": 5604,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5572,
											"end": 5605,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 5572,
											"end": 5605,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4704,
											"end": 5637,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6311,
											"end": 6438,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 6311,
											"end": 6438,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6372,
											"end": 6382,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 6367,
											"end": 6370,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 6363,
											"end": 6383,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 6360,
											"end": 6361,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6353,
											"end": 6384,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6403,
											"end": 6407,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 6400,
											"end": 6401,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6393,
											"end": 6408,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6427,
											"end": 6431,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6424,
											"end": 6425,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6417,
											"end": 6432,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6443,
											"end": 6611,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 6443,
											"end": 6611,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6516,
											"end": 6525,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6516,
											"end": 6525,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6516,
											"end": 6525,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 6547,
											"end": 6556,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6547,
											"end": 6556,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6564,
											"end": 6579,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6564,
											"end": 6579,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6564,
											"end": 6579,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6558,
											"end": 6580,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6558,
											"end": 6580,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 6544,
											"end": 6581,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 6534,
											"end": 6605,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 6534,
											"end": 6605,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6585,
											"end": 6603,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 6585,
											"end": 6603,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 6585,
											"end": 6603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6616,
											"end": 6741,
											"name": "tag",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 6616,
											"end": 6741,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6681,
											"end": 6690,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6681,
											"end": 6690,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6681,
											"end": 6690,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6702,
											"end": 6712,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6702,
											"end": 6712,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6702,
											"end": 6712,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6699,
											"end": 6735,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6699,
											"end": 6735,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 6699,
											"end": 6735,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6715,
											"end": 6733,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 6715,
											"end": 6733,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 6715,
											"end": 6733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6746,
											"end": 6963,
											"name": "tag",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 6746,
											"end": 6963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6786,
											"end": 6787,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6812,
											"end": 6813,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6802,
											"end": 6934,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 6802,
											"end": 6934,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6856,
											"end": 6866,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 6851,
											"end": 6854,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 6847,
											"end": 6867,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 6844,
											"end": 6845,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6837,
											"end": 6868,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6891,
											"end": 6895,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 6888,
											"end": 6889,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6881,
											"end": 6896,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6919,
											"end": 6923,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6916,
											"end": 6917,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6909,
											"end": 6924,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6802,
											"end": 6934,
											"name": "tag",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 6802,
											"end": 6934,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6948,
											"end": 6957,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6948,
											"end": 6957,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6746,
											"end": 6963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6968,
											"end": 7298,
											"name": "tag",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 6968,
											"end": 7298,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7170,
											"end": 7172,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7152,
											"end": 7173,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7152,
											"end": 7173,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7152,
											"end": 7173,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7209,
											"end": 7210,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 7189,
											"end": 7207,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7189,
											"end": 7207,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7189,
											"end": 7207,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7182,
											"end": 7211,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "115E1C1A5C9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7242,
											"end": 7244,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7227,
											"end": 7245,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7227,
											"end": 7245,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7220,
											"end": 7257,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7289,
											"end": 7291,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 7274,
											"end": 7292,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7274,
											"end": 7292,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6968,
											"end": 7298,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7659,
											"end": 7786,
											"name": "tag",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 7659,
											"end": 7786,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7720,
											"end": 7730,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 7715,
											"end": 7718,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 7711,
											"end": 7731,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 7708,
											"end": 7709,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7701,
											"end": 7732,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7751,
											"end": 7755,
											"name": "PUSH",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 7748,
											"end": 7749,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7741,
											"end": 7756,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7775,
											"end": 7779,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 7772,
											"end": 7773,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7765,
											"end": 7780,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7791,
											"end": 7977,
											"name": "tag",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 7791,
											"end": 7977,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7850,
											"end": 7856,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7903,
											"end": 7905,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7891,
											"end": 7900,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7882,
											"end": 7889,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7878,
											"end": 7901,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7874,
											"end": 7906,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 7871,
											"end": 7923,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7871,
											"end": 7923,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 7871,
											"end": 7923,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7919,
											"end": 7920,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7916,
											"end": 7917,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7909,
											"end": 7921,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7871,
											"end": 7923,
											"name": "tag",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 7871,
											"end": 7923,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7942,
											"end": 7971,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 7961,
											"end": 7970,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7942,
											"end": 7971,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 7942,
											"end": 7971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7942,
											"end": 7971,
											"name": "tag",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 7942,
											"end": 7971,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7932,
											"end": 7971,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7791,
											"end": 7977,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7791,
											"end": 7977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9479,
											"end": 9607,
											"name": "tag",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 9479,
											"end": 9607,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9546,
											"end": 9555,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9546,
											"end": 9555,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9546,
											"end": 9555,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9567,
											"end": 9578,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9567,
											"end": 9578,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9567,
											"end": 9578,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 9564,
											"end": 9601,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9564,
											"end": 9601,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 9564,
											"end": 9601,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9581,
											"end": 9599,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 9581,
											"end": 9599,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 9581,
											"end": 9599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9612,
											"end": 9843,
											"name": "tag",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 9612,
											"end": 9843,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9723,
											"end": 9761,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9723,
											"end": 9761,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9723,
											"end": 9761,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9683,
											"end": 9721,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9683,
											"end": 9721,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9683,
											"end": 9721,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9679,
											"end": 9762,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9679,
											"end": 9762,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9774,
											"end": 9814,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9774,
											"end": 9814,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 9771,
											"end": 9837,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9771,
											"end": 9837,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 9771,
											"end": 9837,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9817,
											"end": 9835,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 9817,
											"end": 9835,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 9817,
											"end": 9835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9848,
											"end": 10076,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 9848,
											"end": 10076,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9917,
											"end": 9955,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9917,
											"end": 9955,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9917,
											"end": 9955,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9957,
											"end": 9995,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9957,
											"end": 9995,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9957,
											"end": 9995,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9913,
											"end": 9996,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9913,
											"end": 9996,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10008,
											"end": 10047,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10008,
											"end": 10047,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 10005,
											"end": 10070,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10005,
											"end": 10070,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 10005,
											"end": 10070,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10050,
											"end": 10068,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 10050,
											"end": 10068,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 10050,
											"end": 10068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/1_Storage.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"getPrice(address,address)": "ac41865a",
							"liquidityBalance(bytes32,address)": "bb521a30",
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "baa2abde",
							"reserves(bytes32)": "00bbf1e4",
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739",
							"totalLiquidity(bytes32)": "54b7a8f7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"liquidityBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"reserves\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"reserveA\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"reserveB\",\"type\":\"uint112\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"totalLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Valentino Salguero\",\"custom:dev-run-script\":\"./scripts/deploy_with_ethers.ts\",\"details\":\"Inspired by Uniswap, but simplified for educational purposes.\",\"errors\":{\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)\":{\"params\":{\"amountADesired\":\"Desired amount of token A to add\",\"amountAMin\":\"Minimum acceptable amount of token A\",\"amountBDesired\":\"Desired amount of token B to add\",\"amountBMin\":\"Minimum acceptable amount of token B\",\"deadline\":\"Timestamp after which the transaction is invalid\",\"to\":\"Recipient of the liquidity tokens\",\"tokenA\":\"Address of token A\",\"tokenB\":\"Address of token B\"},\"returns\":{\"amountA\":\"Actual amount of token A added\",\"amountB\":\"Actual amount of token B added\",\"liquidity\":\"Amount of liquidity tokens minted\"}},\"getAmountOut(uint256,uint256,uint256)\":{\"params\":{\"amountIn\":\"Input amount\",\"reserveIn\":\"Reserve of input token\",\"reserveOut\":\"Reserve of output token\"},\"returns\":{\"amountOut\":\"Amount of output tokens after fee\"}},\"getPrice(address,address)\":{\"params\":{\"tokenA\":\"Address of token A\",\"tokenB\":\"Address of token B\"},\"returns\":{\"price\":\"Price as tokenB/tokenA scaled by 1e18\"}},\"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)\":{\"params\":{\"amountAMin\":\"Minimum acceptable amount of token A\",\"amountBMin\":\"Minimum acceptable amount of token B\",\"deadline\":\"Timestamp after which the transaction is invalid\",\"liquidity\":\"Amount of liquidity tokens to burn\",\"to\":\"Address to receive withdrawn tokens\",\"tokenA\":\"Address of token A\",\"tokenB\":\"Address of token B\"},\"returns\":{\"amountA\":\"Amount of token A received\",\"amountB\":\"Amount of token B received\"}},\"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)\":{\"params\":{\"amountIn\":\"Exact amount of input tokens to swap\",\"amountOutMin\":\"Minimum amount of output tokens required\",\"deadline\":\"Timestamp after which the transaction is invalid\",\"path\":\"Array with [tokenIn, tokenOut]\",\"to\":\"Address to receive output tokens\"},\"returns\":{\"amounts\":\"Array containing input and output amounts\"}}},\"stateVariables\":{\"liquidityBalance\":{\"details\":\"Tracks each user's liquidity share in a given pair\"},\"reserves\":{\"details\":\"Maps the hash of a token pair to its reserve data\"},\"totalLiquidity\":{\"details\":\"Maps the pair hash to the total liquidity of the pool\"}},\"title\":\"SimpleSwap - A minimal Uniswap-like DEX for ERC-20 tokens\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)\":{\"notice\":\"Adds liquidity to a token pair pool\"},\"getAmountOut(uint256,uint256,uint256)\":{\"notice\":\"Calculates output tokens for a given input using Uniswap formula\"},\"getPrice(address,address)\":{\"notice\":\"Returns the price of tokenB in terms of tokenA\"},\"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)\":{\"notice\":\"Removes liquidity and returns tokens to the user\"},\"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)\":{\"notice\":\"Swaps exact amountIn of tokenIn for tokenOut\"}},\"notice\":\"This contract allows users to add/remove liquidity, swap tokens, fetch price and calculate output amounts.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/1_Storage.sol\":\"SimpleSwap\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/1_Storage.sol\":{\"keccak256\":\"0x9c6fe05841c6d485a9796f36da8cf9c19561d5215e80b54e220e53ceea2c61d9\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://14c3b5bdff3c25250ff8fda02d3c005997e06ae7302b5aab29182891c6cf0fa4\",\"dweb:/ipfs/QmaEDHcq4rYfki36cFmoUpwB26jEjpM4SnAWe5x6GRDTv8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 664,
								"contract": "contracts/1_Storage.sol:SimpleSwap",
								"label": "reserves",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(Reserve)658_storage)"
							},
							{
								"astId": 669,
								"contract": "contracts/1_Storage.sol:SimpleSwap",
								"label": "totalLiquidity",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_bytes32,t_uint256)"
							},
							{
								"astId": 676,
								"contract": "contracts/1_Storage.sol:SimpleSwap",
								"label": "liquidityBalance",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_bytes32,t_struct(Reserve)658_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct SimpleSwap.Reserve)",
								"numberOfBytes": "32",
								"value": "t_struct(Reserve)658_storage"
							},
							"t_mapping(t_bytes32,t_uint256)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(Reserve)658_storage": {
								"encoding": "inplace",
								"label": "struct SimpleSwap.Reserve",
								"members": [
									{
										"astId": 655,
										"contract": "contracts/1_Storage.sol:SimpleSwap",
										"label": "reserveA",
										"offset": 0,
										"slot": "0",
										"type": "t_uint112"
									},
									{
										"astId": 657,
										"contract": "contracts/1_Storage.sol:SimpleSwap",
										"label": "reserveB",
										"offset": 14,
										"slot": "0",
										"type": "t_uint112"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint112": {
								"encoding": "inplace",
								"label": "uint112",
								"numberOfBytes": "14"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": {
								"notice": "Adds liquidity to a token pair pool"
							},
							"getAmountOut(uint256,uint256,uint256)": {
								"notice": "Calculates output tokens for a given input using Uniswap formula"
							},
							"getPrice(address,address)": {
								"notice": "Returns the price of tokenB in terms of tokenA"
							},
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": {
								"notice": "Removes liquidity and returns tokens to the user"
							},
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": {
								"notice": "Swaps exact amountIn of tokenIn for tokenOut"
							}
						},
						"notice": "This contract allows users to add/remove liquidity, swap tokens, fetch price and calculate output amounts.",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							81
						],
						"IERC165": [
							643
						],
						"IERC20": [
							167
						]
					},
					"id": 82,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 82,
							"sourceUnit": 90,
							"src": "133:36:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 167,
										"src": "141:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 82,
							"sourceUnit": 86,
							"src": "170:38:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 643,
										"src": "178:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "IERC20",
										"nameLocations": [
											"590:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 167,
										"src": "590:6:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "IERC165",
										"nameLocations": [
											"598:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 643,
										"src": "598:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:0"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:0",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 81,
							"linearizedBaseContracts": [
								81,
								643,
								167
							],
							"name": "IERC1363",
							"nameLocation": "578:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 20,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1548:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 12,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1560:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 14,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:0"
									},
									"returnParameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1593:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 17,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:0"
									},
									"scope": 81,
									"src": "1523:76:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 32,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2088:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 22,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2100:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2115:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 26,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2154:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 29,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:0"
									},
									"scope": 81,
									"src": "2063:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2653:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2667:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2679:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2712:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:0"
									},
									"scope": 81,
									"src": "2624:94:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 58,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3294:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3308:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3320:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 50,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3335:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 52,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3374:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 55,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:0"
									},
									"scope": 81,
									"src": "3265:115:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 68,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3805:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3822:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 62,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3855:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 65,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:0"
									},
									"scope": 81,
									"src": "3781:80:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 80,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4374:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4391:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 72,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4406:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 74,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4445:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 77,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:0"
									},
									"scope": 81,
									"src": "4350:101:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 82,
							"src": "568:3885:0",
							"usedErrors": [],
							"usedEvents": [
								101,
								110
							]
						}
					],
					"src": "107:4347:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							643
						]
					},
					"id": 86,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 83,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 85,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 86,
							"sourceUnit": 644,
							"src": "132:59:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 84,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 643,
										"src": "140:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							167
						]
					},
					"id": 90,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 87,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 89,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 90,
							"sourceUnit": 168,
							"src": "131:49:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 88,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 167,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:76:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							167
						]
					},
					"id": 168,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 91,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 92,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 167,
							"linearizedBaseContracts": [
								167
							],
							"name": "IERC20",
							"nameLocation": "214:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 93,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 101,
									"name": "Transfer",
									"nameLocation": "396:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "405:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "427:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "447:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:3"
									},
									"src": "390:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 110,
									"name": "Approval",
									"nameLocation": "627:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "636:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 106,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "659:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 108,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "684:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:3"
									},
									"src": "621:78:3"
								},
								{
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 116,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:3"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "821:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:3"
									},
									"scope": 167,
									"src": "775:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 117,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 124,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 118,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 167,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 125,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 134,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "1234:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:3"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "1267:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 131,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:3"
									},
									"scope": 167,
									"src": "1204:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 135,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 144,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "1567:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "1582:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:3"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "1622:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:3"
									},
									"scope": 167,
									"src": "1548:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 145,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 154,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "2326:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "2343:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:3"
									},
									"returnParameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "2376:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 151,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:3"
									},
									"scope": 167,
									"src": "2309:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 155,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 166,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "2712:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "2726:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "2738:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:3"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "2771:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 163,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:3"
									},
									"scope": 167,
									"src": "2690:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 168,
							"src": "204:2575:3",
							"usedErrors": [],
							"usedEvents": [
								101,
								110
							]
						}
					],
					"src": "106:2674:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							81
						],
						"IERC20": [
							167
						],
						"SafeERC20": [
							631
						]
					},
					"id": 632,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 169,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 171,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 632,
							"sourceUnit": 168,
							"src": "141:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 170,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 167,
										"src": "149:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 173,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 632,
							"sourceUnit": 82,
							"src": "179:58:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 172,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 81,
										"src": "187:8:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 174,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:4",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 631,
							"linearizedBaseContracts": [
								631
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:4",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 179,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "823:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:4"
									},
									"src": "792:46:4"
								},
								{
									"documentation": {
										"id": 180,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:4",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 188,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "959:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "976:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1002:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:4"
									},
									"src": "920:109:4"
								},
								{
									"body": {
										"id": 211,
										"nodeType": "Block",
										"src": "1291:88:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 200,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "1321:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 203,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 192,
																		"src": "1343:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$167",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 204,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:4",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 134,
																	"src": "1343:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 205,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 194,
																			"src": "1360:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 206,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 196,
																			"src": "1364:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 207,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 201,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 202,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:4",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 199,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 589,
														"src": "1301:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 210,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:4"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:4",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "1241:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 191,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 190,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "1241:6:4"
													},
													"referencedDeclaration": 167,
													"src": "1241:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "1255:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "1267:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:4"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:4"
									},
									"scope": 631,
									"src": "1219:160:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "1708:98:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 226,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "1738:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 229,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 216,
																		"src": "1760:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$167",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:4",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 166,
																	"src": "1760:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 231,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 218,
																			"src": "1781:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 232,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 220,
																			"src": "1787:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 233,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 222,
																			"src": "1791:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 234,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 227,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 228,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:4",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 225,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 589,
														"src": "1718:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 237,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:4"
											}
										]
									},
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:4",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1644:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 215,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 214,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "1644:6:4"
													},
													"referencedDeclaration": 167,
													"src": "1644:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1658:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1672:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1684:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:4"
									},
									"returnParameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:4"
									},
									"scope": 631,
									"src": "1618:188:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 264,
										"nodeType": "Block",
										"src": "2033:99:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "2074:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 256,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 243,
																		"src": "2096:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$167",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 257,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2102:8:4",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 134,
																	"src": "2096:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 258,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 245,
																			"src": "2113:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 259,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 247,
																			"src": "2117:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 260,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2112:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 254,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2081:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 255,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2085:10:4",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2081:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2081:43:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 252,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 630,
														"src": "2050:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2050:75:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 251,
												"id": 263,
												"nodeType": "Return",
												"src": "2043:82:4"
											}
										]
									},
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "1812:126:4",
										"text": " @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 265,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransfer",
									"nameLocation": "1952:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1975:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "1968:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 242,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 241,
														"name": "IERC20",
														"nameLocations": [
															"1968:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "1968:6:4"
													},
													"referencedDeclaration": 167,
													"src": "1968:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1990:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "1982:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1982:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2002:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "1994:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1967:41:4"
									},
									"returnParameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "2027:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 249,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2027:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2026:6:4"
									},
									"scope": 631,
									"src": "1943:189:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "2381:109:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 281,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 269,
															"src": "2422:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 284,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 269,
																		"src": "2444:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$167",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2450:12:4",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 166,
																	"src": "2444:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 286,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 271,
																			"src": "2465:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 287,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 273,
																			"src": "2471:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 288,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 275,
																			"src": "2475:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 289,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2464:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 282,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2429:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 283,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2433:10:4",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2429:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2429:53:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 280,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 630,
														"src": "2398:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:85:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 279,
												"id": 292,
												"nodeType": "Return",
												"src": "2391:92:4"
											}
										]
									},
									"documentation": {
										"id": 266,
										"nodeType": "StructuredDocumentation",
										"src": "2138:130:4",
										"text": " @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransferFrom",
									"nameLocation": "2282:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2309:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "2302:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 268,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 267,
														"name": "IERC20",
														"nameLocations": [
															"2302:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "2302:6:4"
													},
													"referencedDeclaration": 167,
													"src": "2302:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2324:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "2316:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2338:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "2330:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "2342:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:55:4"
									},
									"returnParameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "2375:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 277,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:4"
									},
									"scope": 631,
									"src": "2273:217:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 324,
										"nodeType": "Block",
										"src": "3232:139:4",
										"statements": [
											{
												"assignments": [
													306
												],
												"declarations": [
													{
														"constant": false,
														"id": 306,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "3250:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 324,
														"src": "3242:20:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 305,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3242:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 315,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 311,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3289:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$631",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$631",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 310,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3281:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 309,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3281:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3281:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 313,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "3296:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 307,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 298,
															"src": "3265:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														"id": 308,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3271:9:4",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 144,
														"src": "3265:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3242:62:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 317,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 298,
															"src": "3327:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 318,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "3334:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 319,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 306,
																"src": "3343:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 320,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 302,
																"src": "3358:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3343:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 316,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 415,
														"src": "3314:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3314:50:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 323,
												"nodeType": "ExpressionStatement",
												"src": "3314:50:4"
											}
										]
									},
									"documentation": {
										"id": 295,
										"nodeType": "StructuredDocumentation",
										"src": "2496:645:4",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 325,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "3155:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3184:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "3177:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 297,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 296,
														"name": "IERC20",
														"nameLocations": [
															"3177:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "3177:6:4"
													},
													"referencedDeclaration": 167,
													"src": "3177:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3199:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "3191:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3191:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3216:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "3208:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3208:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3176:46:4"
									},
									"returnParameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3232:0:4"
									},
									"scope": 631,
									"src": "3146:225:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 367,
										"nodeType": "Block",
										"src": "4137:370:4",
										"statements": [
											{
												"id": 366,
												"nodeType": "UncheckedBlock",
												"src": "4147:354:4",
												"statements": [
													{
														"assignments": [
															337
														],
														"declarations": [
															{
																"constant": false,
																"id": 337,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "4179:16:4",
																"nodeType": "VariableDeclaration",
																"scope": 366,
																"src": "4171:24:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 336,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4171:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 346,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 342,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4222:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$631",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$631",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 341,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4214:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 340,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4214:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4214:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 344,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 331,
																	"src": "4229:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 338,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 329,
																	"src": "4198:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$167",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 339,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4204:9:4",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 144,
																"src": "4198:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4198:39:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4171:66:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 347,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 337,
																"src": "4255:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 348,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 333,
																"src": "4274:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4255:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 357,
														"nodeType": "IfStatement",
														"src": "4251:160:4",
														"trueBody": {
															"id": 356,
															"nodeType": "Block",
															"src": "4293:118:4",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 351,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 331,
																				"src": "4351:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 352,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 337,
																				"src": "4360:16:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 353,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 333,
																				"src": "4378:17:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 350,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 188,
																			"src": "4318:32:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4318:78:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 355,
																	"nodeType": "RevertStatement",
																	"src": "4311:85:4"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 359,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 329,
																	"src": "4437:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$167",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 360,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 331,
																	"src": "4444:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 363,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 361,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 337,
																		"src": "4453:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 362,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 333,
																		"src": "4472:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4453:36:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$167",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 358,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 415,
																"src": "4424:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 364,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4424:66:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 365,
														"nodeType": "ExpressionStatement",
														"src": "4424:66:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 326,
										"nodeType": "StructuredDocumentation",
										"src": "3377:657:4",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 368,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "4048:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4077:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "4070:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 328,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 327,
														"name": "IERC20",
														"nameLocations": [
															"4070:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "4070:6:4"
													},
													"referencedDeclaration": 167,
													"src": "4070:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4092:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "4084:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4084:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "4109:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "4101:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4101:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4069:58:4"
									},
									"returnParameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4137:0:4"
									},
									"scope": 631,
									"src": "4039:468:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 414,
										"nodeType": "Block",
										"src": "5161:303:4",
										"statements": [
											{
												"assignments": [
													380
												],
												"declarations": [
													{
														"constant": false,
														"id": 380,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "5184:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 414,
														"src": "5171:25:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 379,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5171:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 389,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 383,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 372,
																"src": "5214:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$167",
																	"typeString": "contract IERC20"
																}
															},
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5220:7:4",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 154,
															"src": "5214:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 385,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 374,
																	"src": "5230:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 386,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 376,
																	"src": "5239:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 387,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5229:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 381,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "5199:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 382,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5203:10:4",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "5199:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5199:47:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5171:75:4"
											},
											{
												"condition": {
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5261:45:4",
													"subExpression": {
														"arguments": [
															{
																"id": 391,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 372,
																"src": "5286:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$167",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 392,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 380,
																"src": "5293:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$167",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 390,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "5262:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 393,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5262:44:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 413,
												"nodeType": "IfStatement",
												"src": "5257:201:4",
												"trueBody": {
													"id": 412,
													"nodeType": "Block",
													"src": "5308:150:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 396,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 372,
																		"src": "5342:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$167",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 399,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 372,
																					"src": "5364:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$167",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 400,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5370:7:4",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 154,
																				"src": "5364:13:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 401,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 374,
																						"src": "5380:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 402,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5389:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 403,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5379:12:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 397,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5349:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 398,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5353:10:4",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "5349:14:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 404,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5349:43:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$167",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 395,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 589,
																	"src": "5322:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 405,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5322:71:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 406,
															"nodeType": "ExpressionStatement",
															"src": "5322:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 408,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 372,
																		"src": "5427:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$167",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 409,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 380,
																		"src": "5434:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$167",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 407,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 589,
																	"src": "5407:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5407:40:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 411,
															"nodeType": "ExpressionStatement",
															"src": "5407:40:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 369,
										"nodeType": "StructuredDocumentation",
										"src": "4513:566:4",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 415,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "5093:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5113:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "5106:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 371,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 370,
														"name": "IERC20",
														"nameLocations": [
															"5106:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "5106:6:4"
													},
													"referencedDeclaration": 167,
													"src": "5106:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5128:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "5120:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5120:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5145:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "5137:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5137:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5105:46:4"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5161:0:4"
									},
									"scope": 631,
									"src": "5084:380:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "5911:219:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 428,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 421,
																"src": "5925:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5928:4:4",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5925:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 430,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5933:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5925:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 431,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5943:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5925:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 446,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6011:39:4",
														"subExpression": {
															"arguments": [
																{
																	"id": 442,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 421,
																	"src": "6034:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 443,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 423,
																	"src": "6038:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 444,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 425,
																	"src": "6045:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 440,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "6012:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$81",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 441,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6018:15:4",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 32,
																"src": "6012:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6012:38:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 455,
													"nodeType": "IfStatement",
													"src": "6007:117:4",
													"trueBody": {
														"id": 454,
														"nodeType": "Block",
														"src": "6052:72:4",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 450,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 419,
																					"src": "6106:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 449,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6098:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 448,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6098:7:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 451,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6098:14:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 447,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 179,
																		"src": "6073:24:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 452,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6073:40:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 453,
																"nodeType": "RevertStatement",
																"src": "6066:47:4"
															}
														]
													}
												},
												"id": 456,
												"nodeType": "IfStatement",
												"src": "5921:203:4",
												"trueBody": {
													"id": 439,
													"nodeType": "Block",
													"src": "5946:55:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 434,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 419,
																		"src": "5973:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 435,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 421,
																		"src": "5980:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 436,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 423,
																		"src": "5984:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 433,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 212,
																	"src": "5960:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 437,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5960:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 438,
															"nodeType": "ExpressionStatement",
															"src": "5960:30:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 416,
										"nodeType": "StructuredDocumentation",
										"src": "5470:333:4",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5817:22:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5849:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "5840:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$81",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 418,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 417,
														"name": "IERC1363",
														"nameLocations": [
															"5840:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 81,
														"src": "5840:8:4"
													},
													"referencedDeclaration": 81,
													"src": "5840:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$81",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5864:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "5856:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5856:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5876:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "5868:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5868:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5896:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "5883:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 424,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5883:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5839:62:4"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5911:0:4"
									},
									"scope": 631,
									"src": "5808:322:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 504,
										"nodeType": "Block",
										"src": "6649:239:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 473,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 466,
																"src": "6663:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6666:4:4",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6663:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 475,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6671:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6663:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 476,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6681:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6663:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 493,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6759:49:4",
														"subExpression": {
															"arguments": [
																{
																	"id": 488,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 464,
																	"src": "6786:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 489,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 466,
																	"src": "6792:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 490,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 468,
																	"src": "6796:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 491,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 470,
																	"src": "6803:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 486,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 462,
																	"src": "6760:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$81",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 487,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6766:19:4",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 58,
																"src": "6760:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6760:48:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 502,
													"nodeType": "IfStatement",
													"src": "6755:127:4",
													"trueBody": {
														"id": 501,
														"nodeType": "Block",
														"src": "6810:72:4",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 497,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 462,
																					"src": "6864:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 496,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6856:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 495,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6856:7:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 498,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6856:14:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 494,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 179,
																		"src": "6831:24:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 499,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6831:40:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 500,
																"nodeType": "RevertStatement",
																"src": "6824:47:4"
															}
														]
													}
												},
												"id": 503,
												"nodeType": "IfStatement",
												"src": "6659:223:4",
												"trueBody": {
													"id": 485,
													"nodeType": "Block",
													"src": "6684:65:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 479,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 462,
																		"src": "6715:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 480,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 464,
																		"src": "6722:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 481,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 466,
																		"src": "6728:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 482,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 468,
																		"src": "6732:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 478,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 239,
																	"src": "6698:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6698:40:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 484,
															"nodeType": "ExpressionStatement",
															"src": "6698:40:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "6136:341:4",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 505,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "6491:26:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6536:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "6527:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$81",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 461,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 460,
														"name": "IERC1363",
														"nameLocations": [
															"6527:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 81,
														"src": "6527:8:4"
													},
													"referencedDeclaration": 81,
													"src": "6527:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$81",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6559:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "6551:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 463,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6551:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6581:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "6573:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 465,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6573:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6601:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "6593:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6593:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "6616:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 469,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6517:122:4"
									},
									"returnParameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6649:0:4"
									},
									"scope": 631,
									"src": "6482:406:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 547,
										"nodeType": "Block",
										"src": "7655:218:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 518,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 511,
																"src": "7669:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7672:4:4",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7669:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 520,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7677:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7669:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 521,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7687:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7669:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 536,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7755:38:4",
														"subExpression": {
															"arguments": [
																{
																	"id": 532,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 511,
																	"src": "7777:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 533,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 513,
																	"src": "7781:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 534,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 515,
																	"src": "7788:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 530,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 509,
																	"src": "7756:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$81",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 531,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7762:14:4",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 80,
																"src": "7756:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 535,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7756:37:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 545,
													"nodeType": "IfStatement",
													"src": "7751:116:4",
													"trueBody": {
														"id": 544,
														"nodeType": "Block",
														"src": "7795:72:4",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 540,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 509,
																					"src": "7849:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 539,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7841:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 538,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7841:7:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 541,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7841:14:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 537,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 179,
																		"src": "7816:24:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7816:40:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 543,
																"nodeType": "RevertStatement",
																"src": "7809:47:4"
															}
														]
													}
												},
												"id": 546,
												"nodeType": "IfStatement",
												"src": "7665:202:4",
												"trueBody": {
													"id": 529,
													"nodeType": "Block",
													"src": "7690:55:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 524,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 509,
																		"src": "7717:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 525,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 511,
																		"src": "7724:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 526,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 513,
																		"src": "7728:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 523,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 415,
																	"src": "7704:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 527,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7704:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 528,
															"nodeType": "ExpressionStatement",
															"src": "7704:30:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 506,
										"nodeType": "StructuredDocumentation",
										"src": "6894:654:4",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 548,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "7562:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7593:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "7584:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$81",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 508,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 507,
														"name": "IERC1363",
														"nameLocations": [
															"7584:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 81,
														"src": "7584:8:4"
													},
													"referencedDeclaration": 81,
													"src": "7584:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$81",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7608:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "7600:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7600:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7620:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "7612:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7612:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7640:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "7627:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 514,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7627:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7583:62:4"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7655:0:4"
									},
									"scope": 631,
									"src": "7553:320:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 588,
										"nodeType": "Block",
										"src": "8440:650:4",
										"statements": [
											{
												"assignments": [
													558
												],
												"declarations": [
													{
														"constant": false,
														"id": 558,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "8458:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 588,
														"src": "8450:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 557,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8450:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 559,
												"nodeType": "VariableDeclarationStatement",
												"src": "8450:18:4"
											},
											{
												"assignments": [
													561
												],
												"declarations": [
													{
														"constant": false,
														"id": 561,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "8486:11:4",
														"nodeType": "VariableDeclaration",
														"scope": 588,
														"src": "8478:19:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 560,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8478:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 562,
												"nodeType": "VariableDeclarationStatement",
												"src": "8478:19:4"
											},
											{
												"AST": {
													"nativeSrc": "8532:396:4",
													"nodeType": "YulBlock",
													"src": "8532:396:4",
													"statements": [
														{
															"nativeSrc": "8546:75:4",
															"nodeType": "YulVariableDeclaration",
															"src": "8546:75:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "8566:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "8566:3:4"
																		},
																		"nativeSrc": "8566:5:4",
																		"nodeType": "YulFunctionCall",
																		"src": "8566:5:4"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "8573:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "8573:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8580:1:4",
																		"nodeType": "YulLiteral",
																		"src": "8580:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8587:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "8587:4:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8593:4:4",
																				"nodeType": "YulLiteral",
																				"src": "8593:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8583:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "8583:3:4"
																		},
																		"nativeSrc": "8583:15:4",
																		"nodeType": "YulFunctionCall",
																		"src": "8583:15:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8606:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "8606:4:4"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8600:5:4",
																			"nodeType": "YulIdentifier",
																			"src": "8600:5:4"
																		},
																		"nativeSrc": "8600:11:4",
																		"nodeType": "YulFunctionCall",
																		"src": "8600:11:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8613:1:4",
																		"nodeType": "YulLiteral",
																		"src": "8613:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8616:4:4",
																		"nodeType": "YulLiteral",
																		"src": "8616:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "8561:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "8561:4:4"
																},
																"nativeSrc": "8561:60:4",
																"nodeType": "YulFunctionCall",
																"src": "8561:60:4"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "8550:7:4",
																	"nodeType": "YulTypedName",
																	"src": "8550:7:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8682:157:4",
																"nodeType": "YulBlock",
																"src": "8682:157:4",
																"statements": [
																	{
																		"nativeSrc": "8700:22:4",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8700:22:4",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8717:4:4",
																					"nodeType": "YulLiteral",
																					"src": "8717:4:4",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8711:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "8711:5:4"
																			},
																			"nativeSrc": "8711:11:4",
																			"nodeType": "YulFunctionCall",
																			"src": "8711:11:4"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8704:3:4",
																				"nodeType": "YulTypedName",
																				"src": "8704:3:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8754:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "8754:3:4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8759:1:4",
																					"nodeType": "YulLiteral",
																					"src": "8759:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8762:14:4",
																						"nodeType": "YulIdentifier",
																						"src": "8762:14:4"
																					},
																					"nativeSrc": "8762:16:4",
																					"nodeType": "YulFunctionCall",
																					"src": "8762:16:4"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8739:14:4",
																				"nodeType": "YulIdentifier",
																				"src": "8739:14:4"
																			},
																			"nativeSrc": "8739:40:4",
																			"nodeType": "YulFunctionCall",
																			"src": "8739:40:4"
																		},
																		"nativeSrc": "8739:40:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "8739:40:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8803:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "8803:3:4"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8808:14:4",
																						"nodeType": "YulIdentifier",
																						"src": "8808:14:4"
																					},
																					"nativeSrc": "8808:16:4",
																					"nodeType": "YulFunctionCall",
																					"src": "8808:16:4"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8796:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "8796:6:4"
																			},
																			"nativeSrc": "8796:29:4",
																			"nodeType": "YulFunctionCall",
																			"src": "8796:29:4"
																		},
																		"nativeSrc": "8796:29:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "8796:29:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "8673:7:4",
																		"nodeType": "YulIdentifier",
																		"src": "8673:7:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8666:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "8666:6:4"
																},
																"nativeSrc": "8666:15:4",
																"nodeType": "YulFunctionCall",
																"src": "8666:15:4"
															},
															"nativeSrc": "8663:176:4",
															"nodeType": "YulIf",
															"src": "8663:176:4"
														},
														{
															"nativeSrc": "8852:30:4",
															"nodeType": "YulAssignment",
															"src": "8852:30:4",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8866:14:4",
																	"nodeType": "YulIdentifier",
																	"src": "8866:14:4"
																},
																"nativeSrc": "8866:16:4",
																"nodeType": "YulFunctionCall",
																"src": "8866:16:4"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8852:10:4",
																	"nodeType": "YulIdentifier",
																	"src": "8852:10:4"
																}
															]
														},
														{
															"nativeSrc": "8895:23:4",
															"nodeType": "YulAssignment",
															"src": "8895:23:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8916:1:4",
																		"nodeType": "YulLiteral",
																		"src": "8916:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8910:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "8910:5:4"
																},
																"nativeSrc": "8910:8:4",
																"nodeType": "YulFunctionCall",
																"src": "8910:8:4"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8895:11:4",
																	"nodeType": "YulIdentifier",
																	"src": "8895:11:4"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 554,
														"isOffset": false,
														"isSlot": false,
														"src": "8587:4:4",
														"valueSize": 1
													},
													{
														"declaration": 554,
														"isOffset": false,
														"isSlot": false,
														"src": "8606:4:4",
														"valueSize": 1
													},
													{
														"declaration": 558,
														"isOffset": false,
														"isSlot": false,
														"src": "8852:10:4",
														"valueSize": 1
													},
													{
														"declaration": 561,
														"isOffset": false,
														"isSlot": false,
														"src": "8895:11:4",
														"valueSize": 1
													},
													{
														"declaration": 552,
														"isOffset": false,
														"isSlot": false,
														"src": "8573:5:4",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 563,
												"nodeType": "InlineAssembly",
												"src": "8507:421:4"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 566,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 564,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "8942:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 565,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8956:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8942:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 577,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 575,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 561,
															"src": "8994:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 576,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9009:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8994:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8942:68:4",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 574,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 569,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 552,
																			"src": "8968:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$167",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$167",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 568,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8960:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 567,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8960:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 570,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8960:14:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 571,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8975:4:4",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8960:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 572,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8980:6:4",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8960:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 573,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8990:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8960:31:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 587,
												"nodeType": "IfStatement",
												"src": "8938:146:4",
												"trueBody": {
													"id": 586,
													"nodeType": "Block",
													"src": "9012:72:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 582,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 552,
																				"src": "9066:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$167",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$167",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 581,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9058:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 580,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9058:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 583,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9058:14:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 579,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 179,
																	"src": "9033:24:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 584,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9033:40:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 585,
															"nodeType": "RevertStatement",
															"src": "9026:47:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 549,
										"nodeType": "StructuredDocumentation",
										"src": "7879:486:4",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 589,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "8379:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8406:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "8399:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 551,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 550,
														"name": "IERC20",
														"nameLocations": [
															"8399:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "8399:6:4"
													},
													"referencedDeclaration": 167,
													"src": "8399:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8426:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "8413:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 553,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8413:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8398:33:4"
									},
									"returnParameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8440:0:4"
									},
									"scope": 631,
									"src": "8370:720:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 629,
										"nodeType": "Block",
										"src": "9681:391:4",
										"statements": [
											{
												"assignments": [
													601
												],
												"declarations": [
													{
														"constant": false,
														"id": 601,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9696:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 629,
														"src": "9691:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 600,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9691:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 602,
												"nodeType": "VariableDeclarationStatement",
												"src": "9691:12:4"
											},
											{
												"assignments": [
													604
												],
												"declarations": [
													{
														"constant": false,
														"id": 604,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9721:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 629,
														"src": "9713:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 603,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9713:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 605,
												"nodeType": "VariableDeclarationStatement",
												"src": "9713:18:4"
											},
											{
												"assignments": [
													607
												],
												"declarations": [
													{
														"constant": false,
														"id": 607,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9749:11:4",
														"nodeType": "VariableDeclaration",
														"scope": 629,
														"src": "9741:19:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 606,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9741:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 608,
												"nodeType": "VariableDeclarationStatement",
												"src": "9741:19:4"
											},
											{
												"AST": {
													"nativeSrc": "9795:174:4",
													"nodeType": "YulBlock",
													"src": "9795:174:4",
													"statements": [
														{
															"nativeSrc": "9809:71:4",
															"nodeType": "YulAssignment",
															"src": "9809:71:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9825:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "9825:3:4"
																		},
																		"nativeSrc": "9825:5:4",
																		"nodeType": "YulFunctionCall",
																		"src": "9825:5:4"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9832:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "9832:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9839:1:4",
																		"nodeType": "YulLiteral",
																		"src": "9839:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9846:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "9846:4:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9852:4:4",
																				"nodeType": "YulLiteral",
																				"src": "9852:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9842:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "9842:3:4"
																		},
																		"nativeSrc": "9842:15:4",
																		"nodeType": "YulFunctionCall",
																		"src": "9842:15:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9865:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "9865:4:4"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9859:5:4",
																			"nodeType": "YulIdentifier",
																			"src": "9859:5:4"
																		},
																		"nativeSrc": "9859:11:4",
																		"nodeType": "YulFunctionCall",
																		"src": "9859:11:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9872:1:4",
																		"nodeType": "YulLiteral",
																		"src": "9872:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9875:4:4",
																		"nodeType": "YulLiteral",
																		"src": "9875:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9820:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "9820:4:4"
																},
																"nativeSrc": "9820:60:4",
																"nodeType": "YulFunctionCall",
																"src": "9820:60:4"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9809:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "9809:7:4"
																}
															]
														},
														{
															"nativeSrc": "9893:30:4",
															"nodeType": "YulAssignment",
															"src": "9893:30:4",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9907:14:4",
																	"nodeType": "YulIdentifier",
																	"src": "9907:14:4"
																},
																"nativeSrc": "9907:16:4",
																"nodeType": "YulFunctionCall",
																"src": "9907:16:4"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9893:10:4",
																	"nodeType": "YulIdentifier",
																	"src": "9893:10:4"
																}
															]
														},
														{
															"nativeSrc": "9936:23:4",
															"nodeType": "YulAssignment",
															"src": "9936:23:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9957:1:4",
																		"nodeType": "YulLiteral",
																		"src": "9957:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9951:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "9951:5:4"
																},
																"nativeSrc": "9951:8:4",
																"nodeType": "YulFunctionCall",
																"src": "9951:8:4"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9936:11:4",
																	"nodeType": "YulIdentifier",
																	"src": "9936:11:4"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 595,
														"isOffset": false,
														"isSlot": false,
														"src": "9846:4:4",
														"valueSize": 1
													},
													{
														"declaration": 595,
														"isOffset": false,
														"isSlot": false,
														"src": "9865:4:4",
														"valueSize": 1
													},
													{
														"declaration": 604,
														"isOffset": false,
														"isSlot": false,
														"src": "9893:10:4",
														"valueSize": 1
													},
													{
														"declaration": 607,
														"isOffset": false,
														"isSlot": false,
														"src": "9936:11:4",
														"valueSize": 1
													},
													{
														"declaration": 601,
														"isOffset": false,
														"isSlot": false,
														"src": "9809:7:4",
														"valueSize": 1
													},
													{
														"declaration": 593,
														"isOffset": false,
														"isSlot": false,
														"src": "9832:5:4",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 609,
												"nodeType": "InlineAssembly",
												"src": "9770:199:4"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 610,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 601,
														"src": "9985:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 613,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 611,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 604,
																		"src": "9997:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 612,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10011:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9997:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 624,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 622,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 607,
																		"src": "10048:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 623,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10063:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "10048:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9997:67:4",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 621,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 616,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 593,
																						"src": "10023:5:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$167",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$167",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 615,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "10015:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 614,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "10015:7:4",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 617,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10015:14:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 618,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10030:4:4",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "10015:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10035:6:4",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "10015:26:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 620,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10044:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "10015:30:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 626,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9996:69:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9985:80:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 599,
												"id": 628,
												"nodeType": "Return",
												"src": "9978:87:4"
											}
										]
									},
									"documentation": {
										"id": 590,
										"nodeType": "StructuredDocumentation",
										"src": "9096:491:4",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 630,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "9601:23:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9632:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "9625:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 592,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 591,
														"name": "IERC20",
														"nameLocations": [
															"9625:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "9625:6:4"
													},
													"referencedDeclaration": 167,
													"src": "9625:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9652:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "9639:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 594,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9639:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9624:33:4"
									},
									"returnParameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "9675:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 597,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9675:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9674:6:4"
									},
									"scope": 631,
									"src": "9592:480:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 632,
							"src": "698:9376:4",
							"usedErrors": [
								179,
								188
							],
							"usedEvents": []
						}
					],
					"src": "115:9960:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							643
						]
					},
					"id": 644,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 633,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 634,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:5",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 643,
							"linearizedBaseContracts": [
								643
							],
							"name": "IERC165",
							"nameLocation": "432:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 635,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:5",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 642,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "818:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 636,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:5"
									},
									"returnParameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "861:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 639,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:5"
									},
									"scope": 643,
									"src": "791:76:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 644,
							"src": "422:447:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:5"
				},
				"id": 5
			},
			"contracts/1_Storage.sol": {
				"ast": {
					"absolutePath": "contracts/1_Storage.sol",
					"exportedSymbols": {
						"IERC1363": [
							81
						],
						"IERC20": [
							167
						],
						"SafeERC20": [
							631
						],
						"SimpleSwap": [
							1494
						]
					},
					"id": 1495,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 645,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".2",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 646,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1495,
							"sourceUnit": 168,
							"src": "70:56:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 647,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1495,
							"sourceUnit": 632,
							"src": "127:65:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SimpleSwap",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 648,
								"nodeType": "StructuredDocumentation",
								"src": "194:349:6",
								"text": "@custom:dev-run-script ./scripts/deploy_with_ethers.ts\n @title SimpleSwap - A minimal Uniswap-like DEX for ERC-20 tokens\n @author Valentino Salguero\n @notice This contract allows users to add/remove liquidity, swap tokens, fetch price and calculate output amounts.\n @dev Inspired by Uniswap, but simplified for educational purposes."
							},
							"fullyImplemented": true,
							"id": 1494,
							"linearizedBaseContracts": [
								1494
							],
							"name": "SimpleSwap",
							"nameLocation": "552:10:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 652,
									"libraryName": {
										"id": 649,
										"name": "SafeERC20",
										"nameLocations": [
											"575:9:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 631,
										"src": "575:9:6"
									},
									"nodeType": "UsingForDirective",
									"src": "569:27:6",
									"typeName": {
										"id": 651,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 650,
											"name": "IERC20",
											"nameLocations": [
												"589:6:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 167,
											"src": "589:6:6"
										},
										"referencedDeclaration": 167,
										"src": "589:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$167",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"canonicalName": "SimpleSwap.Reserve",
									"documentation": {
										"id": 653,
										"nodeType": "StructuredDocumentation",
										"src": "602:52:6",
										"text": "@dev Stores the reserves of two tokens in a pair"
									},
									"id": 658,
									"members": [
										{
											"constant": false,
											"id": 655,
											"mutability": "mutable",
											"name": "reserveA",
											"nameLocation": "692:8:6",
											"nodeType": "VariableDeclaration",
											"scope": 658,
											"src": "684:16:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint112",
												"typeString": "uint112"
											},
											"typeName": {
												"id": 654,
												"name": "uint112",
												"nodeType": "ElementaryTypeName",
												"src": "684:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 657,
											"mutability": "mutable",
											"name": "reserveB",
											"nameLocation": "718:8:6",
											"nodeType": "VariableDeclaration",
											"scope": 658,
											"src": "710:16:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint112",
												"typeString": "uint112"
											},
											"typeName": {
												"id": 656,
												"name": "uint112",
												"nodeType": "ElementaryTypeName",
												"src": "710:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Reserve",
									"nameLocation": "666:7:6",
									"nodeType": "StructDefinition",
									"scope": 1494,
									"src": "659:74:6",
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 659,
										"nodeType": "StructuredDocumentation",
										"src": "739:58:6",
										"text": "@dev Maps the hash of a token pair to its reserve data"
									},
									"functionSelector": "00bbf1e4",
									"id": 664,
									"mutability": "mutable",
									"name": "reserves",
									"nameLocation": "837:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 1494,
									"src": "802:43:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Reserve_$658_storage_$",
										"typeString": "mapping(bytes32 => struct SimpleSwap.Reserve)"
									},
									"typeName": {
										"id": 663,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 660,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "810:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "802:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Reserve_$658_storage_$",
											"typeString": "mapping(bytes32 => struct SimpleSwap.Reserve)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 662,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 661,
												"name": "Reserve",
												"nameLocations": [
													"821:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 658,
												"src": "821:7:6"
											},
											"referencedDeclaration": 658,
											"src": "821:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Reserve_$658_storage_ptr",
												"typeString": "struct SimpleSwap.Reserve"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 665,
										"nodeType": "StructuredDocumentation",
										"src": "852:62:6",
										"text": "@dev Maps the pair hash to the total liquidity of the pool"
									},
									"functionSelector": "54b7a8f7",
									"id": 669,
									"mutability": "mutable",
									"name": "totalLiquidity",
									"nameLocation": "951:14:6",
									"nodeType": "VariableDeclaration",
									"scope": 1494,
									"src": "919:46:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
										"typeString": "mapping(bytes32 => uint256)"
									},
									"typeName": {
										"id": 668,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 666,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "927:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "919:24:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
											"typeString": "mapping(bytes32 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 667,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "938:4:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 670,
										"nodeType": "StructuredDocumentation",
										"src": "972:59:6",
										"text": "@dev Tracks each user's liquidity share in a given pair"
									},
									"functionSelector": "bb521a30",
									"id": 676,
									"mutability": "mutable",
									"name": "liquidityBalance",
									"nameLocation": "1088:16:6",
									"nodeType": "VariableDeclaration",
									"scope": 1494,
									"src": "1036:68:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(bytes32 => mapping(address => uint256))"
									},
									"typeName": {
										"id": 675,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 671,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "1044:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "1036:44:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(bytes32 => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 674,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 672,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1063:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1055:24:6",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 673,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1074:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 756,
										"nodeType": "Block",
										"src": "2081:863:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 706,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 703,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2099:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 704,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2105:9:6",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "2099:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 705,
																"name": "deadline",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "2118:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2099:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45787069726564",
															"id": 707,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2128:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f183c8b0f89612f6f096bf1f0017061404d2019bd0580f7b18bddb8dcc0d7a13",
																"typeString": "literal_string \"Expired\""
															},
															"value": "Expired"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f183c8b0f89612f6f096bf1f0017061404d2019bd0580f7b18bddb8dcc0d7a13",
																"typeString": "literal_string \"Expired\""
															}
														],
														"id": 702,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2091:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2091:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 709,
												"nodeType": "ExpressionStatement",
												"src": "2091:47:6"
											},
											{
												"assignments": [
													711
												],
												"declarations": [
													{
														"constant": false,
														"id": 711,
														"mutability": "mutable",
														"name": "pairHash",
														"nameLocation": "2157:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 756,
														"src": "2149:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 710,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2149:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 716,
												"initialValue": {
													"arguments": [
														{
															"id": 713,
															"name": "tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "2181:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 714,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 681,
															"src": "2189:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 712,
														"name": "_getPairHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1462,
														"src": "2168:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$returns$_t_bytes32_$",
															"typeString": "function (address,address) pure returns (bytes32)"
														}
													},
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2168:28:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2149:47:6"
											},
											{
												"assignments": [
													719
												],
												"declarations": [
													{
														"constant": false,
														"id": 719,
														"mutability": "mutable",
														"name": "res",
														"nameLocation": "2222:3:6",
														"nodeType": "VariableDeclaration",
														"scope": 756,
														"src": "2206:19:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Reserve_$658_storage_ptr",
															"typeString": "struct SimpleSwap.Reserve"
														},
														"typeName": {
															"id": 718,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 717,
																"name": "Reserve",
																"nameLocations": [
																	"2206:7:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 658,
																"src": "2206:7:6"
															},
															"referencedDeclaration": 658,
															"src": "2206:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Reserve_$658_storage_ptr",
																"typeString": "struct SimpleSwap.Reserve"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 723,
												"initialValue": {
													"baseExpression": {
														"id": 720,
														"name": "reserves",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 664,
														"src": "2228:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Reserve_$658_storage_$",
															"typeString": "mapping(bytes32 => struct SimpleSwap.Reserve storage ref)"
														}
													},
													"id": 722,
													"indexExpression": {
														"id": 721,
														"name": "pairHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 711,
														"src": "2237:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2228:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Reserve_$658_storage",
														"typeString": "struct SimpleSwap.Reserve storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2206:40:6"
											},
											{
												"expression": {
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 724,
																"name": "amountA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 696,
																"src": "2397:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 725,
																"name": "amountB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 698,
																"src": "2406:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 726,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "2396:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 728,
																	"name": "res",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 719,
																	"src": "2457:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Reserve_$658_storage_ptr",
																		"typeString": "struct SimpleSwap.Reserve storage pointer"
																	}
																},
																"id": 729,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2461:8:6",
																"memberName": "reserveA",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 655,
																"src": "2457:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint112",
																	"typeString": "uint112"
																}
															},
															{
																"expression": {
																	"id": 730,
																	"name": "res",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 719,
																	"src": "2483:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Reserve_$658_storage_ptr",
																		"typeString": "struct SimpleSwap.Reserve storage pointer"
																	}
																},
																"id": 731,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2487:8:6",
																"memberName": "reserveB",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 657,
																"src": "2483:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint112",
																	"typeString": "uint112"
																}
															},
															{
																"id": 732,
																"name": "amountADesired",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 683,
																"src": "2509:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 733,
																"name": "amountBDesired",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 685,
																"src": "2537:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 734,
																"name": "amountAMin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 687,
																"src": "2565:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 735,
																"name": "amountBMin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 689,
																"src": "2589:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint112",
																	"typeString": "uint112"
																},
																{
																	"typeIdentifier": "t_uint112",
																	"typeString": "uint112"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 727,
															"name": "_calculateLiquidityAmounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1190,
															"src": "2417:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint112_$_t_uint112_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
																"typeString": "function (uint112,uint112,uint256,uint256,uint256,uint256) pure returns (uint256,uint256)"
															}
														},
														"id": 736,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2417:192:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"src": "2396:213:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 738,
												"nodeType": "ExpressionStatement",
												"src": "2396:213:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 740,
															"name": "tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "2685:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 741,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 681,
															"src": "2693:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 742,
															"name": "amountA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 696,
															"src": "2701:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 743,
															"name": "amountB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 698,
															"src": "2710:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 739,
														"name": "_performAddLiquidityTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1229,
														"src": "2655:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2655:63:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 745,
												"nodeType": "ExpressionStatement",
												"src": "2655:63:6"
											},
											{
												"expression": {
													"id": 754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 746,
														"name": "liquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "2857:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 748,
																"name": "pairHash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 711,
																"src": "2901:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 749,
																"name": "amountA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 696,
																"src": "2911:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 750,
																"name": "amountB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 698,
																"src": "2920:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 751,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 691,
																"src": "2929:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 752,
																"name": "res",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 719,
																"src": "2933:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Reserve_$658_storage_ptr",
																	"typeString": "struct SimpleSwap.Reserve storage pointer"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_struct$_Reserve_$658_storage_ptr",
																	"typeString": "struct SimpleSwap.Reserve storage pointer"
																}
															],
															"id": 747,
															"name": "_mintLiquidityAndUpdateReserves",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1285,
															"src": "2869:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$_t_address_$_t_struct$_Reserve_$658_storage_ptr_$returns$_t_uint256_$",
																"typeString": "function (bytes32,uint256,uint256,address,struct SimpleSwap.Reserve storage pointer) returns (uint256)"
															}
														},
														"id": 753,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2869:68:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2857:80:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 755,
												"nodeType": "ExpressionStatement",
												"src": "2857:80:6"
											}
										]
									},
									"documentation": {
										"id": 677,
										"nodeType": "StructuredDocumentation",
										"src": "1111:676:6",
										"text": "@notice Adds liquidity to a token pair pool\n @param tokenA Address of token A\n @param tokenB Address of token B\n @param amountADesired Desired amount of token A to add\n @param amountBDesired Desired amount of token B to add\n @param amountAMin Minimum acceptable amount of token A\n @param amountBMin Minimum acceptable amount of token B\n @param to Recipient of the liquidity tokens\n @param deadline Timestamp after which the transaction is invalid\n @return amountA Actual amount of token A added\n @return amountB Actual amount of token B added\n @return liquidity Amount of liquidity tokens minted"
									},
									"functionSelector": "e8e33700",
									"id": 757,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nameLocation": "1801:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "1831:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "1823:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1823:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "1855:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "1847:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1847:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "amountADesired",
												"nameLocation": "1876:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "1871:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 682,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1871:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "amountBDesired",
												"nameLocation": "1905:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "1900:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 684,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1900:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "1934:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "1929:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 686,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1929:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "1959:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "1954:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 688,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1954:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1987:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "1979:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 690,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1979:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2004:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "1999:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 692,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1999:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1813:205:6"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "2042:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "2037:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 695,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2037:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "2056:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "2051:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 697,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2051:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "2070:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "2065:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 699,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2065:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2036:44:6"
									},
									"scope": 1494,
									"src": "1792:1152:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 892,
										"nodeType": "Block",
										"src": "3754:867:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 783,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 780,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "3772:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 781,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3778:9:6",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "3772:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 782,
																"name": "deadline",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 772,
																"src": "3791:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3772:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45787069726564",
															"id": 784,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3801:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f183c8b0f89612f6f096bf1f0017061404d2019bd0580f7b18bddb8dcc0d7a13",
																"typeString": "literal_string \"Expired\""
															},
															"value": "Expired"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f183c8b0f89612f6f096bf1f0017061404d2019bd0580f7b18bddb8dcc0d7a13",
																"typeString": "literal_string \"Expired\""
															}
														],
														"id": 779,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3764:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3764:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 786,
												"nodeType": "ExpressionStatement",
												"src": "3764:47:6"
											},
											{
												"assignments": [
													788
												],
												"declarations": [
													{
														"constant": false,
														"id": 788,
														"mutability": "mutable",
														"name": "pairHash",
														"nameLocation": "3830:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 892,
														"src": "3822:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 787,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3822:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 793,
												"initialValue": {
													"arguments": [
														{
															"id": 790,
															"name": "tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 760,
															"src": "3854:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 791,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 762,
															"src": "3862:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 789,
														"name": "_getPairHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1462,
														"src": "3841:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$returns$_t_bytes32_$",
															"typeString": "function (address,address) pure returns (bytes32)"
														}
													},
													"id": 792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3841:28:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3822:47:6"
											},
											{
												"assignments": [
													796
												],
												"declarations": [
													{
														"constant": false,
														"id": 796,
														"mutability": "mutable",
														"name": "res",
														"nameLocation": "3895:3:6",
														"nodeType": "VariableDeclaration",
														"scope": 892,
														"src": "3879:19:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Reserve_$658_storage_ptr",
															"typeString": "struct SimpleSwap.Reserve"
														},
														"typeName": {
															"id": 795,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 794,
																"name": "Reserve",
																"nameLocations": [
																	"3879:7:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 658,
																"src": "3879:7:6"
															},
															"referencedDeclaration": 658,
															"src": "3879:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Reserve_$658_storage_ptr",
																"typeString": "struct SimpleSwap.Reserve"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 800,
												"initialValue": {
													"baseExpression": {
														"id": 797,
														"name": "reserves",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 664,
														"src": "3901:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Reserve_$658_storage_$",
															"typeString": "mapping(bytes32 => struct SimpleSwap.Reserve storage ref)"
														}
													},
													"id": 799,
													"indexExpression": {
														"id": 798,
														"name": "pairHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 788,
														"src": "3910:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3901:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Reserve_$658_storage",
														"typeString": "struct SimpleSwap.Reserve storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3879:40:6"
											},
											{
												"assignments": [
													802
												],
												"declarations": [
													{
														"constant": false,
														"id": 802,
														"mutability": "mutable",
														"name": "total",
														"nameLocation": "3934:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 892,
														"src": "3929:10:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 801,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3929:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 806,
												"initialValue": {
													"baseExpression": {
														"id": 803,
														"name": "totalLiquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 669,
														"src": "3942:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
															"typeString": "mapping(bytes32 => uint256)"
														}
													},
													"id": 805,
													"indexExpression": {
														"id": 804,
														"name": "pairHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 788,
														"src": "3957:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3942:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3929:37:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 810,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 808,
																"name": "total",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 802,
																"src": "3984:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 809,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3992:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3984:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f206c6971756964697479",
															"id": 811,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3995:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_379a432f00aa43993bfbf4e01492a8eab5138dcd2e395864ede728644390fc31",
																"typeString": "literal_string \"No liquidity\""
															},
															"value": "No liquidity"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_379a432f00aa43993bfbf4e01492a8eab5138dcd2e395864ede728644390fc31",
																"typeString": "literal_string \"No liquidity\""
															}
														],
														"id": 807,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3976:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3976:34:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 813,
												"nodeType": "ExpressionStatement",
												"src": "3976:34:6"
											},
											{
												"expression": {
													"id": 821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 814,
														"name": "amountA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 775,
														"src": "4067:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 820,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 818,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 815,
																	"name": "res",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 796,
																	"src": "4077:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Reserve_$658_storage_ptr",
																		"typeString": "struct SimpleSwap.Reserve storage pointer"
																	}
																},
																"id": 816,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4081:8:6",
																"memberName": "reserveA",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 655,
																"src": "4077:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint112",
																	"typeString": "uint112"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 817,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 764,
																"src": "4092:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4077:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 819,
															"name": "total",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 802,
															"src": "4104:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4077:32:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4067:42:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 822,
												"nodeType": "ExpressionStatement",
												"src": "4067:42:6"
											},
											{
												"expression": {
													"id": 830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 823,
														"name": "amountB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 777,
														"src": "4119:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 829,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 827,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 824,
																	"name": "res",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 796,
																	"src": "4129:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Reserve_$658_storage_ptr",
																		"typeString": "struct SimpleSwap.Reserve storage pointer"
																	}
																},
																"id": 825,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4133:8:6",
																"memberName": "reserveB",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 657,
																"src": "4129:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint112",
																	"typeString": "uint112"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 826,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 764,
																"src": "4144:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4129:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 828,
															"name": "total",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 802,
															"src": "4156:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4129:32:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4119:42:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 831,
												"nodeType": "ExpressionStatement",
												"src": "4119:42:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 839,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 835,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 833,
																	"name": "amountA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 775,
																	"src": "4180:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 834,
																	"name": "amountAMin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 766,
																	"src": "4191:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4180:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 838,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 836,
																	"name": "amountB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 777,
																	"src": "4205:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 837,
																	"name": "amountBMin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 768,
																	"src": "4216:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4205:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4180:46:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536c697070616765",
															"id": 840,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4228:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fb87c09e63b5ee5d76fa5ada5f7c2fd9de8980c2964f73a791eaef9c4602f114",
																"typeString": "literal_string \"Slippage\""
															},
															"value": "Slippage"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fb87c09e63b5ee5d76fa5ada5f7c2fd9de8980c2964f73a791eaef9c4602f114",
																"typeString": "literal_string \"Slippage\""
															}
														],
														"id": 832,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4172:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4172:67:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 842,
												"nodeType": "ExpressionStatement",
												"src": "4172:67:6"
											},
											{
												"expression": {
													"id": 850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 843,
																"name": "liquidityBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 676,
																"src": "4295:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(bytes32 => mapping(address => uint256))"
																}
															},
															"id": 847,
															"indexExpression": {
																"id": 844,
																"name": "pairHash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 788,
																"src": "4312:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4295:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 848,
														"indexExpression": {
															"expression": {
																"id": 845,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4322:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 846,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4326:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4322:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4295:38:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 849,
														"name": "liquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 764,
														"src": "4337:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4295:51:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 851,
												"nodeType": "ExpressionStatement",
												"src": "4295:51:6"
											},
											{
												"expression": {
													"id": 856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 852,
															"name": "totalLiquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "4356:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																"typeString": "mapping(bytes32 => uint256)"
															}
														},
														"id": 854,
														"indexExpression": {
															"id": 853,
															"name": "pairHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 788,
															"src": "4371:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4356:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 855,
														"name": "liquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 764,
														"src": "4384:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4356:37:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 857,
												"nodeType": "ExpressionStatement",
												"src": "4356:37:6"
											},
											{
												"expression": {
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 858,
															"name": "res",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "4403:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Reserve_$658_storage_ptr",
																"typeString": "struct SimpleSwap.Reserve storage pointer"
															}
														},
														"id": 860,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4407:8:6",
														"memberName": "reserveA",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 655,
														"src": "4403:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 863,
																"name": "amountA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 775,
																"src": "4427:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 862,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4419:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint112_$",
																"typeString": "type(uint112)"
															},
															"typeName": {
																"id": 861,
																"name": "uint112",
																"nodeType": "ElementaryTypeName",
																"src": "4419:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 864,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4419:16:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"src": "4403:32:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"id": 866,
												"nodeType": "ExpressionStatement",
												"src": "4403:32:6"
											},
											{
												"expression": {
													"id": 874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 867,
															"name": "res",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "4445:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Reserve_$658_storage_ptr",
																"typeString": "struct SimpleSwap.Reserve storage pointer"
															}
														},
														"id": 869,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4449:8:6",
														"memberName": "reserveB",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 657,
														"src": "4445:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 872,
																"name": "amountB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 777,
																"src": "4469:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 871,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4461:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint112_$",
																"typeString": "type(uint112)"
															},
															"typeName": {
																"id": 870,
																"name": "uint112",
																"nodeType": "ElementaryTypeName",
																"src": "4461:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 873,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4461:16:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"src": "4445:32:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"id": 875,
												"nodeType": "ExpressionStatement",
												"src": "4445:32:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 880,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "4552:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 881,
															"name": "amountA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 775,
															"src": "4556:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 877,
																	"name": "tokenA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 760,
																	"src": "4531:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 876,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 167,
																"src": "4524:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$167_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 878,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4524:14:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														"id": 879,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4539:12:6",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 212,
														"src": "4524:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$167_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4524:40:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 883,
												"nodeType": "ExpressionStatement",
												"src": "4524:40:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 888,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "4602:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 889,
															"name": "amountB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 777,
															"src": "4606:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 885,
																	"name": "tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 762,
																	"src": "4581:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 884,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 167,
																"src": "4574:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$167_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 886,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4574:14:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														"id": 887,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4589:12:6",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 212,
														"src": "4574:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$167_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4574:40:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 891,
												"nodeType": "ExpressionStatement",
												"src": "4574:40:6"
											}
										]
									},
									"documentation": {
										"id": 758,
										"nodeType": "StructuredDocumentation",
										"src": "2950:557:6",
										"text": "@notice Removes liquidity and returns tokens to the user\n @param tokenA Address of token A\n @param tokenB Address of token B\n @param liquidity Amount of liquidity tokens to burn\n @param amountAMin Minimum acceptable amount of token A\n @param amountBMin Minimum acceptable amount of token B\n @param to Address to receive withdrawn tokens\n @param deadline Timestamp after which the transaction is invalid\n @return amountA Amount of token A received\n @return amountB Amount of token B received"
									},
									"functionSelector": "baa2abde",
									"id": 893,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidity",
									"nameLocation": "3521:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "3554:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "3546:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 759,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3546:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "3578:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "3570:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 761,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "3599:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "3594:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 763,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3594:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "3623:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "3618:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 765,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3618:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "3648:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "3643:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 767,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3643:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3676:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "3668:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3668:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3693:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "3688:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 771,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3688:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3536:171:6"
									},
									"returnParameters": {
										"id": 778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 775,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "3731:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "3726:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 774,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3726:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 777,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "3745:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "3740:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 776,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3740:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3725:28:6"
									},
									"scope": 1494,
									"src": "3512:1109:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 989,
										"nodeType": "Block",
										"src": "5266:730:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 915,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 912,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "5284:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 913,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5290:9:6",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "5284:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 914,
																"name": "deadline",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 905,
																"src": "5303:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5284:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45787069726564",
															"id": 916,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5313:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f183c8b0f89612f6f096bf1f0017061404d2019bd0580f7b18bddb8dcc0d7a13",
																"typeString": "literal_string \"Expired\""
															},
															"value": "Expired"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f183c8b0f89612f6f096bf1f0017061404d2019bd0580f7b18bddb8dcc0d7a13",
																"typeString": "literal_string \"Expired\""
															}
														],
														"id": 911,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5276:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5276:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 918,
												"nodeType": "ExpressionStatement",
												"src": "5276:47:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 923,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 920,
																	"name": "path",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 901,
																	"src": "5341:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																		"typeString": "address[] calldata"
																	}
																},
																"id": 921,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5346:6:6",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "5341:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "32",
																"id": 922,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5356:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "5341:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c7920322d746f6b656e207061746820737570706f72746564",
															"id": 924,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5359:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1999f60f5526a13cb17eac3c04d030e47d1c41d4e55af8ccb43358373aec7eb8",
																"typeString": "literal_string \"Only 2-token path supported\""
															},
															"value": "Only 2-token path supported"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1999f60f5526a13cb17eac3c04d030e47d1c41d4e55af8ccb43358373aec7eb8",
																"typeString": "literal_string \"Only 2-token path supported\""
															}
														],
														"id": 919,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5333:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5333:56:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 926,
												"nodeType": "ExpressionStatement",
												"src": "5333:56:6"
											},
											{
												"assignments": [
													928
												],
												"declarations": [
													{
														"constant": false,
														"id": 928,
														"mutability": "mutable",
														"name": "tokenIn",
														"nameLocation": "5408:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 989,
														"src": "5400:15:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 927,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5400:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 932,
												"initialValue": {
													"baseExpression": {
														"id": 929,
														"name": "path",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 901,
														"src": "5418:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
															"typeString": "address[] calldata"
														}
													},
													"id": 931,
													"indexExpression": {
														"hexValue": "30",
														"id": 930,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5423:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5418:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5400:25:6"
											},
											{
												"assignments": [
													934
												],
												"declarations": [
													{
														"constant": false,
														"id": 934,
														"mutability": "mutable",
														"name": "tokenOut",
														"nameLocation": "5443:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 989,
														"src": "5435:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 933,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5435:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 938,
												"initialValue": {
													"baseExpression": {
														"id": 935,
														"name": "path",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 901,
														"src": "5454:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
															"typeString": "address[] calldata"
														}
													},
													"id": 937,
													"indexExpression": {
														"hexValue": "31",
														"id": 936,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5459:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5454:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5435:26:6"
											},
											{
												"assignments": [
													940
												],
												"declarations": [
													{
														"constant": false,
														"id": 940,
														"mutability": "mutable",
														"name": "amountOut",
														"nameLocation": "5516:9:6",
														"nodeType": "VariableDeclaration",
														"scope": 989,
														"src": "5511:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 939,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5511:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 946,
												"initialValue": {
													"arguments": [
														{
															"id": 942,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 896,
															"src": "5549:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 943,
															"name": "tokenIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 928,
															"src": "5559:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 944,
															"name": "tokenOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 934,
															"src": "5568:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 941,
														"name": "_calculateSwapOutput",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1328,
														"src": "5528:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (uint256,address,address) view returns (uint256)"
														}
													},
													"id": 945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5528:49:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5511:66:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 950,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 948,
																"name": "amountOut",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 940,
																"src": "5595:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 949,
																"name": "amountOutMin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 898,
																"src": "5608:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5595:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74206f7574707574",
															"id": 951,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5622:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ffebb6789a62ed60836fc38e566e8cbcff27ebb3acadee53ee5da9825f1b14e1",
																"typeString": "literal_string \"Insufficient output\""
															},
															"value": "Insufficient output"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ffebb6789a62ed60836fc38e566e8cbcff27ebb3acadee53ee5da9825f1b14e1",
																"typeString": "literal_string \"Insufficient output\""
															}
														],
														"id": 947,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5587:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5587:57:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 953,
												"nodeType": "ExpressionStatement",
												"src": "5587:57:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 955,
															"name": "tokenIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 928,
															"src": "5711:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 956,
															"name": "tokenOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 934,
															"src": "5720:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 957,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 896,
															"src": "5730:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 958,
															"name": "amountOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 940,
															"src": "5740:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 959,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "5751:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 954,
														"name": "_performSwapTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1364,
														"src": "5689:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,address)"
														}
													},
													"id": 960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5689:65:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 961,
												"nodeType": "ExpressionStatement",
												"src": "5689:65:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 963,
															"name": "tokenIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 928,
															"src": "5817:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 964,
															"name": "tokenOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 934,
															"src": "5826:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 965,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 896,
															"src": "5836:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 966,
															"name": "amountOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 940,
															"src": "5846:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 962,
														"name": "_updateReservesAfterSwap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1433,
														"src": "5792:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5792:64:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 968,
												"nodeType": "ExpressionStatement",
												"src": "5792:64:6"
											},
											{
												"expression": {
													"id": 975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 969,
														"name": "amounts",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 909,
														"src": "5903:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "32",
																"id": 973,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5924:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																}
															],
															"id": 972,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "5913:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (uint256[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 970,
																	"name": "uint",
																	"nodeType": "ElementaryTypeName",
																	"src": "5917:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 971,
																"nodeType": "ArrayTypeName",
																"src": "5917:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																	"typeString": "uint256[]"
																}
															}
														},
														"id": 974,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5913:13:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"src": "5903:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"id": 976,
												"nodeType": "ExpressionStatement",
												"src": "5903:23:6"
											},
											{
												"expression": {
													"id": 981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 977,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "5936:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 979,
														"indexExpression": {
															"hexValue": "30",
															"id": 978,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5944:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5936:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 980,
														"name": "amountIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 896,
														"src": "5949:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5936:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 982,
												"nodeType": "ExpressionStatement",
												"src": "5936:21:6"
											},
											{
												"expression": {
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 983,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "5967:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 985,
														"indexExpression": {
															"hexValue": "31",
															"id": 984,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5975:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5967:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 986,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 940,
														"src": "5980:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5967:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 988,
												"nodeType": "ExpressionStatement",
												"src": "5967:22:6"
											}
										]
									},
									"documentation": {
										"id": 894,
										"nodeType": "StructuredDocumentation",
										"src": "4627:427:6",
										"text": "@notice Swaps exact amountIn of tokenIn for tokenOut\n @param amountIn Exact amount of input tokens to swap\n @param amountOutMin Minimum amount of output tokens required\n @param path Array with [tokenIn, tokenOut]\n @param to Address to receive output tokens\n @param deadline Timestamp after which the transaction is invalid\n @return amounts Array containing input and output amounts"
									},
									"functionSelector": "38ed1739",
									"id": 990,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokens",
									"nameLocation": "5068:24:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 896,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "5107:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "5102:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 895,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5102:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "5130:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "5125:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 897,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5125:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "5171:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "5152:23:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 899,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "5152:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 900,
													"nodeType": "ArrayTypeName",
													"src": "5152:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5193:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "5185:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 902,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5185:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "5210:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "5205:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 904,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5205:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5092:132:6"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "5257:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "5243:21:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 907,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "5243:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 908,
													"nodeType": "ArrayTypeName",
													"src": "5243:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5242:23:6"
									},
									"scope": 1494,
									"src": "5059:937:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1044,
										"nodeType": "Block",
										"src": "6292:304:6",
										"statements": [
											{
												"assignments": [
													1001
												],
												"declarations": [
													{
														"constant": false,
														"id": 1001,
														"mutability": "mutable",
														"name": "pairHash",
														"nameLocation": "6310:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 1044,
														"src": "6302:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1000,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "6302:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1006,
												"initialValue": {
													"arguments": [
														{
															"id": 1003,
															"name": "tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 993,
															"src": "6334:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1004,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 995,
															"src": "6342:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1002,
														"name": "_getPairHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1462,
														"src": "6321:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$returns$_t_bytes32_$",
															"typeString": "function (address,address) pure returns (bytes32)"
														}
													},
													"id": 1005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6321:28:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6302:47:6"
											},
											{
												"assignments": [
													1009
												],
												"declarations": [
													{
														"constant": false,
														"id": 1009,
														"mutability": "mutable",
														"name": "res",
														"nameLocation": "6374:3:6",
														"nodeType": "VariableDeclaration",
														"scope": 1044,
														"src": "6359:18:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Reserve_$658_memory_ptr",
															"typeString": "struct SimpleSwap.Reserve"
														},
														"typeName": {
															"id": 1008,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1007,
																"name": "Reserve",
																"nameLocations": [
																	"6359:7:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 658,
																"src": "6359:7:6"
															},
															"referencedDeclaration": 658,
															"src": "6359:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Reserve_$658_storage_ptr",
																"typeString": "struct SimpleSwap.Reserve"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1013,
												"initialValue": {
													"baseExpression": {
														"id": 1010,
														"name": "reserves",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 664,
														"src": "6380:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Reserve_$658_storage_$",
															"typeString": "mapping(bytes32 => struct SimpleSwap.Reserve storage ref)"
														}
													},
													"id": 1012,
													"indexExpression": {
														"id": 1011,
														"name": "pairHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1001,
														"src": "6389:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6380:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Reserve_$658_storage",
														"typeString": "struct SimpleSwap.Reserve storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6359:39:6"
											},
											{
												"assignments": [
													1015,
													1017
												],
												"declarations": [
													{
														"constant": false,
														"id": 1015,
														"mutability": "mutable",
														"name": "reserveA",
														"nameLocation": "6415:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 1044,
														"src": "6410:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1014,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6410:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1017,
														"mutability": "mutable",
														"name": "reserveB",
														"nameLocation": "6430:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 1044,
														"src": "6425:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1016,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6425:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1023,
												"initialValue": {
													"arguments": [
														{
															"id": 1019,
															"name": "tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 993,
															"src": "6461:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1020,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 995,
															"src": "6469:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1021,
															"name": "res",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1009,
															"src": "6477:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Reserve_$658_memory_ptr",
																"typeString": "struct SimpleSwap.Reserve memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_struct$_Reserve_$658_memory_ptr",
																"typeString": "struct SimpleSwap.Reserve memory"
															}
														],
														"id": 1018,
														"name": "_getSortedReserves",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1493,
														"src": "6442:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_struct$_Reserve_$658_memory_ptr_$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function (address,address,struct SimpleSwap.Reserve memory) pure returns (uint256,uint256)"
														}
													},
													"id": 1022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6442:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6409:72:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1031,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1027,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1025,
																	"name": "reserveA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1015,
																	"src": "6499:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1026,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6510:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6499:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1030,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1028,
																	"name": "reserveB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1017,
																	"src": "6515:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1029,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6526:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6515:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "6499:28:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f207265736572766573",
															"id": 1032,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6529:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8d6698763d2d0ff1e31fa7f43b504a63f09c2932b87b9842c093ff74de4d766",
																"typeString": "literal_string \"No reserves\""
															},
															"value": "No reserves"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8d6698763d2d0ff1e31fa7f43b504a63f09c2932b87b9842c093ff74de4d766",
																"typeString": "literal_string \"No reserves\""
															}
														],
														"id": 1024,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6491:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6491:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1034,
												"nodeType": "ExpressionStatement",
												"src": "6491:52:6"
											},
											{
												"expression": {
													"id": 1042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1035,
														"name": "price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 998,
														"src": "6553:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1041,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1038,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1036,
																		"name": "reserveB",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1017,
																		"src": "6562:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "31653138",
																		"id": 1037,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6573:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		},
																		"value": "1e18"
																	},
																	"src": "6562:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1039,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6561:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1040,
															"name": "reserveA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1015,
															"src": "6581:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6561:28:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6553:36:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1043,
												"nodeType": "ExpressionStatement",
												"src": "6553:36:6"
											}
										]
									},
									"documentation": {
										"id": 991,
										"nodeType": "StructuredDocumentation",
										"src": "6002:200:6",
										"text": "@notice Returns the price of tokenB in terms of tokenA\n @param tokenA Address of token A\n @param tokenB Address of token B\n @return price Price as tokenB/tokenA scaled by 1e18"
									},
									"functionSelector": "ac41865a",
									"id": 1045,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPrice",
									"nameLocation": "6216:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "6233:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "6225:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 992,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6225:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "6249:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "6241:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 994,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6241:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6224:32:6"
									},
									"returnParameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "6285:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "6280:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 997,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6280:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6279:12:6"
									},
									"scope": 1494,
									"src": "6207:389:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1098,
										"nodeType": "Block",
										"src": "6985:316:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1068,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1064,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1060,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1058,
																		"name": "amountIn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1048,
																		"src": "7003:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1059,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7014:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "7003:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1063,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1061,
																		"name": "reserveIn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1050,
																		"src": "7019:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1062,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7031:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "7019:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "7003:29:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1067,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1065,
																	"name": "reserveOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1052,
																	"src": "7036:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1066,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7049:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7036:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "7003:47:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964207265736572766573",
															"id": 1069,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7052:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_185a9d5da6de3eebfb2e4ad4adad189f402b098c61f6e8e0c8d2b4a20a1faa2a",
																"typeString": "literal_string \"Invalid reserves\""
															},
															"value": "Invalid reserves"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_185a9d5da6de3eebfb2e4ad4adad189f402b098c61f6e8e0c8d2b4a20a1faa2a",
																"typeString": "literal_string \"Invalid reserves\""
															}
														],
														"id": 1057,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6995:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6995:76:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1071,
												"nodeType": "ExpressionStatement",
												"src": "6995:76:6"
											},
											{
												"assignments": [
													1073
												],
												"declarations": [
													{
														"constant": false,
														"id": 1073,
														"mutability": "mutable",
														"name": "amountInWithFee",
														"nameLocation": "7087:15:6",
														"nodeType": "VariableDeclaration",
														"scope": 1098,
														"src": "7082:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1072,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "7082:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1077,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1074,
														"name": "amountIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1048,
														"src": "7105:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "393937",
														"id": 1075,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7116:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_997_by_1",
															"typeString": "int_const 997"
														},
														"value": "997"
													},
													"src": "7105:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7082:37:6"
											},
											{
												"assignments": [
													1079
												],
												"declarations": [
													{
														"constant": false,
														"id": 1079,
														"mutability": "mutable",
														"name": "numerator",
														"nameLocation": "7146:9:6",
														"nodeType": "VariableDeclaration",
														"scope": 1098,
														"src": "7141:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1078,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "7141:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1083,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1080,
														"name": "amountInWithFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1073,
														"src": "7158:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1081,
														"name": "reserveOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1052,
														"src": "7176:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7158:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7141:45:6"
											},
											{
												"assignments": [
													1085
												],
												"declarations": [
													{
														"constant": false,
														"id": 1085,
														"mutability": "mutable",
														"name": "denominator",
														"nameLocation": "7201:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 1098,
														"src": "7196:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1084,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "7196:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1091,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1088,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1086,
															"name": "reserveIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1050,
															"src": "7215:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "31303030",
															"id": 1087,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7227:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															},
															"value": "1000"
														},
														"src": "7215:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1089,
														"name": "amountInWithFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1073,
														"src": "7234:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7215:34:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7196:53:6"
											},
											{
												"expression": {
													"id": 1096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1092,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1055,
														"src": "7259:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1095,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1093,
															"name": "numerator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1079,
															"src": "7271:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1094,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1085,
															"src": "7283:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7271:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7259:35:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1097,
												"nodeType": "ExpressionStatement",
												"src": "7259:35:6"
											}
										]
									},
									"documentation": {
										"id": 1046,
										"nodeType": "StructuredDocumentation",
										"src": "6602:271:6",
										"text": "@notice Calculates output tokens for a given input using Uniswap formula\n @param amountIn Input amount\n @param reserveIn Reserve of input token\n @param reserveOut Reserve of output token\n @return amountOut Amount of output tokens after fee"
									},
									"functionSelector": "054d50d4",
									"id": 1099,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountOut",
									"nameLocation": "6887:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "6905:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1099,
												"src": "6900:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1047,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6900:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "reserveIn",
												"nameLocation": "6920:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1099,
												"src": "6915:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1049,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6915:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "reserveOut",
												"nameLocation": "6936:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1099,
												"src": "6931:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1051,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6931:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6899:48:6"
									},
									"returnParameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "6974:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1099,
												"src": "6969:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1054,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6969:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6968:16:6"
									},
									"scope": 1494,
									"src": "6878:423:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1189,
										"nodeType": "Block",
										"src": "7733:872:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"id": 1121,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1119,
															"name": "currentReserveA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1102,
															"src": "7747:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1120,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7766:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "7747:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"id": 1124,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1122,
															"name": "currentReserveB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1104,
															"src": "7771:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1123,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7790:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "7771:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "7747:44:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1187,
													"nodeType": "Block",
													"src": "7950:649:6",
													"statements": [
														{
															"assignments": [
																1136
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1136,
																	"mutability": "mutable",
																	"name": "amountBOptimal",
																	"nameLocation": "8016:14:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1187,
																	"src": "8011:19:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1135,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "8011:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1142,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1141,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1139,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1137,
																		"name": "amountADesired",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1106,
																		"src": "8033:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1138,
																		"name": "currentReserveB",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1104,
																		"src": "8050:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint112",
																			"typeString": "uint112"
																		}
																	},
																	"src": "8033:32:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1140,
																	"name": "currentReserveA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1102,
																	"src": "8068:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																},
																"src": "8033:50:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "8011:72:6"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1145,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1143,
																	"name": "amountBOptimal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1136,
																	"src": "8101:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 1144,
																	"name": "amountBDesired",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1108,
																	"src": "8119:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8101:32:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1185,
																"nodeType": "Block",
																"src": "8320:269:6",
																"statements": [
																	{
																		"assignments": [
																			1163
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1163,
																				"mutability": "mutable",
																				"name": "amountAOptimal",
																				"nameLocation": "8343:14:6",
																				"nodeType": "VariableDeclaration",
																				"scope": 1185,
																				"src": "8338:19:6",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1162,
																					"name": "uint",
																					"nodeType": "ElementaryTypeName",
																					"src": "8338:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1169,
																		"initialValue": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1168,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1166,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1164,
																					"name": "amountBDesired",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1108,
																					"src": "8360:14:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 1165,
																					"name": "currentReserveA",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1102,
																					"src": "8377:15:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint112",
																						"typeString": "uint112"
																					}
																				},
																				"src": "8360:32:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 1167,
																				"name": "currentReserveB",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1104,
																				"src": "8395:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint112",
																					"typeString": "uint112"
																				}
																			},
																			"src": "8360:50:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "8338:72:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1173,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1171,
																						"name": "amountAOptimal",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1163,
																						"src": "8436:14:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">=",
																					"rightExpression": {
																						"id": 1172,
																						"name": "amountAMin",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1110,
																						"src": "8454:10:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "8436:28:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "496e73756666696369656e742041",
																					"id": 1174,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8466:16:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_00c0664002c3a7ab9481655483f753aa6ee21854999370a38d90a0549f0cf8f4",
																						"typeString": "literal_string \"Insufficient A\""
																					},
																					"value": "Insufficient A"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_00c0664002c3a7ab9481655483f753aa6ee21854999370a38d90a0549f0cf8f4",
																						"typeString": "literal_string \"Insufficient A\""
																					}
																				],
																				"id": 1170,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "8428:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1175,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8428:55:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1176,
																		"nodeType": "ExpressionStatement",
																		"src": "8428:55:6"
																	},
																	{
																		"expression": {
																			"id": 1183,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"components": [
																					{
																						"id": 1177,
																						"name": "calculatedAmountA",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1115,
																						"src": "8502:17:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"id": 1178,
																						"name": "calculatedAmountB",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1117,
																						"src": "8521:17:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1179,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "TupleExpression",
																				"src": "8501:38:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																					"typeString": "tuple(uint256,uint256)"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"components": [
																					{
																						"id": 1180,
																						"name": "amountAOptimal",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1163,
																						"src": "8543:14:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"id": 1181,
																						"name": "amountBDesired",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1108,
																						"src": "8559:14:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1182,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "8542:32:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																					"typeString": "tuple(uint256,uint256)"
																				}
																			},
																			"src": "8501:73:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1184,
																		"nodeType": "ExpressionStatement",
																		"src": "8501:73:6"
																	}
																]
															},
															"id": 1186,
															"nodeType": "IfStatement",
															"src": "8097:492:6",
															"trueBody": {
																"id": 1161,
																"nodeType": "Block",
																"src": "8135:179:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1149,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1147,
																						"name": "amountBOptimal",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1136,
																						"src": "8161:14:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">=",
																					"rightExpression": {
																						"id": 1148,
																						"name": "amountBMin",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1112,
																						"src": "8179:10:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "8161:28:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "496e73756666696369656e742042",
																					"id": 1150,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8191:16:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_28ee48a047f51c165a70ae36f179330afc265bf4c05f56e1a1f02c2668dcead2",
																						"typeString": "literal_string \"Insufficient B\""
																					},
																					"value": "Insufficient B"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_28ee48a047f51c165a70ae36f179330afc265bf4c05f56e1a1f02c2668dcead2",
																						"typeString": "literal_string \"Insufficient B\""
																					}
																				],
																				"id": 1146,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "8153:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1151,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8153:55:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1152,
																		"nodeType": "ExpressionStatement",
																		"src": "8153:55:6"
																	},
																	{
																		"expression": {
																			"id": 1159,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"components": [
																					{
																						"id": 1153,
																						"name": "calculatedAmountA",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1115,
																						"src": "8227:17:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"id": 1154,
																						"name": "calculatedAmountB",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1117,
																						"src": "8246:17:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1155,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "TupleExpression",
																				"src": "8226:38:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																					"typeString": "tuple(uint256,uint256)"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"components": [
																					{
																						"id": 1156,
																						"name": "amountADesired",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1106,
																						"src": "8268:14:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"id": 1157,
																						"name": "amountBOptimal",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1136,
																						"src": "8284:14:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1158,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "8267:32:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																					"typeString": "tuple(uint256,uint256)"
																				}
																			},
																			"src": "8226:73:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1160,
																		"nodeType": "ExpressionStatement",
																		"src": "8226:73:6"
																	}
																]
															}
														}
													]
												},
												"id": 1188,
												"nodeType": "IfStatement",
												"src": "7743:856:6",
												"trueBody": {
													"id": 1134,
													"nodeType": "Block",
													"src": "7793:151:6",
													"statements": [
														{
															"expression": {
																"id": 1132,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"components": [
																		{
																			"id": 1126,
																			"name": "calculatedAmountA",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1115,
																			"src": "7861:17:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1127,
																			"name": "calculatedAmountB",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1117,
																			"src": "7880:17:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1128,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "TupleExpression",
																	"src": "7860:38:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																		"typeString": "tuple(uint256,uint256)"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"components": [
																		{
																			"id": 1129,
																			"name": "amountADesired",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1106,
																			"src": "7902:14:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1130,
																			"name": "amountBDesired",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1108,
																			"src": "7918:14:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1131,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7901:32:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																		"typeString": "tuple(uint256,uint256)"
																	}
																},
																"src": "7860:73:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1133,
															"nodeType": "ExpressionStatement",
															"src": "7860:73:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1100,
										"nodeType": "StructuredDocumentation",
										"src": "7370:71:6",
										"text": "@dev Calculates the optimal amounts of tokens to add for liquidity."
									},
									"id": 1190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_calculateLiquidityAmounts",
									"nameLocation": "7455:26:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "currentReserveA",
												"nameLocation": "7499:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "7491:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1101,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "7491:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "currentReserveB",
												"nameLocation": "7532:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "7524:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1103,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "7524:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1106,
												"mutability": "mutable",
												"name": "amountADesired",
												"nameLocation": "7562:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "7557:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1105,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7557:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1108,
												"mutability": "mutable",
												"name": "amountBDesired",
												"nameLocation": "7591:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "7586:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1107,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7586:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "7620:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "7615:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1109,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7615:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1112,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "7645:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "7640:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1111,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7640:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7481:180:6"
									},
									"returnParameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "calculatedAmountA",
												"nameLocation": "7690:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "7685:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1114,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7685:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "calculatedAmountB",
												"nameLocation": "7714:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "7709:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1116,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7709:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7684:48:6"
									},
									"scope": 1494,
									"src": "7446:1159:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1228,
										"nodeType": "Block",
										"src": "8820:161:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1206,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8862:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1207,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8866:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8862:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1210,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "8882:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SimpleSwap_$1494",
																		"typeString": "contract SimpleSwap"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SimpleSwap_$1494",
																		"typeString": "contract SimpleSwap"
																	}
																],
																"id": 1209,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8874:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1208,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8874:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8874:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1212,
															"name": "amountA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1197,
															"src": "8889:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1203,
																	"name": "tokenA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1193,
																	"src": "8837:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1202,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 167,
																"src": "8830:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$167_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1204,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8830:14:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														"id": 1205,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8845:16:6",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 239,
														"src": "8830:31:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$167_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8830:67:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1214,
												"nodeType": "ExpressionStatement",
												"src": "8830:67:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1219,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8939:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1220,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8943:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8939:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1223,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "8959:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SimpleSwap_$1494",
																		"typeString": "contract SimpleSwap"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SimpleSwap_$1494",
																		"typeString": "contract SimpleSwap"
																	}
																],
																"id": 1222,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8951:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1221,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8951:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8951:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1225,
															"name": "amountB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1199,
															"src": "8966:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1216,
																	"name": "tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1195,
																	"src": "8914:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1215,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 167,
																"src": "8907:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$167_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8907:14:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														"id": 1218,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8922:16:6",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 239,
														"src": "8907:31:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$167_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8907:67:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1227,
												"nodeType": "ExpressionStatement",
												"src": "8907:67:6"
											}
										]
									},
									"documentation": {
										"id": 1191,
										"nodeType": "StructuredDocumentation",
										"src": "8611:58:6",
										"text": "@dev Handles the token transfers for adding liquidity."
									},
									"id": 1229,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_performAddLiquidityTransfers",
									"nameLocation": "8683:29:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "8730:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "8722:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8722:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "8754:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "8746:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8746:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "8775:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "8770:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1196,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8770:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "8797:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "8792:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1198,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8792:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8712:98:6"
									},
									"returnParameters": {
										"id": 1201,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8820:0:6"
									},
									"scope": 1494,
									"src": "8674:307:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1284,
										"nodeType": "Block",
										"src": "9289:231:6",
										"statements": [
											{
												"expression": {
													"id": 1250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1246,
														"name": "liquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1244,
														"src": "9299:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1249,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1247,
															"name": "amountA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1234,
															"src": "9311:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1248,
															"name": "amountB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1236,
															"src": "9321:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "9311:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9299:29:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1251,
												"nodeType": "ExpressionStatement",
												"src": "9299:29:6"
											},
											{
												"expression": {
													"id": 1256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1252,
															"name": "totalLiquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "9338:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																"typeString": "mapping(bytes32 => uint256)"
															}
														},
														"id": 1254,
														"indexExpression": {
															"id": 1253,
															"name": "pairHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1232,
															"src": "9353:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9338:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1255,
														"name": "liquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1244,
														"src": "9366:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9338:37:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1257,
												"nodeType": "ExpressionStatement",
												"src": "9338:37:6"
											},
											{
												"expression": {
													"id": 1264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1258,
																"name": "liquidityBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 676,
																"src": "9385:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(bytes32 => mapping(address => uint256))"
																}
															},
															"id": 1261,
															"indexExpression": {
																"id": 1259,
																"name": "pairHash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1232,
																"src": "9402:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9385:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1262,
														"indexExpression": {
															"id": 1260,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1238,
															"src": "9412:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9385:30:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1263,
														"name": "liquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1244,
														"src": "9419:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9385:43:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1265,
												"nodeType": "ExpressionStatement",
												"src": "9385:43:6"
											},
											{
												"expression": {
													"id": 1273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1266,
															"name": "res",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1241,
															"src": "9439:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Reserve_$658_storage_ptr",
																"typeString": "struct SimpleSwap.Reserve storage pointer"
															}
														},
														"id": 1268,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "9443:8:6",
														"memberName": "reserveA",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 655,
														"src": "9439:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1271,
																"name": "amountA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1234,
																"src": "9463:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1270,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9455:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint112_$",
																"typeString": "type(uint112)"
															},
															"typeName": {
																"id": 1269,
																"name": "uint112",
																"nodeType": "ElementaryTypeName",
																"src": "9455:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1272,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9455:16:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"src": "9439:32:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"id": 1274,
												"nodeType": "ExpressionStatement",
												"src": "9439:32:6"
											},
											{
												"expression": {
													"id": 1282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1275,
															"name": "res",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1241,
															"src": "9481:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Reserve_$658_storage_ptr",
																"typeString": "struct SimpleSwap.Reserve storage pointer"
															}
														},
														"id": 1277,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "9485:8:6",
														"memberName": "reserveB",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 657,
														"src": "9481:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1280,
																"name": "amountB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1236,
																"src": "9505:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1279,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9497:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint112_$",
																"typeString": "type(uint112)"
															},
															"typeName": {
																"id": 1278,
																"name": "uint112",
																"nodeType": "ElementaryTypeName",
																"src": "9497:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1281,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9497:16:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"src": "9481:32:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"id": 1283,
												"nodeType": "ExpressionStatement",
												"src": "9481:32:6"
											}
										]
									},
									"documentation": {
										"id": 1230,
										"nodeType": "StructuredDocumentation",
										"src": "8987:58:6",
										"text": "@dev Mints liquidity tokens and updates pool reserves."
									},
									"id": 1285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintLiquidityAndUpdateReserves",
									"nameLocation": "9059:31:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "pairHash",
												"nameLocation": "9108:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "9100:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1231,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "9100:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "9131:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "9126:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1233,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9126:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "9153:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "9148:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1235,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9148:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9178:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "9170:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9170:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "res",
												"nameLocation": "9206:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "9190:19:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Reserve_$658_storage_ptr",
													"typeString": "struct SimpleSwap.Reserve"
												},
												"typeName": {
													"id": 1240,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1239,
														"name": "Reserve",
														"nameLocations": [
															"9190:7:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 658,
														"src": "9190:7:6"
													},
													"referencedDeclaration": 658,
													"src": "9190:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Reserve_$658_storage_ptr",
														"typeString": "struct SimpleSwap.Reserve"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9090:164:6"
									},
									"returnParameters": {
										"id": 1245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "9278:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "9273:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1243,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9273:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9272:16:6"
									},
									"scope": 1494,
									"src": "9050:470:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1327,
										"nodeType": "Block",
										"src": "9765:266:6",
										"statements": [
											{
												"assignments": [
													1298
												],
												"declarations": [
													{
														"constant": false,
														"id": 1298,
														"mutability": "mutable",
														"name": "pairHash",
														"nameLocation": "9783:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 1327,
														"src": "9775:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1297,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "9775:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1303,
												"initialValue": {
													"arguments": [
														{
															"id": 1300,
															"name": "tokenIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1290,
															"src": "9807:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1301,
															"name": "tokenOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1292,
															"src": "9816:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1299,
														"name": "_getPairHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1462,
														"src": "9794:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$returns$_t_bytes32_$",
															"typeString": "function (address,address) pure returns (bytes32)"
														}
													},
													"id": 1302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9794:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9775:50:6"
											},
											{
												"assignments": [
													1306
												],
												"declarations": [
													{
														"constant": false,
														"id": 1306,
														"mutability": "mutable",
														"name": "res",
														"nameLocation": "9850:3:6",
														"nodeType": "VariableDeclaration",
														"scope": 1327,
														"src": "9835:18:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Reserve_$658_memory_ptr",
															"typeString": "struct SimpleSwap.Reserve"
														},
														"typeName": {
															"id": 1305,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1304,
																"name": "Reserve",
																"nameLocations": [
																	"9835:7:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 658,
																"src": "9835:7:6"
															},
															"referencedDeclaration": 658,
															"src": "9835:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Reserve_$658_storage_ptr",
																"typeString": "struct SimpleSwap.Reserve"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1310,
												"initialValue": {
													"baseExpression": {
														"id": 1307,
														"name": "reserves",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 664,
														"src": "9856:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Reserve_$658_storage_$",
															"typeString": "mapping(bytes32 => struct SimpleSwap.Reserve storage ref)"
														}
													},
													"id": 1309,
													"indexExpression": {
														"id": 1308,
														"name": "pairHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1298,
														"src": "9865:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9856:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Reserve_$658_storage",
														"typeString": "struct SimpleSwap.Reserve storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9835:39:6"
											},
											{
												"assignments": [
													1312,
													1314
												],
												"declarations": [
													{
														"constant": false,
														"id": 1312,
														"mutability": "mutable",
														"name": "reserveIn",
														"nameLocation": "9890:9:6",
														"nodeType": "VariableDeclaration",
														"scope": 1327,
														"src": "9885:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1311,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "9885:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1314,
														"mutability": "mutable",
														"name": "reserveOut",
														"nameLocation": "9906:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1327,
														"src": "9901:15:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1313,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "9901:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1320,
												"initialValue": {
													"arguments": [
														{
															"id": 1316,
															"name": "tokenIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1290,
															"src": "9939:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1317,
															"name": "tokenOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1292,
															"src": "9948:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1318,
															"name": "res",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1306,
															"src": "9958:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Reserve_$658_memory_ptr",
																"typeString": "struct SimpleSwap.Reserve memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_struct$_Reserve_$658_memory_ptr",
																"typeString": "struct SimpleSwap.Reserve memory"
															}
														],
														"id": 1315,
														"name": "_getSortedReserves",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1493,
														"src": "9920:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_struct$_Reserve_$658_memory_ptr_$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function (address,address,struct SimpleSwap.Reserve memory) pure returns (uint256,uint256)"
														}
													},
													"id": 1319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9920:42:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9884:78:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1322,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1288,
															"src": "9992:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1323,
															"name": "reserveIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1312,
															"src": "10002:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1324,
															"name": "reserveOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1314,
															"src": "10013:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1321,
														"name": "getAmountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1099,
														"src": "9979:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9979:45:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1296,
												"id": 1326,
												"nodeType": "Return",
												"src": "9972:52:6"
											}
										]
									},
									"documentation": {
										"id": 1286,
										"nodeType": "StructuredDocumentation",
										"src": "9602:49:6",
										"text": "@dev Internal helper to calculate swap output"
									},
									"id": 1328,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_calculateSwapOutput",
									"nameLocation": "9665:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1288,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "9691:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1328,
												"src": "9686:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1287,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9686:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1290,
												"mutability": "mutable",
												"name": "tokenIn",
												"nameLocation": "9709:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1328,
												"src": "9701:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1289,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9701:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1292,
												"mutability": "mutable",
												"name": "tokenOut",
												"nameLocation": "9726:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1328,
												"src": "9718:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9718:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9685:50:6"
									},
									"returnParameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1328,
												"src": "9759:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1294,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9759:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9758:6:6"
									},
									"scope": 1494,
									"src": "9656:375:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1363,
										"nodeType": "Block",
										"src": "10222:140:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1346,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10265:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1347,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10269:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10265:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1350,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "10285:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SimpleSwap_$1494",
																		"typeString": "contract SimpleSwap"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SimpleSwap_$1494",
																		"typeString": "contract SimpleSwap"
																	}
																],
																"id": 1349,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10277:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1348,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10277:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10277:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1352,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1335,
															"src": "10292:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1343,
																	"name": "tokenIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1331,
																	"src": "10239:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1342,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 167,
																"src": "10232:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$167_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1344,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10232:15:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														"id": 1345,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10248:16:6",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 239,
														"src": "10232:32:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$167_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10232:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1354,
												"nodeType": "ExpressionStatement",
												"src": "10232:69:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1359,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1339,
															"src": "10341:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1360,
															"name": "amountOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1337,
															"src": "10345:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1356,
																	"name": "tokenOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1333,
																	"src": "10318:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1355,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 167,
																"src": "10311:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$167_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1357,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10311:16:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														"id": 1358,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10328:12:6",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 212,
														"src": "10311:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$167_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10311:44:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1362,
												"nodeType": "ExpressionStatement",
												"src": "10311:44:6"
											}
										]
									},
									"documentation": {
										"id": 1329,
										"nodeType": "StructuredDocumentation",
										"src": "10037:62:6",
										"text": "@dev Internal helper to perform token transfers for a swap"
									},
									"id": 1364,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_performSwapTransfers",
									"nameLocation": "10113:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1331,
												"mutability": "mutable",
												"name": "tokenIn",
												"nameLocation": "10143:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "10135:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10135:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1333,
												"mutability": "mutable",
												"name": "tokenOut",
												"nameLocation": "10160:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "10152:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10152:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1335,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "10175:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "10170:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1334,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10170:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "10190:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "10185:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1336,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10185:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1339,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10209:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "10201:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10201:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10134:78:6"
									},
									"returnParameters": {
										"id": 1341,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10222:0:6"
									},
									"scope": 1494,
									"src": "10104:258:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1432,
										"nodeType": "Block",
										"src": "10538:368:6",
										"statements": [
											{
												"assignments": [
													1377
												],
												"declarations": [
													{
														"constant": false,
														"id": 1377,
														"mutability": "mutable",
														"name": "pairHash",
														"nameLocation": "10556:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 1432,
														"src": "10548:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1376,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "10548:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1382,
												"initialValue": {
													"arguments": [
														{
															"id": 1379,
															"name": "tokenIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1367,
															"src": "10580:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1380,
															"name": "tokenOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1369,
															"src": "10589:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1378,
														"name": "_getPairHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1462,
														"src": "10567:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$returns$_t_bytes32_$",
															"typeString": "function (address,address) pure returns (bytes32)"
														}
													},
													"id": 1381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10567:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10548:50:6"
											},
											{
												"assignments": [
													1385
												],
												"declarations": [
													{
														"constant": false,
														"id": 1385,
														"mutability": "mutable",
														"name": "res",
														"nameLocation": "10624:3:6",
														"nodeType": "VariableDeclaration",
														"scope": 1432,
														"src": "10608:19:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Reserve_$658_storage_ptr",
															"typeString": "struct SimpleSwap.Reserve"
														},
														"typeName": {
															"id": 1384,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1383,
																"name": "Reserve",
																"nameLocations": [
																	"10608:7:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 658,
																"src": "10608:7:6"
															},
															"referencedDeclaration": 658,
															"src": "10608:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Reserve_$658_storage_ptr",
																"typeString": "struct SimpleSwap.Reserve"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1389,
												"initialValue": {
													"baseExpression": {
														"id": 1386,
														"name": "reserves",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 664,
														"src": "10630:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Reserve_$658_storage_$",
															"typeString": "mapping(bytes32 => struct SimpleSwap.Reserve storage ref)"
														}
													},
													"id": 1388,
													"indexExpression": {
														"id": 1387,
														"name": "pairHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1377,
														"src": "10639:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10630:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Reserve_$658_storage",
														"typeString": "struct SimpleSwap.Reserve storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10608:40:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1390,
														"name": "tokenIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1367,
														"src": "10662:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1391,
														"name": "tokenOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1369,
														"src": "10672:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10662:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1430,
													"nodeType": "Block",
													"src": "10794:106:6",
													"statements": [
														{
															"expression": {
																"id": 1419,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1412,
																		"name": "res",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1385,
																		"src": "10808:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Reserve_$658_storage_ptr",
																			"typeString": "struct SimpleSwap.Reserve storage pointer"
																		}
																	},
																	"id": 1414,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "10812:8:6",
																	"memberName": "reserveB",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 657,
																	"src": "10808:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1417,
																			"name": "amountIn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1371,
																			"src": "10832:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1416,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10824:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint112_$",
																			"typeString": "type(uint112)"
																		},
																		"typeName": {
																			"id": 1415,
																			"name": "uint112",
																			"nodeType": "ElementaryTypeName",
																			"src": "10824:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1418,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10824:17:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																},
																"src": "10808:33:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint112",
																	"typeString": "uint112"
																}
															},
															"id": 1420,
															"nodeType": "ExpressionStatement",
															"src": "10808:33:6"
														},
														{
															"expression": {
																"id": 1428,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1421,
																		"name": "res",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1385,
																		"src": "10855:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Reserve_$658_storage_ptr",
																			"typeString": "struct SimpleSwap.Reserve storage pointer"
																		}
																	},
																	"id": 1423,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "10859:8:6",
																	"memberName": "reserveA",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 655,
																	"src": "10855:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1426,
																			"name": "amountOut",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1373,
																			"src": "10879:9:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10871:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint112_$",
																			"typeString": "type(uint112)"
																		},
																		"typeName": {
																			"id": 1424,
																			"name": "uint112",
																			"nodeType": "ElementaryTypeName",
																			"src": "10871:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1427,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10871:18:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																},
																"src": "10855:34:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint112",
																	"typeString": "uint112"
																}
															},
															"id": 1429,
															"nodeType": "ExpressionStatement",
															"src": "10855:34:6"
														}
													]
												},
												"id": 1431,
												"nodeType": "IfStatement",
												"src": "10658:242:6",
												"trueBody": {
													"id": 1411,
													"nodeType": "Block",
													"src": "10682:106:6",
													"statements": [
														{
															"expression": {
																"id": 1400,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1393,
																		"name": "res",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1385,
																		"src": "10696:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Reserve_$658_storage_ptr",
																			"typeString": "struct SimpleSwap.Reserve storage pointer"
																		}
																	},
																	"id": 1395,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "10700:8:6",
																	"memberName": "reserveA",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 655,
																	"src": "10696:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1398,
																			"name": "amountIn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1371,
																			"src": "10720:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1397,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10712:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint112_$",
																			"typeString": "type(uint112)"
																		},
																		"typeName": {
																			"id": 1396,
																			"name": "uint112",
																			"nodeType": "ElementaryTypeName",
																			"src": "10712:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1399,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10712:17:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																},
																"src": "10696:33:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint112",
																	"typeString": "uint112"
																}
															},
															"id": 1401,
															"nodeType": "ExpressionStatement",
															"src": "10696:33:6"
														},
														{
															"expression": {
																"id": 1409,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1402,
																		"name": "res",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1385,
																		"src": "10743:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Reserve_$658_storage_ptr",
																			"typeString": "struct SimpleSwap.Reserve storage pointer"
																		}
																	},
																	"id": 1404,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "10747:8:6",
																	"memberName": "reserveB",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 657,
																	"src": "10743:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1407,
																			"name": "amountOut",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1373,
																			"src": "10767:9:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1406,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10759:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint112_$",
																			"typeString": "type(uint112)"
																		},
																		"typeName": {
																			"id": 1405,
																			"name": "uint112",
																			"nodeType": "ElementaryTypeName",
																			"src": "10759:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1408,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10759:18:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																},
																"src": "10743:34:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint112",
																	"typeString": "uint112"
																}
															},
															"id": 1410,
															"nodeType": "ExpressionStatement",
															"src": "10743:34:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1365,
										"nodeType": "StructuredDocumentation",
										"src": "10368:56:6",
										"text": "@dev Internal helper to update reserves after a swap"
									},
									"id": 1433,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updateReservesAfterSwap",
									"nameLocation": "10438:24:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1367,
												"mutability": "mutable",
												"name": "tokenIn",
												"nameLocation": "10471:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "10463:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10463:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1369,
												"mutability": "mutable",
												"name": "tokenOut",
												"nameLocation": "10488:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "10480:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10480:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "10503:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "10498:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1370,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10498:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1373,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "10518:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "10513:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1372,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10513:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10462:66:6"
									},
									"returnParameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10538:0:6"
									},
									"scope": 1494,
									"src": "10429:477:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1461,
										"nodeType": "Block",
										"src": "11062:121:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1448,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1446,
																			"name": "tokenA",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1436,
																			"src": "11106:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 1447,
																			"name": "tokenB",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1438,
																			"src": "11115:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "11106:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 1450,
																		"name": "tokenB",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1438,
																		"src": "11133:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 1451,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "11106:33:6",
																	"trueExpression": {
																		"id": 1449,
																		"name": "tokenA",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1436,
																		"src": "11124:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1454,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1452,
																			"name": "tokenA",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1436,
																			"src": "11141:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 1453,
																			"name": "tokenB",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1438,
																			"src": "11150:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "11141:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 1456,
																		"name": "tokenA",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1436,
																		"src": "11168:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 1457,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "11141:33:6",
																	"trueExpression": {
																		"id": 1455,
																		"name": "tokenB",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1438,
																		"src": "11159:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1444,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "11089:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1445,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "11093:12:6",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "11089:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1458,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11089:86:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1443,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "11079:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11079:97:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1442,
												"id": 1460,
												"nodeType": "Return",
												"src": "11072:104:6"
											}
										]
									},
									"documentation": {
										"id": 1434,
										"nodeType": "StructuredDocumentation",
										"src": "10912:59:6",
										"text": "@dev Generates a unique hash for a token pair (ordered)"
									},
									"id": 1462,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getPairHash",
									"nameLocation": "10985:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "11006:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1462,
												"src": "10998:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10998:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1438,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "11022:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1462,
												"src": "11014:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11014:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10997:32:6"
									},
									"returnParameters": {
										"id": 1442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1441,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1462,
												"src": "11053:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1440,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "11053:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11052:9:6"
									},
									"scope": 1494,
									"src": "10976:207:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1492,
										"nodeType": "Block",
										"src": "11365:101:6",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1479,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1477,
															"name": "tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1465,
															"src": "11382:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1478,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1467,
															"src": "11391:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "11382:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"components": [
															{
																"expression": {
																	"id": 1485,
																	"name": "res",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1470,
																	"src": "11432:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Reserve_$658_memory_ptr",
																		"typeString": "struct SimpleSwap.Reserve memory"
																	}
																},
																"id": 1486,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11436:8:6",
																"memberName": "reserveB",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 657,
																"src": "11432:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint112",
																	"typeString": "uint112"
																}
															},
															{
																"expression": {
																	"id": 1487,
																	"name": "res",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1470,
																	"src": "11446:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Reserve_$658_memory_ptr",
																		"typeString": "struct SimpleSwap.Reserve memory"
																	}
																},
																"id": 1488,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11450:8:6",
																"memberName": "reserveA",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 655,
																"src": "11446:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint112",
																	"typeString": "uint112"
																}
															}
														],
														"id": 1489,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "11431:28:6",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$",
															"typeString": "tuple(uint112,uint112)"
														}
													},
													"id": 1490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "11382:77:6",
													"trueExpression": {
														"components": [
															{
																"expression": {
																	"id": 1480,
																	"name": "res",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1470,
																	"src": "11401:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Reserve_$658_memory_ptr",
																		"typeString": "struct SimpleSwap.Reserve memory"
																	}
																},
																"id": 1481,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11405:8:6",
																"memberName": "reserveA",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 655,
																"src": "11401:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint112",
																	"typeString": "uint112"
																}
															},
															{
																"expression": {
																	"id": 1482,
																	"name": "res",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1470,
																	"src": "11415:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Reserve_$658_memory_ptr",
																		"typeString": "struct SimpleSwap.Reserve memory"
																	}
																},
																"id": 1483,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11419:8:6",
																"memberName": "reserveB",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 657,
																"src": "11415:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint112",
																	"typeString": "uint112"
																}
															}
														],
														"id": 1484,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "11400:28:6",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$",
															"typeString": "tuple(uint112,uint112)"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$",
														"typeString": "tuple(uint112,uint112)"
													}
												},
												"functionReturnParameters": 1476,
												"id": 1491,
												"nodeType": "Return",
												"src": "11375:84:6"
											}
										]
									},
									"documentation": {
										"id": 1463,
										"nodeType": "StructuredDocumentation",
										"src": "11189:56:6",
										"text": "@dev Sorts and returns reserves based on token order"
									},
									"id": 1493,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getSortedReserves",
									"nameLocation": "11259:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1465,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "11286:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "11278:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11278:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1467,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "11302:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "11294:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11294:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "res",
												"nameLocation": "11325:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "11310:18:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Reserve_$658_memory_ptr",
													"typeString": "struct SimpleSwap.Reserve"
												},
												"typeName": {
													"id": 1469,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1468,
														"name": "Reserve",
														"nameLocations": [
															"11310:7:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 658,
														"src": "11310:7:6"
													},
													"referencedDeclaration": 658,
													"src": "11310:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Reserve_$658_storage_ptr",
														"typeString": "struct SimpleSwap.Reserve"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11277:52:6"
									},
									"returnParameters": {
										"id": 1476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1473,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "11353:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1472,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11353:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1475,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "11359:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1474,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11359:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11352:12:6"
									},
									"scope": 1494,
									"src": "11250:216:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1495,
							"src": "543:10925:6",
							"usedErrors": [
								179
							],
							"usedEvents": []
						}
					],
					"src": "37:11431:6"
				},
				"id": 6
			}
		}
	}
}